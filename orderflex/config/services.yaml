# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
#parameters:
#    database_driver: pdo_pgsql
#    database_host: 127.0.0.1
#    database_port: 5432
#    database_name: database_name
#    database_user: database_user
#    database_password: database_password
#    database_driver_external: pdo_sqlsrv
#    database_host_external: a.med.cornell.edu
#    database_port_external: null
#    database_name_external: database_name_external
#    database_user_external: database_user_external
#    database_password_external: database_password_external
#    locale: en
#    secret: secret
#    delivery_strategy: realtime
#    swift_delivery_addresses:
#        - email@med.cornell.edu
#    mailer_host: smtp.gmail.com
#    mailer_port: 587
#    mailer_transport: smtp
#    mailer_user: null
#    mailer_password: null
#    mailer_auth_mode: login
#    mailer_encryption: tls
#    connection_channel: http

imports:
    - { resource: parameters.yml }
#    - { resource: "../src/App/UserdirectoryBundle/Resources/config/services.yml" }
#    - { resource: "@AppOrderformBundle/Resources/config/services.yml" }
#    - { resource: "@AppFellAppBundle/Resources/config/services.yml" }
#    - { resource: "@AppVacReqBundle/Resources/config/services.yml" }
#    - { resource: "@AppDeidentifierBundle/Resources/config/services.yml" }
#    - { resource: "@AppCallLogBundle/Resources/config/services.yml" }
#    - { resource: "@AppTranslationalResearchBundle/Resources/config/services.yml" }
#    - { resource: "@AppUserdirectoryBundle/Resources/config/setparameters.php" }   #must run after importing services
    - { resource: "../src/App/UserdirectoryBundle/Resources/config/services.yml" }
    - { resource: "../src/App/FellAppBundle/Resources/config/services.yml" }
    - { resource: "../src/App/OrderformBundle/Resources/config/services.yml" }
    - { resource: "../src/App/FellAppBundle/Resources/config/services.yml" }
    - { resource: "../src/App/VacReqBundle/Resources/config/services.yml" }
    - { resource: "../src/App/DeidentifierBundle/Resources/config/services.yml" }
    - { resource: "../src/App/CallLogBundle/Resources/config/services.yml" }
    - { resource: "../src/App/TranslationalResearchBundle/Resources/config/services.yml" }
#    - { resource: "../src/App/*/Resources/config/services.yml" }
#    - { resource: "../src/App/UserdirectoryBundle/Resources/config/setparameters.php" } #must run after importing services
    - { resource: "setparameters.php" } #must run after importing services

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: true       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    #Remove autowire for Classes using extends vendor Classes: cna be done here, for example adding folder 'Query' (App\UserdirectoryBundle\Query) to exclude
    App\:
#        resource: '../src/App/*/*'
        resource: '../src/App/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../src/App/*/{DependencyInjection,Entity,Migrations,Tests,Kernel.php,Query,Repository,Security,Services,Util}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
#        namespace: App\
        resource: '../src/App/*/*/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    #Remove autowire for Classes using extends vendor Classes
#    App\UserdirectoryBundle\Query\CastFunction:
#        autowire: false
#    App\UserdirectoryBundle\Query\GroupConcat:
#        autowire: false

#    App\Log\CustomLogger:
#        arguments: ['@logger']
#        tags:
#            - { name: monolog.logger, channel: app }

    logger:
        alias: 'monolog.logger'
        public: true

#    Monolog\Logger:
#        autowire: false

    oleg.twig.extension.date:
        class: Twig_Extensions_Extension_Date
        tags:
             - { name: 'twig.extension' }

oneup_uploader:
    mappings:
        employees_gallery:
            frontend: dropzone
            storage:
                directory: 'Uploaded/%employees.uploadpath%'
        scan_gallery:
            frontend: dropzone
            storage:
                directory: 'Uploaded/%scan.uploadpath%'
        fellapp_gallery:
            frontend: dropzone
            storage:
                directory: 'Uploaded/%fellapp.uploadpath%'
        vacreq_gallery:
            frontend: dropzone
            storage:
                directory: 'Uploaded/%vacreq.uploadpath%'
        transres_gallery:
            frontend: dropzone
            storage:
                directory: 'Uploaded/%transres.uploadpath%'
        calllog_gallery:
            frontend: dropzone
            storage:
                directory: 'Uploaded/%calllog.uploadpath%'