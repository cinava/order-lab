
{% extends "AppVacReqBundle/Default/base.html.twig" %}


{% block title %}
    {{ title }}
{% endblock %}



{% block content %}
    <h4 class="text-info" align="center">
        {{ title }}
        {#<button type="button" class="btn btn-default btn-sm" onClick="importHolidayDates(this)" >Update Now</button>#}
    </h4>

    {#<p>#}
        {#<button type="button" class="btn btn-default btn-sm" onClick="importHolidayDates(this)" >Import Now</button>#}
    {#</p>#}

    {#{% for holiday in holidays %}#}
        {#{{ holiday.getName() }}:#}
        {#{{ holiday.getHolidayDate()|date('Y-m-d') }} -#}
        {#{{ holiday.getHolidayName() }} -#}
        {#Observed by:#}
        {#{% for institution in holiday.getInstitutions() %}#}
            {#{{ institution.getOptimalName() }};#}
        {#{% endfor %}#}

        {#<br>#}
    {#{% endfor %}#}


    <form action="{{ path(routename) }}" method="get" class="well form-search">

        <p>
        <div class="row">

            {#<div class="col-xs-2">#}
                {#<div class="input-group input-group-reg date allow-future-date">#}
                    {#{{ form_widget(vacreqfilter.startdate) }}#}
                    {#<span class="add-on input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>#}
                {#</div>#}
            {#</div>#}

            {#<div class="col-xs-2">#}
                {#<div class="input-group input-group-reg date allow-future-date">#}
                    {#{{ form_widget(vacreqfilter.enddate) }}#}
                    {#<span class="add-on input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>#}
                {#</div>#}
            {#</div>#}

            {#<div class="col-xs-2">#}
                {#{{ form_row(vacreqfilter.academicYear) }}#}
            {#</div>#}

            <div class="col-xs-2">
                {#{{ form_row(filterform.years) }}#}
                {{ form_row(filterform.years, {'attr': {'placeholder': 'Years'}}) }}
            </div>

            {#<div class="col-xs-2">#}
                {#{{ form_row(filterform.endYear) }}#}
            {#</div>#}

            <div class="col-xs-1">
                <button type="submit" class="btn btn-sm btn-default">Display</button>
            </div>

        </div>
        </p>

        {{ form_rest(filterform) }}

    </form>


    <table class="records_list table table-hover table-condensed text-left table-bordered">
        <thead>
        <tr>
            <th>{{ knp_pagination_sortable(pagination, 'ID', 'holiday.id') }}</th>

            <th>{{ knp_pagination_sortable(pagination, 'Date', 'holiday.holidayDate') }}</th>

            <th>{{ knp_pagination_sortable(pagination, 'Name', 'holiday.holidayName') }}</th>

            <th>{{ knp_pagination_sortable(pagination, 'Organizational Groups', 'holiday.institutions') }}</th>

            <th>{{ knp_pagination_sortable(pagination, 'Country', 'holiday.country') }}</th>

            <th style="border-left: 2px solid gray;">
                Actions
            </th>
        </tr>
        </thead>
        <tbody data-link="row" class="rowlink">

        {% for entity in pagination %}

            <tr>

                <td data-toggle="tooltip" data-container="body">
                    <a href="{{ path('vacreqholidays_edit', { 'id': entity.id }) }}">{{ entity.id }}</a>
                </td>

                <td>
                    {{ entity.getHolidayDate()|date('D, M d Y',false) }}
                </td>

                <td>
                    {{ entity.getHolidayName() }}
                </td>

                <td>
                    {% for institution in entity.getInstitutions() %}
                        {{ institution.getOptimalName() }}{% if not loop.last %};{% endif %}
                    {% endfor %}
                </td>

                <td>
                    {{ entity.country }}
                </td>


                {#Action#}
                <td class="rowlink-skip" style="border-left: 2px solid gray;">
                    <div class="btn-group">
                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                            Action <span class="caret"></span>
                        </button>

                        <ul class="dropdown-menu dropdown-menu-right">

                            <li>
                                {#{{ path(vacreq_sitename~'_showuser', { 'id': entity.user.id }) }}#}
                                <a href="{{ path('vacreqholidays_edit', { 'id': entity.id }) }}" target="_blank">Edit</a>
                                {#<a href="" target="_blank">Edit</a>#}
                            </li>

                            {#<li>#}
                                {#<a href="{{ path(vacreq_sitename~'_floating_show', { 'id': entity.id }) }}" target="_blank">View/Edit</a>#}
                            {#</li>#}
                            {#/order/index_dev.php/directory/admin/change-list-element-type/disabled/1/vacreqholidays#}
                            {#platform_list_manager_element_change_type#}
                            {#/change-list-element-type/{type}/{entityId}/{pathbase}/{postpath}#}

                        </ul>
                    </div>
                </td>

            </tr>

        {% endfor %}
        </tbody>
    </table>

    <p>
        <a class="btn btn-default" href="{{ path('vacreq_update_holiday_dates') }}">Populate the holiday date list with known holidays for the previous 20 and the next 20 years</a>
    </p>

    {#vacreqholidays_new#}
    <a href="{{ path('vacreqholidays_new') }}" target="_blank">Add a new holiday date and name manually</a>

    <div class="navigation">
        {{ knp_pagination_render(pagination) }}
    </div>


{% endblock %}




{#{% block additionaljs %}#}
    {#<script src="{{ asset('orderassets/AppVacReqBundle/form/js/holidayDays.js') }}"></script>#}
{#{% endblock %}#}

{#{% block additionalcss %}#}
    {#<link rel="stylesheet" type="text/css" href="{{ asset('orderassets/AppUserdirectoryBundle/fontawesome/css/all.min.css') }}" />#}
{#{% endblock %}#}


{% block additionaljs %}

    {#<script src="{{ asset('orderassets/AppFellAppBundle/form/js/interview-modal.js') }}"></script>#}
    {#<script src="{{ asset('orderassets/AppFellAppBundle/form/js/rank-modal.js') }}"></script>#}
    {#<script src="{{ asset('orderassets/AppFellAppBundle/form/js/status-notification-modal.js') }}"></script>#}
    {#<script src="{{ asset('orderassets/AppFellAppBundle/form/js/send-notification-emails.js') }}"></script>#}

    <script language="Javascript">

        //TODO: when date is set by request, the dates are not changable.
        // Probably, the default dates have to be set by JS

        $(document).ready(function() {

            $('[data-toggle="tooltip"]').tooltip({html: true});

            var target = ".datepicker-only-year";
            if(1) {
                var datefilter = $(target).datepicker( {
                    autoclose: true,
                    format: " yyyy",
                    viewMode: "years",
                    minViewMode: "years",
                    orientation: 'auto', //'auto top'
                    //multidateSeparator: " ",
                    multidate: true,
                    clearBtn: true
                });


                datefilter.on('changeDate', function(e){
                    var newyear = e.date.getFullYear();
                    newyear = newyear.toString();
                    newyear = newyear.trim();
                    var years = $('#filter_years').val();
                    years = years.trim();
                    console.log('newyear=['+newyear+"], years=["+years+"]");
                    var yearsArr = years.split(',');
                    console.log("original yearsArr=",yearsArr);
                    var count = utilGetOccurrences(years,newyear);
                    console.log("count="+count);
                    if( count == 2 ) {
                        //remove newyear from yearsArr
                        years = utilRemoveItemAll(yearsArr,newyear);
                        console.log("after remove all years=",years);
                    } else {
                        //remove duplicate
                        years = utilGetUniqArr(yearsArr);
                        console.log("unique years=",years);
                    }

                    console.log("new years=",years);
                    $('#filter_years').val(years);
                    datefilter.datepicker('update');
                    //datefilter.data('datepicker').setDates(years);
                });

            } else {
                //https://bootstrap-datepicker.readthedocs.io/en/v1.5.0/options.html
                var datefilter = $(target).datepicker({
                    autoclose: true,
                    format: "yyyy",
                    //inline: false,
                    viewMode: "years",
                    minViewMode: "years",
                    startView: "years",
                    multidate: true,
                    clearBtn: true,
                    //multidateRemoveDuplicate: true,
                    //multidateSeparator: " "
                });

                //https://stackoverflow.com/questions/15423467/bootstrap-datepicker-today-as-default
                //$(target).datepicker('setDate', new Date());
                //https://stackoverflow.com/questions/50662814/how-to-have-datepicker-set-default-year

                //datefilter.data('datepicker').setDates(["2022","2023"]);
                //datefilter.datepicker('update', new Date());
                //datefilter.datepicker('update', new Date());
                //datefilter.datepicker('update');

                //datefilter.data({date: '2022-08-08'});
                //datefilter.datepicker('update');
                //datefilter.datepicker().children('input').val('2022-08-08');

                //https://stackoverflow.com/questions/29314465/bootstrap-datepicker-duplication-when-using-options-and-methods

                //remove if newyear=[2025], years=[2023,2024,2025,2025]
                //remove duplicate newyear=[2026], years=[2023,2024,2025,2026]

                datefilter.on('changeDate', function(e){
                    var newyear = e.date.getFullYear();
                    newyear = newyear.toString();
                    newyear = newyear.trim();
                    var years = $('#filter_years').val();
                    years = years.trim();
                    console.log('newyear=['+newyear+"], years=["+years+"]");
                    var yearsArr = years.split(',');
                    console.log("original yearsArr=",yearsArr);
                    var count = utilGetOccurrences(years,newyear);
                    console.log("count="+count);
                    if( count == 2 ) {
                        //remove newyear from yearsArr
                        years = utilRemoveItemAll(yearsArr,newyear);
                        console.log("after remove all years=",years);
                    } else {
                        //remove duplicate
                        years = utilGetUniqArr(yearsArr);
                        console.log("unique years=",years);
                    }

                    console.log("new years=",years);
                    $('#filter_years').val(years);
                    datefilter.datepicker('update');
                    //datefilter.data('datepicker').setDates(years);
                });

                //https://pushkarkinikar.wordpress.com/2014/10/27/re-selecting-same-date-in-datepicker-from-boot-strap/
//                setMultidateRemoveDuplicate: function (multidateRemoveDuplicate) {
//                    this._process_options({ multidateRemoveDuplicate: multidateRemoveDuplicate });
//                    this.update();
//                    this.updateNavArrows();
//                },
            }

        });

        function utilGetUniqArr(a) {
            var prims = {"boolean":{}, "number":{}, "string":{}}, objs = [];

            return a.filter(function(item) {
                var type = typeof item;
                if(type in prims)
                    return prims[type].hasOwnProperty(item) ? false : (prims[type][item] = true);
                else
                    return objs.indexOf(item) >= 0 ? false : objs.push(item);
            });
        }
        //https://stackoverflow.com/questions/4009756/how-to-count-string-occurrence-in-string
        /** Function that count occurrences of a substring in a string;
         * @param {String} string               The string
         * @param {String} subString            The sub string to search for
         * @param {Boolean} [allowOverlapping]  Optional. (Default:false)
         *
         * @author Vitim.us https://gist.github.com/victornpb/7736865
         * @see Unit Test https://jsfiddle.net/Victornpb/5axuh96u/
         * @see https://stackoverflow.com/a/7924240/938822
         */
        function utilGetOccurrences(string, subString, allowOverlapping) {

            string += "";
            subString += "";
            if (subString.length <= 0) return (string.length + 1);

            var n = 0,
                    pos = 0,
                    step = allowOverlapping ? 1 : subString.length;

            while (true) {
                pos = string.indexOf(subString, pos);
                if (pos >= 0) {
                    ++n;
                    pos += step;
                } else break;
            }
            return n;
        }
        function utilRemoveItemAll(arr, value) {
            var i = 0;
            while (i < arr.length) {
                if (arr[i] === value) {
                    arr.splice(i, 1);
                } else {
                    ++i;
                }
            }
            return arr;
        }

    </script>

{% endblock %}

