{#
    Copyright 2017 Cornell University

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
#}

{% extends "AppOrderformBundle/Default/base.html.twig" %}

{% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}

{% import "AppOrderformBundle/Default/patientmacros.html.twig" as patientmacros %}

{% import "AppOrderformBundle/Default/ordercommon.html.twig" as order %}

{% form_theme form 'AppOrderformBundle/Default/common_widget.html.twig' %}
{#{% form_theme form 'AppOrderformBundle/Default/collection_widget.html.twig' %}#}

{% set formpath = 'multi_create' %}

{% if formtype == 'One-Slide Scan Order' %}
    {% set formpath = 'singleorder_create' %}
{% endif %}

{% if formtype == 'Multi-Slide Scan Order' %}
    {% set formpath = 'multi_create' %}
{% endif %}

{% if formtype == 'Table-View Scan Order' %}
    {% set formpath = 'multi_create' %}
{% endif %}

{% block title %}
    {{ formtype }}
{% endblock %}


{% block content %}

    {% set showpath = 'multy_show' %}
    {% set amendpath = 'order_amend' %}

    {% if amendable is not defined %}
        {% set amendable = false %}
    {% endif %}

    {% if changestatus is not defined %}
        {% set changestatus = false %}
    {% endif %}

    {% if not datastructure %}
        {{ order.orderheader( form, formtype, type, showpath, amendpath, amendable, changestatus ) }}
    {% else %}
        {{ order.ordertitle(form, formtype) }}
    {% endif %}

    {#history#}
    {% if history is defined and history %}
        {{ formmacros.history_info(history,form) }}
    {% endif %}

    {#<input type="hidden" id="formtype" value="multi" />#}
    <input type="hidden" id="orderformtype" value="multi" />
    <input type="hidden" id="formcycle" value="{{ type }}" />

    {% if entity is defined and entity.dataqualitymrnacc|length > 0 %}
        <div class="alert alert-danger">
            <p>This order contained an MRN-Accession Number association that conflicted with an already existing MRN-Accession Number association.</p>
            <a href="#existing_validation_error">Please see the note below for details.</a>
        </div>
    {% endif %}

    {#<p><button onclick="checkIfOrderWasModified()" type="button">Test Form Modified</button></p>#}

    {# ################################### START FORM ##################################### #}
    <form id="scanorderform" action="{{ path(formpath) }}" method="post">
    {#{{ form_start(form,{'attr': {'id': 'scanorderform'}}) }}#}
    {#{{ form_start(form) }}#}

    {{ form_widget(form.oid) }}

    {% if type == 'show' %}
        {{ formmacros.message_panel(form, "Scan Order Info") }}
    {% endif %}

    <br />

    {% include 'AppOrderformBundle/MultiScanOrder/edu_res.html.twig' with {"type": type} %}

{#{% if 0 %}#}
    {#{% if type != 'show' %}#}
        {#{% set mrnHtml = formmacros.inputField(form.patient.vars.prototype.mrn,type,"key","prototype","","","","patientmrn","") %}#}
        {#{% set dobHtml = formmacros.inputField(form.patient.vars.prototype.dob,type,"date","prototype") %}#}
        {#{% set clinicalhistoryHtml = formmacros.inputField(form.patient.vars.prototype.clinicalHistory,type,"","prototype") %}#}

        {#{% set accessionHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.accession,type,"key","prototype","","","","accessionaccession","") %}#}

        {#{% set encounterHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.name,type,"","prototype") %}#}
        {#{% set encounternumberHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.number,type,"","prototype","","","nolabel") %}#}
        {#{% set encounterdateHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.date,type,"date","prototype") %}#}

        {#{% set procedurenameHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.name,type,"","prototype") %}#}
        {#{% set procedurenumberHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.number,type,"","prototype","","","nolabel") %}#}
        {#{% set proceduredateHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.date,type,"date","prototype") %}#}

        {#{% set patsuffixHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.patsuffix,type,"","prototype","","","","encounterpatsuffix") %}#}
        {#{% set patlastnameHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.patlastname,type,"","prototype","","","","encounterpatlastname") %}#}
        {#{% set patfirstnameHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.patfirstname,type,"","prototype","","","","encounterpatfirstname") %}#}
        {#{% set patmiddlenameHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.patmiddlename,type,"","prototype","","","","encounterpatmiddlename") %}#}

        {#{% set patageHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.patage,type,"","prototype") %}#}
        {#{% set patsexHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.patsex,type,"","prototype") %}#}
        {#{% set patpathistoryHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.pathistory,type,"","prototype") %}#}

        {#{% set accessiondateHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.accessionDate,type,"date","prototype") %}#}

        {#{% set partnameHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.partname,type,"key","prototype") %}#}
        {#{% set sourceorganHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.sourceOrgan,type,"","prototype") %}#}
        {#{% set parttitleHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.parttitle,type,"","prototype") %}#}
        {#{% set paperHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.paper,type,"paper","prototype") %}#}
        {#{% set descriptionHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.description,type,"","prototype") %}#}
        {#{% set diagnosisHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.disident,type,"","prototype") %}#}

        {#{% set diffDiagnosesField = form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.diffDisident %}#}
        {#{% set diffDiagnosesWidget = formmacros.fieldWidget(diffDiagnosesField) %}#}
        {#{% set diffDiagnosesHtml = formmacros.inputField(diffDiagnosesField,type,"partdiffDisident","prototype",diffDiagnosesWidget,"") %}#}

        {#{% set diseaseTypeHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.diseaseType,type,"diseaseType","prototype") %}#}

        {#{% set blocknameHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.blockname,type,"key","prototype") %}#}
        {#{% set sectionsourceHtml = formmacros.inputField(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.sectionsource,type,"","prototype") %}#}

        {#{% set relevantScansField = form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.slide.vars.prototype.relevantScans %}#}
        {#{% set relevantScansWidget = formmacros.fieldWidgetNoOther(relevantScansField) %}#}
        {#{% set relevantScansHtml = formmacros.inputField(relevantScansField,type,"sliderelevantScans","prototype",relevantScansWidget,"") %}#}

        {#{% set specialStainsField = form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.specialStains %}#}
        {#{% set specialStainsWidget = formmacros.fieldSpecialStainsWidget(specialStainsField) %}#}
        {#{% set specialStainsHtml = formmacros.inputField(specialStainsField,type,"blockspecialStains","prototype",specialStainsWidget,"buttonbottom","") %}#}

    {#{% endif %}#}

    {#{% set uid = '__patient_____encounter_____procedure_____accession_____part_____block_____slide_____scan_____stain__' %}#}

    {#<div id="form-prototype-data"#}

      {#{% if type != 'show' %}#}

          {#data-prototype-dataquality = "{{ formmacros.dataQualityWidgetNotMapped(form.conflicts.vars.prototype)|e }}"#}

          {#data-prototype-patient="{{ formmacros.patientForm(#}
            {#form.patient.vars.prototype,#}
            {#"check",#}
            {#uid,#}
            {#type,#}
            {#form.vars.value.status,#}
            {#mrnHtml,#}
            {#dobHtml,#}
            {#clinicalhistoryHtml#}
          {#)|e }}"#}

          {#data-prototype-patientmrn=               "{{ mrnHtml|e }}"#}
          {#data-prototype-patientdob=               "{{ dobHtml|e }}"#}
          {#data-prototype-patientclinicalhistory=   "{{ clinicalhistoryHtml|e }}"#}

         {#data-prototype-encounter="#}
         {#{{ formmacros.accessionForm(#}
                {#form.patient.vars.prototype.encounter.vars.prototype,#}
                {#form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype,#}
                {#form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype,#}
                {#"check",uid,type,form.vars.value.status,#}
                 {#procedurenameHtml,#}
                 {#accessionHtml,#}
                 {#accessiondateHtml,#}
                 {#encounterdateHtml,#}
                 {#patsuffixHtml,#}
                 {#patlastnameHtml,#}
                 {#patfirstnameHtml,#}
                 {#patmiddlenameHtml,#}
                 {#patageHtml,#}
                 {#patsexHtml,#}
                 {#patpathistoryHtml#}
         {#)|e }}#}
         {#"#}
         {#data-prototype-accessionaccession= "{{ accessionHtml|e }}"#}
         {#data-prototype-accessionaccessiondate= "{{ accessiondateHtml|e }}"#}
         {#data-prototype-encounternumber= "{{ encounternumberHtml|e }}"#}
         {#data-prototype-procedurename= "{{ procedurenameHtml|e }}"#}
         {#data-prototype-procedurenumber= "{{ procedurenumberHtml|e }}"#}
         {#data-prototype-encounterdate= "{{ encounterdateHtml|e }}"#}
         {#data-prototype-encounterpatsuffix= "{{ patsuffixHtml|e }}"#}
         {#data-prototype-encounterpatlastname= "{{ patlastnameHtml|e }}"#}
         {#data-prototype-encounterpatage= "{{ patageHtml|e }}"#}
         {#data-prototype-encounterpatsex= "{{ patsexHtml|e }}"#}
         {#data-prototype-encounterpatpathistory= "{{ patpathistoryHtml|e }}"#}

          {#data-prototype-part="#}
            {#{{ formmacros.partForm( form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype, "check", uid, type, form.vars.value.status,#}
                  {#partnameHtml,#}
                  {#sourceorganHtml,#}
                  {#parttitleHtml,#}
                  {#paperHtml,#}
                  {#descriptionHtml,#}
                  {#diagnosisHtml,#}
                  {#diffDiagnosesHtml,#}
                  {#diseaseTypeHtml#}
               {#)|e }}#}
          {#"#}

          {#requires for adding field by pressing +; to remove label replace the last "" by "nolabel"; withspace=""#}
          {#data-prototype-addpartdiffDisident="{{ formmacros.inputField(diffDiagnosesField,type,"partdiffDisident","prototype",diffDiagnosesWidget,"","","","","minusplusbtn")|e }}"#}
          {#requires for check form to populate fields by AJAX (no '+' buttons)#}
          {#data-prototype-partdiffDisident="{{ formmacros.inputField(diffDiagnosesField,type,"partdiffDisident","prototype",diffDiagnosesWidget,"","","","","plusbtn")|e }}"#}
          {#data-prototype-partpaper= "{{ paperHtml|e }}"#}

         {#data-prototype-block="#}
        {#{{ formmacros.blockForm( form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype, "check", uid, type, form.vars.value.status, blocknameHtml, sectionsourceHtml, specialStainsHtml)|e }}#}
        {#"#}
          {#data-prototype-slide="#}
        {#{{ formmacros.slideForm( form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.slide.vars.prototype, "", uid, type,#}
          {#formmacros.field(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.slide.vars.prototype.slidetype),#}
          {#formmacros.field(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.slide.vars.prototype.stain.vars.prototype.field),#}
          {#formmacros.field(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.slide.vars.prototype.scan.vars.prototype.magnification),#}
          {#formmacros.field(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.slide.vars.prototype.scan.vars.prototype.scanregion),#}
          {#formmacros.field(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.slide.vars.prototype.scan.vars.prototype.note),#}
          {#formmacros.field(form.patient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.slide.vars.prototype.microscopicdescr),#}
          {#relevantScansHtml#}
          {#)|e }}#}
        {#"#}

          {#requires for adding field by pressing +; to remove label replace the last "" by "nolabel"#}
          {#data-prototype-addsliderelevantScans="{{ formmacros.inputField(relevantScansField,type,"sliderelevantScans","prototype",relevantScansWidget,"","","","","minusplusbtn")|e }}"#}
          {#requires for check form to populate fields by AJAX (no '+' buttons)#}
          {#data-prototype-sliderelevantScans="{{ formmacros.inputField(relevantScansField,type,"sliderelevantScans","prototype",relevantScansWidget,"","","","","plusbtn")|e }}"#}

          {#requires for adding field by pressing +; to remove label replace the last "" by "nolabel"#}
          {#data-prototype-addblockspecialStains="{{ formmacros.inputField(specialStainsField,type,"blockspecialStains","prototype",specialStainsWidget,"","","","withspace","minusplusbtn")|e }}"#}
          {#requires for check form to populate fields by AJAX (no '+' buttons)#}
          {#data-prototype-blockspecialStains="{{ formmacros.inputField(specialStainsField,type,"blockspecialStains","prototype",specialStainsWidget,"","","","","plusbtn")|e }}"#}

      {#{% endif %}#}

     {#data-uploadurl = "{{ oneup_uploader_endpoint('scan_gallery') }}"#}
     {#data-userid = "{{ app.user.getId() }}"#}

    {#></div>#}
    {#Note: addSameForm button pass variables - object name and 6 counts for: 1-patient, 2-proceudre, 3-accession, 4-part, 5-block, 6-slide#}


    {#patient; form - is order form#}
    {#{% set patientCount = 0 %}#}
    {#{% for patient in form.patient %}#}

        {#{% set patientCount = 0 %}#}

        {#Patient hierarchy form#}
        {#MultiScanOrder\new.html.twig<br>#}
        {#{{ patientmacros.displayPatient(patient,patientCount,form.vars.value.status,datastructure,type,formtype) }}#}

        {#{% set patientCount = patientCount + 1 %}#}
    {#{% endfor %} #}{# patient loop #}
{#{% endif %} #}{#if 0#}

    {% set showPlus = null %}
    {{ patientmacros.displayFullPatientForm( form.patient, form.vars.value.status, showPlus, datastructure, type, formtype, form.patient, form.conflicts.vars.prototype ) }}

    </br>

    {% if type == 'new' or type == 'edit' or type == 'amend' %}

        <button id="next_button_multi" type="button" name="btnNext" class="btn btn-success" data-toggle="collapse" data-target="#message_param" onclick="checkMultiFormOnNext(this)">Next</button>
        {#<a id="next_button_multi" href="#message_param" type="button" name="btnNext" class="btn btn-success" data-toggle="collapse" data-target="#message_param">Next</a>#}

        <div id="message_param" class="collapse">

            {{ formmacros.message_panel(form,"Scan Order Info") }}

            <div class="row">
                {% if type == 'amend' %}
                    <p><button id="scanorder_amend_order_btn" class="btn_margin_top btn btn-primary btn-success" name="btnAmend" type="submit">Amend</button></p>
                {% else %}
                    <p><button class="btn_margin_top btn btn-primary btn-success" name="btnSubmit" type="submit">Submit</button></p>
                    <p><button id="save_order_onidletimeout_btn" class="btn btn-default" name="btnSaveOnIdleTimeout" type="submit" style="display: none;">Save and Continue Later</button></p>
                {% endif %}
            </div>
        </div>

    {% endif %}

    {% if entity is defined and entity is not null %}
        <div id="existing_validation_error" style="padding-top: 2%">
            {% for dataqualitymrnacc in entity.dataqualitymrnacc %}
                <div class="alert alert-danger">
                    <br>
                    Conflict Resolved by Replacement:
                    <br>
                    <b>{{ dataqualitymrnacc.accession }}</b> => <b>{{ dataqualitymrnacc.newaccession }}</b>
                    <br>
                </div>
            {% endfor %}
        </div>
    {% endif %}

    <div id="validationerror" style="padding-top: 2%"></div>

    {{ form_row(form._token) }}

    {#{{ form_end(form) }}#}
    </form>
    {############ END FORM ##############}

{% endblock %}
  