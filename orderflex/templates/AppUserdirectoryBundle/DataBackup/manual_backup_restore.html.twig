{#
    Copyright 2017 Cornell University

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
#}

{% set extendStr = "AppUserdirectoryBundle/Default/base.html.twig" %}
{% extends extendStr %}


{% import "AppOrderformBundle/Default/formmacros.html.twig" as formmacros %}


{% block title %}
    {{ title }}
{% endblock %}



{% block content %}

    <input type="hidden" id="formcycle" value="{{ cycle }}" />
    <input type="hidden" id="fileId" value="" />

    <h4 class="text-info" align="center">{{ title }}</h4>
    Current Network Drive Path: {{ networkDrivePath }}

    <br>
    <br>

    {#Backup panel#}
    <div class="panel panel-default">
        <div class="panel-heading">Create Backups</div>
        <div class="panel-body">
            <div class="row">
                <div class="col-xs-6" align="right">
                    <a  id="btn-create-backup"
                        general-data-confirm="Are you sure you want to create a database backup?"
                        class="btn btn-info" href="{{ path(employees_sitename~'_create_backup') }}"
                    >Create DB Backup</a>
                </div>
                <div class="col-xs-6" align="left">
                    <a  id="btn-create-backup-upload"
                        general-data-confirm="Are you sure you want to create a upload folder backup?"
                        class="btn btn-info" href="{{ path(employees_sitename~'_create_backup_upload') }}"
                    >Create Upload Folder Backup</a>
                </div>
            </div>
        </div>
    </div>

    <br>

    {#Restore panel#}
    <div class="panel panel-default">
        <div class="panel-heading">Restore</div>

        <div class="panel-body">

            <div class="row">
                <div class="col-xs-3"></div>
                <div class="col-xs-3">
                    <p>
                        <select id="backup-env-id" class="combobox backup-required" style="width: 30%;">
                            <option value=""></option>
                            {% for  environment in environments %}
                                <option value="{{ environment.id }}">{{ environment.name }}</option>
                            {% endfor %}
                        </select>
                    </p></div>
                <div class="col-xs-6">
                    {#{{ formmacros.field(backupFiles) }}#}
                    <p>
                        <select id="backup-file-id" class="combobox backup-required" style="width: 30%;">
                            <option value=""></option>
                            {% for  backupFile in backupFiles %}
                                <option value="{{ backupFile.id }}">{{ backupFile.name }}</option>
                            {% endfor %}
                        </select>
                    </p>
                </div>
            </div>

            <br>


            {% set disabledFalg = 'disabled' %}
            {#{% if backupFiles|length > 0 %}#}
                {#{% set disabledFalg = '' %}#}
            {#{% endif %}#}
            {#<p>#}
                {#<a#}
                    {#id="btn-restore-backup"#}
                    {#class="btn btn-danger"#}
                    {#general-data-confirm="Are you sure you want to restore DB from backup? This action will overwrite all existing data."#}
                    {#href="{{ path(employees_sitename~'_restore_backup',{'backupFilePath': document.getElementById("fileId").val()}) }}"#}
                    {#href="#"#}
                    {#{{ disabledFalg }}#}
                    {#onclick="return restoreBackup();"#}
                {#>Restore Backup</a>#}
            {#</p>#}

            <div class="row">
                <div class="col-lg-4"></div>
                <div class="col-lg-4" align="left">
                    <div class="input-group">
                        <input
                            type="password"
                            id="backup-user-token"
                            class="form-control"
                            autocomplete="off"
                            placeholder="Enter password"
                            style="min-width: 100%"
                            required
                            readonly onfocus="this.removeAttribute('readonly');"
                        >
                        <span class="input-group-btn">
                            <button
                                    id="btn-restore-backup"
                                    class="btn btn-danger"
                                    type="button"
                                    {{ disabledFalg }}
                                    onclick="userVerifyRestoreBackup(this)"
                            >Restore Backup</button>
                        </span>
                    </div><!-- /input-group -->
                </div>
                <div class="col-lg-4"></div>
            </div>
        </div> {#panel-body#}
    </div> {#panel#}

    <br>

    <div id="backup-msg-danger-box" class="alert alert-danger" style="display: none; margin-top: 5px; margin-bottom: 5px;"></div>
    <div id="backup-msg-success-box" class="alert alert-success" style="display: none; margin-top: 5px; margin-bottom: 5px;"></div>

{% endblock %}


{% block additionaljs %}

    <script>
        $(document).ready(function () {

            //$('#backup-file-id')
            $('.backup-required').on("change", function(e) {
                var fileId = $('#backup-file-id').select2('val'); //$(this).select2('val');
                var env = $('#backup-env-id').select2('val');

                if( fileId && env ) {
                    console.log('fileId=' + fileId + '; env=' + env);
                    $('#fileId').val(fileId);
                    $('#btn-restore-backup').removeAttr('disabled');
                } else {
                    //console.log('No file selected');
                    $('#btn-restore-backup').attr('disabled', true);
                }
            });

        });

        function userVerifyRestoreBackup(btn) {
            console.log("userVerifyRestoreBackup start");

            $('#backup-msg-danger-box').html("");
            $('#backup-msg-danger-box').hide();

            //disable backup buttons
            $('#btn-create-backup').attr('disabled', true);
            $('#btn-create-backup-upload').attr('disabled', true);

            var result = confirm("Warning!!! Are you sure you want to load backup DB? This action will overwrite all existing data!");
            if (result) {
                //Logic to delete the item
            } else {
                return;
            }

            var lbtn = null;
            //var lbtn = Ladda.create( btn );
            userStartBtn(btn,lbtn);
            setTimeout(function(){
                //do what you need here
                userVerifyRestoreBackupAction(btn,lbtn);

                //enable backup buttons
                console.log("enable backup buttons");
                $('#btn-create-backup').removeAttr('disabled');
                $('#btn-create-backup-upload').removeAttr('disabled');

            }, 1000);
        }

        function userVerifyRestoreBackupAction(btn,lbtn) {
            //disable btn does not work here, therefore use userVerifyRestoreBackup with setTimeout
            //console.log("Disable btn");
            //var lbtn = '';
            //var lbtn = Ladda.create( btn );
            //userStartBtn(btn,lbtn);

            var file = $('#backup-file-id').select2('data');
            if( file ) {

                //Verify password
                var token = $('#backup-user-token').val();
                var error = "Incorrect password. Please try again.";

                var url = Routing.generate('employees_authenticate_user');
                $.ajax({
                    url: url,
                    timeout: _ajaxTimeout,
                    type: "POST",
                    async: false,
                    data: {token: token}
                }).success(function(data) {
                    //console.log("data="+data);
                    if( data == "OK" ) {
                        $('#backup-msg-danger-box').html("");
                        $('#backup-msg-danger-box').hide();
                        //userStopBtn(btn,lbtn);
                        //userRestoreBackup();
                        userRestoreBackupAjax(btn,lbtn);
                    } else {
                        $('#backup-msg-danger-box').html(error);
                        $('#backup-msg-danger-box').show();
                        userStopBtn(btn,lbtn);
                    }
                }).fail(function(jqXHR, exception) {
                    //alert(error);
                    $('#backup-msg-danger-box').html(exception);
                    $('#backup-msg-danger-box').show();
                }).done(function() {
                    userStopBtn(btn,lbtn);
                    console.log("token verification done");
                });

            } else {
                console.log("no backup file");
            }
        }

        function userRestoreBackupAjax(btn,lbtn) {

            $('#backup-msg-danger-box').html("");
            $('#backup-msg-danger-box').hide();

            var file = $('#backup-file-id').select2('data');
            if( !file ) {
                console.log("no backup file");
                alert("no backup file selected");
            }

            //var lbtn = Ladda.create( btn );
            //userStartBtn(btn,lbtn);

            var fileId = file.id;
            console.log("fileId=" + fileId);

            var env = $('#backup-env-id').select2('data').text;
            console.log("env=" + env);

            //var url = Routing.generate('employees_restore_backup_ajax',{fileId: fileId});
            var url = Routing.generate('employees_restore_backup_ajax');

            $.ajax({
                url: url,
                timeout: _ajaxTimeout,
                type: "POST",
                async: false,
                data: {fileId: fileId, env: env},
                dataType: 'json'
            }).success(function(data) {
                console.log("data="+data);
                console.log("data.status="+data.status);
                console.log("data.message="+data.message);
                if( data.status == 'OK' ) {
                    console.log("restore ok");
                    $('#backup-msg-danger-box').html("");
                    $('#backup-msg-danger-box').hide();
                    //backup-msg-success-box
                    $('#backup-msg-success-box').html(data.message);
                    $('#backup-msg-success-box').show();
                } else {
                    console.log("restore error");
                    $('#backup-msg-danger-box').html(data.message);
                    $('#backup-msg-danger-box').show();
                }
            }).fail(function(jqXHR, exception) {
                //alert(error);
                $('#backup-msg-danger-box').html(exception);
                $('#backup-msg-danger-box').show();
            }).done(function() {
                userStopBtn(btn,lbtn);
                console.log("restore done");
            });
        }

        function userStartBtn(btn,lbtn) {
            $(btn).prop('disabled',true);
            $(btn).text('Please wait...');
            //lbtn.start();
        }
        function userStopBtn(btn,lbtn) {
            //lbtn.stop();
            $(btn).prop('disabled',false);
            $(btn).text('Restore Backup');
        }





        //NOT USED
        //call restore directly
        function userRestoreBackup(btn) {
            var file = $('#backup-file-id').select2('data');
            if( file ) {
                var fileId = file.id;
                console.log("fileId=" + fileId);

                var url = Routing.generate('employees_restore_backup');
                url = url + "/" + fileId;
                console.log("url=" + url);

                window.location.replace(url);
            } else {
                console.log("no backup file");
            }
        }

//        function restoreBackup_ORIG() {
//            var result = confirm("Warning!!! Are you sure you want to load backup DB? This action will overwrite all existing data!");
//            if (result) {
//                //Logic to delete the item
//            } else {
//                return;
//            }
//
//            var file = $('#backup-file-id').select2('data');
//            if( file ) {
//                var fileId = file.id;
//                console.log("fileId=" + fileId);
//
//                var url = Routing.generate('employees_restore_backup');
//                url = url + "/" + fileId;
//                console.log("url=" + url);
//
//                window.location.replace(url);
//            } else {
//                console.log("no backup file");
//            }
//        }

    </script>

{% endblock %}
