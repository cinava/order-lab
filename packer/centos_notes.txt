Centos:

Postgresql 12: /var/lib/pgsql/12/data/pg_hba.conf
Postgresql 9.2: /var/lib/pgsql/data/pg_hba.conf

/etc/php.ini

/usr/local/bin/order-lab/Scanorders2

sudo -Hiu postgres psql -c "CREATE USER symfony WITH PASSWORD 'symfony'"
sudo -Hiu postgres psql -c "ALTER USER symfony WITH SUPERUSER"
sudo -Hiu postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE scanorder to symfony"

php bin/console doctrine:schema:validate

sudo systemctl restart postgresql
sudo systemctl restart httpd.service

"sudo mkdir /usr/local/bin/order-lab/Scanorders2/var/cache/prod",
		   "sudo mkdir /usr/local/bin/order-lab/Scanorders2/var/cache/prod/profiler",
		   "sudo chown -R apache:apache /usr/local/bin/order-lab/Scanorders2/var/cache/prod",
		   "sudo chown -R apache:apache /usr/local/bin/order-lab/Scanorders2/var/cache/prod/profiler"
		   

Postgres login: psql -d scanorder -U symfony
List Databases: \l		   

SELECT version();
Server version: pg_config --version
Client version: psql --version

Apache: /etc/httpd/

Error: centos SQLSTATE[08006] [7] could not connect to server: Permission denied
Is the server running on host "localhost" (127.0.0.1) and accepting TCP/IP connections on port 5432 on PDOConnection.php:43

/etc/httpd/conf.d

| symbol got >
temporarily: loadkeys us-intl
permanently: localectl set-keymap us-intl

Setting up Permissions

One common issue when installing Symfony is that the app/cache and app/logs directories must be writable both by the web server and the command line user. 
On a UNIX system, if your web server user is different from your command line user, you can try one of the following solutions.
Use the same user for the CLI and the web server

In development environments, it is a common practice to use the same UNIX user for the CLI and the web server because 
it avoids any of these permissions issues when setting up new projects. This can be done by editing your web server configuration 
(e.g. commonly httpd.conf or apache2.conf for Apache) and setting its user to be the same as your CLI user 
(e.g. for Apache, update the User and Group values).


HTTPDUSER=$(ps axo user,comm | grep -E '[a]pache|[h]ttpd|[_]www|[w]ww-data|[n]ginx' | grep -v root | head -1 | cut -d\  -f1)
sudo setfacl -dR -m u:"$HTTPDUSER":rwX -m u:$(whoami):rwX var
sudo setfacl -R -m u:"$HTTPDUSER":rwX -m u:$(whoami):rwX var
The first setfacl command sets permissions for future files and folders, while the second one sets permissions on the existing files and folders. 
Both of these commands assign permissions for the system user and the Apache user.
echo $HTTPDUSER => apache
echo $(whoami) => root
Install ACL: yum install acl



To switch to apache user:
su -s /bin/bash apache

Disable in Linux 
https://linuxize.com/post/how-to-disable-selinux-on-centos-7/
sestatus
sudo setenforce 0
Open the /etc/selinux/config file and set the SELINUX mod to disabled: SELINUX=disabled

Reboot: sudo shutdown -r now


wkhtmltopdf: cannot connect to X server

[2019-10-21 17:22:42] app.NOTICE: cmd=[
"phantomjs" --disk-cache=true "/usr/local/bin/order-lab/Scanorders2/packer/rasterize.js" http://localhost/order/translational-research/work-request/download-packing-slip-pdf/1 "/usr/local/bin/order-lab/Scanorders2/app/../web/Uploaded/transres/PackingSlipPDF/PackingSlip-PDF-HP1-REQ1-administrator-10-21-2019.pdf" "A4"] [] []
/opt/phantomjs-2.1.1-linux-x86_64/bin/phantomjs --disk-cache=true /usr/local/bin/order-lab/Scanorders2/packer/rasterize.js http://yahoo.com /usr/local/bin/order-lab/Scanorders2/app/../web/Uploaded/transres/PackingSlipPDF/test_21-10-2019.pdf A4



