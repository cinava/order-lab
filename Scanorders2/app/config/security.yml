security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
#        Oleg\OrderformBundle\Security\User\WebserviceUser: sha512
#        Oleg\OrderformBundle\Security\User\WebserviceUser: plaintext
#        Daps\LdapBundle\Security\User\LdapUser: plaintext
        FOS\UserBundle\Model\UserInterface: sha512
#        Ztec\Security\ActiveDirectoryBundle\Security\User\adUser : plaintext #Active directory does not support encrypted password yet

    role_hierarchy:

        ROLE_ALL_SUBMITTER: [ROLE_SUBMITTER, ROLE_EXTERNAL_SUBMITTER]
        ROLE_ALL_ORDERING_PROVIDER: [ROLE_ORDERING_PROVIDER, ROLE_EXTERNAL_ORDERING_PROVIDER]
        ROLE_ALL_PATHOLOGY: [ROLE_PATHOLOGY_RESIDENT, ROLE_PATHOLOGY_FELLOW, ROLE_PATHOLOGY_FACULTY]

        ROLE_PATHOLOGY_RESIDENT: [ROLE_ALL_SUBMITTER, ROLE_ALL_ORDERING_PROVIDER]
        ROLE_PATHOLOGY_FELLOW: [ROLE_ALL_SUBMITTER, ROLE_ALL_ORDERING_PROVIDER]
        ROLE_PATHOLOGY_FACULTY: [ROLE_ALL_SUBMITTER, ROLE_ALL_ORDERING_PROVIDER]

        ROLE_PROCESSOR:    [ROLE_ALL_SUBMITTER,ROLE_ALL_ORDERING_PROVIDER,ROLE_ALL_PATHOLOGY]
        ROLE_ADMIN:       [ROLE_USER, ROLE_ALLOWED_TO_SWITCH, ROLE_PROCESSOR, ROLE_ALL_SUBMITTER, ROLE_ALL_ORDERING_PROVIDER, ROLE_ALL_PATHOLOGY]
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]


    providers:

        chain_provider:
            chain:
                providers: [fos_userbundle, fr3d_ldapbundle]

        fos_userbundle:
            id: fos_user.user_provider.username

        fr3d_ldapbundle:
            id: fr3d_ldap.security.user.provider


    #        in_memory:
    #            memory:
    #                users:
    #                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
    #                    admin: { password: adminpass123, roles: [ 'ROLE_ADMIN' ] }

    firewalls:

        #this firewall name must be the same as in the bundle's service.yml
        aperio_ldap_firewall:

            pattern: ^/

            aperio: true

            fr3d_ldap:  ~

            form_login:
                 always_use_default_target_path: false
                 use_referer: true
                 success_handler: authentication_handler
                 failure_handler: authentication_handler

            logout:
                path:   /logout
                target: /login

            anonymous:  true

            access_denied_url: /scan-order/nopermission

          
    access_control:

     - { path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
     - { path: ^/access-requests/, role: IS_AUTHENTICATED_ANONYMOUSLY }
     - { path: ^/account-requests/, role: IS_AUTHENTICATED_ANONYMOUSLY }

     - { path: ^/admin/genall, role: ROLE_ADMIN }
     - { path: ^/users/generate, role: ROLE_ADMIN }
     - { path: ^/users/new, role: ROLE_ADMIN }
     - { path: ^/user-directory, role: ROLE_PROCESSOR }

     - { path: ^/admin/, role: ROLE_PROCESSOR }
     - { path: ^/incoming-scan-orders, role: ROLE_PROCESSOR }
     - { path: ^/settings/, role: ROLE_PROCESSOR }
     - { path: ^/incoming-scan-orders, role: ROLE_PROCESSOR }
     - { path: ^/access-requests, role: ROLE_PROCESSOR }
     - { path: ^/account-requests, role: ROLE_PROCESSOR }
     - { path: ^/event-log, role: ROLE_PROCESSOR }
     - { path: ^/edit-user-profile/, role: [ROLE_PROCESSOR] }

     - { path: ^/util/pathservice, role: IS_AUTHENTICATED_ANONYMOUSLY }
     - { path: ^/util/, role: [ROLE_SUBMITTER, ROLE_EXTERNAL_SUBMITTER] }
     - { path: ^/users/, role: ROLE_USER }
     - { path: ^/check/, role: [ROLE_SUBMITTER, ROLE_EXTERNAL_SUBMITTER] }

     - { path: ^/scan-order, role: [ROLE_SUBMITTER, ROLE_EXTERNAL_SUBMITTER, ROLE_ORDERING_PROVIDER, ROLE_EXTERNAL_ORDERING_PROVIDER]}
     - { path: ^/my-scan-orders, role: [ROLE_SUBMITTER, ROLE_EXTERNAL_SUBMITTER, ROLE_ORDERING_PROVIDER, ROLE_EXTERNAL_ORDERING_PROVIDER]}


