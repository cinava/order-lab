security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
#        Oleg\OrderformBundle\Security\User\WebserviceUser: sha512
#        Oleg\OrderformBundle\Security\User\WebserviceUser: plaintext
#        Daps\LdapBundle\Security\User\LdapUser: plaintext
        FOS\UserBundle\Model\UserInterface: sha512
#        Ztec\Security\ActiveDirectoryBundle\Security\User\adUser : plaintext #Active directory does not support encrypted password yet

    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_ALLOWED_TO_SWITCH]
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
#        Oleg: custom user
#        webservice:
#            id: webservice_user_provider
#        daps_ldap:
#            id: daps_ldap_user_provider   
#        ldap:
#            id: imag_ldap.security.user.provider
#        fos_userbundle:
#            id: fos_user.user_provider.username
#        my_active_directory_provider :
#                  id: ztec.security.active.directory.user.provider
        chain_provider:
            chain:
                providers: [fos_userbundle, fr3d_ldapbundle]
        fos_userbundle:
            id: fos_user.user_provider.username
        fr3d_ldapbundle:
            id: fr3d_ldap.security.user.provider

        in_memory:
            memory:
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass123, roles: [ 'ROLE_ADMIN' ] }

    firewalls:

       main:    #FR3DLdap
             pattern: ^/
             fr3d_ldap:  ~
             aperio:  true
             form_login:
                 always_use_default_target_path: false
                 provider: chain_provider
                 use_referer: true
                 success_handler: login_sucess_handler
             logout:     true
             anonymous:  true

#       aperio_secured:
#          pattern:    ^/
#          aperio:  true
#          form_login:
#             always_use_default_target_path: false
#             provider:    chain_provider
##                 default_target_path: /
#             use_referer: true
#          logout:     true
#          anonymous:  true

    access_control:
     - { path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
     - { path: ^/admin/, role: ROLE_ADMIN }
#     - { path: ^/util/, role: ROLE_USER }
     - { path: ^/user/, role: ROLE_USER }

#    firewalls:
#       #FOSUser
#       main:
#          pattern:    ^/
#          form_login:
#            provider: fos_userbundle
#            csrf_provider: form.csrf_provider
#          logout:       true
#          anonymous:    true

#        dev:
#            pattern:  ^/(_(profiler|wdt)|css|images|js)/
#            security: false

#        login:
#            pattern:  ^/demo/secured/login$
#            security: false
#            pattern:  ^/login$
#            security: true           

#        login_firewall:
#            pattern:    ^/login$
#            anonymous:  ~

        #Oleg: custom auth provider
#        wsse_secured:
#            pattern:   ^/
##            wsse:      true            
#            form_login: 
#                provider: webservice
            
#        secured_area:
#            pattern:    ^/
#            form_login:
#                check_path: login_check
#                login_path: login

#           (ztec ldap active directory)
#            active_directory: #Sames parameters as form_login
#                check_path: login_check
#                login_path: login
          
#            pattern:    ^/
#            anonymous: ~
#            form-login-ldap: true
#            form_login:
#              provider: webservice
#                login_path:  login
#                check_path:  login_check
##                always_use_default_target_path: true           
#            logout:
#                path:   logout
#                target: /

#        secured_area:
#            pattern:    ^/demo/secured/
#            form_login:
#                check_path: _security_check
#                login_path: _demo_login
#            logout:
#                path:   _demo_logout
#                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

#    access_control:
#        - { path: ^/demo/secured/hello/admin/, roles: ROLE_ADMIN }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
