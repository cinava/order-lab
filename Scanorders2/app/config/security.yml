security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:

        # Scan order roles
        ROLE_SCANORDER_ALL_PATHOLOGY: [ROLE_SCANORDER_PATHOLOGY_RESIDENT, ROLE_SCANORDER_PATHOLOGY_FELLOW, ROLE_SCANORDER_PATHOLOGY_FACULTY]

        ROLE_SCANORDER_PATHOLOGY_RESIDENT: [ROLE_SCANORDER_SUBMITTER, ROLE_SCANORDER_ORDERING_PROVIDER]
        ROLE_SCANORDER_PATHOLOGY_FELLOW: [ROLE_SCANORDER_SUBMITTER, ROLE_SCANORDER_ORDERING_PROVIDER]
        ROLE_SCANORDER_PATHOLOGY_FACULTY: [ROLE_SCANORDER_SUBMITTER, ROLE_SCANORDER_ORDERING_PROVIDER]

        ROLE_SCANORDER_PROCESSOR:   [ROLE_SCANORDER_SUBMITTER, ROLE_SCANORDER_ORDERING_PROVIDER, ROLE_SCANORDER_ALL_PATHOLOGY]
        ROLE_SCANORDER_ADMIN:       [ROLE_USER, ROLE_SCANORDER_PROCESSOR, ROLE_SCANORDER_SUBMITTER, ROLE_SCANORDER_ORDERING_PROVIDER, ROLE_SCANORDER_ALL_PATHOLOGY]

        # Userdirectory roles
        ROLE_USERDIRECTORY_EDITOR: [ROLE_USER, ROLE_USERDIRECTORY_OBSERVER]
        ROLE_USERDIRECTORY_ADMIN: [ROLE_USER, ROLE_USERDIRECTORY_OBSERVER, ROLE_USERDIRECTORY_EDITOR]

        # FellApp roles
        ROLE_FELLAPP_ADMIN: [ROLE_USER, ROLE_FELLAPP_USER, ROLE_USERDIRECTORY_EDITOR]

        # General roles
#        ROLE_BANNED: [ROLE_SCANORDER_BANNED, ROLE_USERDIRECTORY_BANNED]
#        ROLE_UNAPPROVED: [ROLE_USERDIRECTORY_UNAPPROVED, ROLE_SCANORDER_UNAPPROVED]
#        ROLE_EDITOR: [ROLE_SCANORDER_PROCESSOR, ROLE_USERDIRECTORY_EDITOR]  #permission to edit the content of DB such as change access request status
        ROLE_SCANORDER_PROCESSOR: [ROLE_EDITOR]
        ROLE_USERDIRECTORY_EDITOR: [ROLE_EDITOR]

#        ROLE_ROLEEDITOR: [ROLE_SCANORDER_ADMIN, ROLE_USERDIRECTORY_EDITOR]
        #impersonate user: ?_switch_user=thomas
        ROLE_PLATFORM_DEPUTY_ADMIN: [ROLE_USERDIRECTORY_ADMIN, ROLE_SCANORDER_ADMIN, ROLE_FELLAPP_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        ROLE_PLATFORM_ADMIN: [ROLE_PLATFORM_DEPUTY_ADMIN]


    providers:

#        chain_provider:
#            chain:
#                providers: [fos_userbundle, fr3d_ldapbundle]

        fos_userbundle:
            id: fos_user.user_provider.username

#        fr3d_ldapbundle:
#            id: fr3d_ldap.security.user.provider

#        in_memory:
#            memory:
#                users:
#                    systemuser:  { password: systempassword, roles: [ 'ROLE_PLATFORM_DEPUTY_ADMIN' ] }
#                   admin: { password: adminpass123, roles: [ 'ROLE_PLATFORM_DEPUTY_ADMIN' ] }

    firewalls:

        #this firewall name must be the same as in the bundle's service.yml.
        aperio_ldap_firewall:
            pattern: ^/scan
            #aperio: true
            #fr3d_ldap:  ~
            context: scan_auth
            switch_user: true
            simple_form:
                 authenticator: custom_authenticator
#                 always_use_default_target_path: false
                 use_referer: true
                 success_handler: authentication_handler
                 failure_handler: authentication_handler
                 check_path: /scan/login_check
                 login_path: /scan/login
            logout:
                path:   /scan/logout
                target: /scan/login
            anonymous:  true
            access_denied_url: /scan/access-requests/new/create  #/scan/scan-order/no-permission

        ldap_employees_firewall:
            pattern: ^/directory
            #fr3d_ldap:  ~
            #ldap_authenticator: true
            context: scan_auth
            switch_user: true
            simple_form:
                authenticator: custom_authenticator
#                always_use_default_target_path: true
                use_referer: true
                success_handler: employees_authentication_handler
                failure_handler: employees_authentication_handler
                check_path: /directory/login_check
                login_path: /directory/login
                # login success redirecting options (read further below)
#                default_target_path: /directory/
#                target_path_parameter: _target_path
            logout:
                path:   /directory/logout
                target: /directory/login
            anonymous:  true
            access_denied_url: /directory/access-requests/new/create        

        ldap_fellapp_firewall:
            pattern: ^/fellowship-applications
            context: scan_auth
#            http_basic: ~
            switch_user: true
            simple_form:
                authenticator: custom_authenticator
                use_referer: true
                success_handler: fellapp_authentication_handler
                failure_handler: fellapp_authentication_handler
                check_path: /fellowship-applications/login_check
                login_path: /fellowship-applications/login
            logout:
                path:   /fellowship-applications/logout
                target: /fellowship-applications/login
            anonymous:  true
            access_denied_url: /fellowship-applications/access-requests/new/create
        

    #Note: first match is used, the later would be ignored
    access_control:

     - { path: ^/access-requests/change-status/, role: ROLE_EDITOR }

     ############################## common idle time out logic ##############################
     - { path: ^/directory/common/, role: ROLE_USER }
     ############################## common institution tree ##############################
     - { path: ^/directory/util/common/, role: ROLE_USER }

     ############################## EMPLOYEES SITE SETTINGS ##############################
     - { path: ^/directory/access-requests/new/, role: IS_AUTHENTICATED_ANONYMOUSLY }
     - { path: ^/directory/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
     - { path: ^/directory/setloginvisit, role: IS_AUTHENTICATED_ANONYMOUSLY }

     - { path: ^/directory/event-log, role: ROLE_USERDIRECTORY_EDITOR }
     - { path: ^/directory/users/previous, role: ROLE_USERDIRECTORY_EDITOR }
     - { path: ^/directory/users/generate, role: ROLE_USERDIRECTORY_EDITOR }
     - { path: ^/directory/event-log, role: ROLE_USERDIRECTORY_EDITOR }
     - { path: ^/directory/admin/populate-all-lists-with-default-values, role: ROLE_USERDIRECTORY_ADMIN }
     - { path: ^/directory/admin/, role: ROLE_USERDIRECTORY_ADMIN }
     - { path: ^/directory/site-settings/, role: ROLE_PLATFORM_DEPUTY_ADMIN }

    #tree hierarchy: need for all users for public user access request page
     - { path: ^/directory/tree-util/common/composition-tree/, role: IS_AUTHENTICATED_ANONYMOUSLY }

     #All other urls: make all /employees accessible only limited special roles
     - { path: ^/directory/, allow_if: "has_role('ROLE_USERDIRECTORY_OBSERVER') and !has_role('ROLE_USERDIRECTORY_UNAPPROVED') and !has_role('ROLE_USERDIRECTORY_BANNED')" }


     ############################## SCAN SITE SETTINGS ##############################
     - { path: ^/scan/access-requests/new/, role: IS_AUTHENTICATED_ANONYMOUSLY }
     - { path: ^/scan/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
     - { path: ^/scan/setloginvisit, role: IS_AUTHENTICATED_ANONYMOUSLY }
     - { path: ^/scan/account-requests/, role: IS_AUTHENTICATED_ANONYMOUSLY }

     - { path: ^/scan/admin/populate-all-lists-with-default-values, role: ROLE_SCANORDER_ADMIN }
     - { path: ^/scan/users/generate, role: ROLE_SCANORDER_ADMIN }
#     - { path: ^/scan/users/new, role: ROLE_SCANORDER_ADMIN }
     - { path: ^/scan/site-settings/, role: ROLE_PLATFORM_DEPUTY_ADMIN }

     - { path: ^/scan/users/previous, role: ROLE_SCANORDER_ADMIN }
     - { path: ^/scan/admin/, role: ROLE_SCANORDER_PROCESSOR }
     - { path: ^/scan/incoming-scan-orders, role: ROLE_SCANORDER_PROCESSOR }
     - { path: ^/scan/settings/, role: ROLE_SCANORDER_PROCESSOR }
     - { path: ^/scan/incoming-scan-orders, role: ROLE_SCANORDER_PROCESSOR }
     - { path: ^/scan/account-requests, role: ROLE_SCANORDER_PROCESSOR }
     - { path: ^/scan/event-log, role: ROLE_SCANORDER_PROCESSOR }
     - { path: ^/scan/incoming-slide-return-requests, role: [ROLE_SCANORDER_PROCESSOR]}

     - { path: ^/scan/util/, role: [ROLE_SCANORDER_SUBMITTER] }
     - { path: ^/scan/check/, role: [ROLE_SCANORDER_SUBMITTER] }

     - { path: ^/scan/scan-order, role: [ROLE_SCANORDER_SUBMITTER, ROLE_SCANORDER_ORDERING_PROVIDER]}
     - { path: ^/scan/my-scan-orders, role: [ROLE_SCANORDER_SUBMITTER, ROLE_SCANORDER_ORDERING_PROVIDER]}

     - { path: ^/scan/slide-return-request, role: [ROLE_SCANORDER_SUBMITTER, ROLE_SCANORDER_ORDERING_PROVIDER]}
     - { path: ^/scan/my-slide-return-requests, role: [ROLE_SCANORDER_SUBMITTER, ROLE_SCANORDER_ORDERING_PROVIDER]}

     - { path: ^/scan/image-viewer/, role: [ROLE_SCANORDER_SUBMITTER] }

     #All other urls: make all sure /scan is protected from accessing the users with not sufficient roles
     - { path: ^/scan/, allow_if: "has_role('ROLE_SCANORDER_SUBMITTER') and !has_role('ROLE_SCANORDER_UNAPPROVED') and !has_role('ROLE_SCANORDER_BANNED')" }


    ############################## Fellowship Applications SITE SETTINGS ##############################     
     - { path: ^/fellowship-applications/access-requests/new/, role: IS_AUTHENTICATED_ANONYMOUSLY }
     - { path: ^/fellowship-applications/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
     - { path: ^/fellowship-applications/setloginvisit, role: IS_AUTHENTICATED_ANONYMOUSLY }
     - { path: ^/fellowship-applications/download/, allow_if: "'::1' == request.getClientIp() or has_role('ROLE_FELLAPP_USER')" } 
#     - { path: ^/fellowship-applications/download/, roles: ROLE_FELLAPP_USER }
#     - { path: ^/fellowship-applications/download/, roles: IS_AUTHENTICATED_ANONYMOUSLY } 
     - { path: ^/fellowship-applications/, role: ROLE_FELLAPP_USER }


