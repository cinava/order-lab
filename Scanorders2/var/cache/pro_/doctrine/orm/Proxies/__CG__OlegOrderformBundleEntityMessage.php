<?php

namespace Proxies\__CG__\Oleg\OrderformBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Message extends \Oleg\OrderformBundle\Entity\Message implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'id', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'patient', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'encounter', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'procedure', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'accession', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'part', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'block', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'slide', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'imaging', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'idnumber', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'comment', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'orderdate', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'messageCategory', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'messageTitle', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'provider', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'proxyuser', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'orderRecipients', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'reportRecipients', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'organizationRecipients', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'institution', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'status', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'messageStatus', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'messageStatusPrior', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'signeeInfo', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'editorInfos', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'equipment', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'purpose', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'priority', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'deadline', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'returnoption', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'oid', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'account', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'educational', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'research', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'dataqualitymrnacc', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'history', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'inputs', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'outputs', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'backAssociations', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'associations', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'sources', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'destinations', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'attachmentContainer', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'externalIds', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'version', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'amendmentReason', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'formVersions', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'slideReturnRequest', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'scanorder', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'procedureorder', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'laborder', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'blockorder', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'slideorder', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'stainorder', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'imageAnalysisOrder', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'report', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'reportBlock', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'calllogEntryMessage'];
        }

        return ['__isInitialized__', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'id', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'patient', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'encounter', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'procedure', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'accession', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'part', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'block', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'slide', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'imaging', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'idnumber', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'comment', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'orderdate', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'messageCategory', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'messageTitle', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'provider', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'proxyuser', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'orderRecipients', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'reportRecipients', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'organizationRecipients', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'institution', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'status', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'messageStatus', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'messageStatusPrior', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'signeeInfo', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'editorInfos', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'equipment', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'purpose', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'priority', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'deadline', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'returnoption', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'oid', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'account', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'educational', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'research', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'dataqualitymrnacc', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'history', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'inputs', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'outputs', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'backAssociations', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'associations', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'sources', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'destinations', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'attachmentContainer', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'externalIds', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'version', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'amendmentReason', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'formVersions', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'slideReturnRequest', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'scanorder', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'procedureorder', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'laborder', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'blockorder', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'slideorder', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'stainorder', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'imageAnalysisOrder', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'report', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'reportBlock', '' . "\0" . 'Oleg\\OrderformBundle\\Entity\\Message' . "\0" . 'calllogEntryMessage'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Message $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function removeDepend($depend)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDepend', [$depend]);

        return parent::removeDepend($depend);
    }

    /**
     * {@inheritDoc}
     */
    public function addDepend($depend)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDepend', [$depend]);

        return parent::addDepend($depend);
    }

    /**
     * {@inheritDoc}
     */
    public function setIdnumber($idnumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdnumber', [$idnumber]);

        return parent::setIdnumber($idnumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdnumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdnumber', []);

        return parent::getIdnumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComment', [$comment]);

        return parent::setComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComment', []);

        return parent::getComment();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeadline($deadline)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeadline', [$deadline]);

        return parent::setDeadline($deadline);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeadline()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeadline', []);

        return parent::getDeadline();
    }

    /**
     * {@inheritDoc}
     */
    public function setEquipment($equipment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEquipment', [$equipment]);

        return parent::setEquipment($equipment);
    }

    /**
     * {@inheritDoc}
     */
    public function getEquipment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEquipment', []);

        return parent::getEquipment();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstitution($institution)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstitution', [$institution]);

        return parent::setInstitution($institution);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstitution()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstitution', []);

        return parent::getInstitution();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderdate($date = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderdate', [$date]);

        return parent::setOrderdate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderdate', []);

        return parent::getOrderdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriority($priority)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriority', [$priority]);

        return parent::setPriority($priority);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriority()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriority', []);

        return parent::getPriority();
    }

    /**
     * {@inheritDoc}
     */
    public function setProvider($provider)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProvider', [$provider]);

        return parent::setProvider($provider);
    }

    /**
     * {@inheritDoc}
     */
    public function getProvider()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProvider', []);

        return parent::getProvider();
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyuser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProxyuser', []);

        return parent::getProxyuser();
    }

    /**
     * {@inheritDoc}
     */
    public function addProxyuser($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProxyuser', [$item]);

        return parent::addProxyuser($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProxyuser($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProxyuser', [$item]);

        return parent::removeProxyuser($item);
    }

    /**
     * {@inheritDoc}
     */
    public function addProxyuserAsUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProxyuserAsUser', [$user]);

        return parent::addProxyuserAsUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyuserAsUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProxyuserAsUser', []);

        return parent::getProxyuserAsUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderRecipients()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderRecipients', []);

        return parent::getOrderRecipients();
    }

    /**
     * {@inheritDoc}
     */
    public function addOrderRecipient($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrderRecipient', [$item]);

        return parent::addOrderRecipient($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOrderRecipient($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOrderRecipient', [$item]);

        return parent::removeOrderRecipient($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getReportRecipients()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReportRecipients', []);

        return parent::getReportRecipients();
    }

    /**
     * {@inheritDoc}
     */
    public function addReportRecipient($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReportRecipient', [$item]);

        return parent::addReportRecipient($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeReportRecipient($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeReportRecipient', [$item]);

        return parent::removeReportRecipient($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganizationRecipients()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganizationRecipients', []);

        return parent::getOrganizationRecipients();
    }

    /**
     * {@inheritDoc}
     */
    public function addOrganizationRecipient($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrganizationRecipient', [$item]);

        return parent::addOrganizationRecipient($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOrganizationRecipient($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOrganizationRecipient', [$item]);

        return parent::removeOrganizationRecipient($item);
    }

    /**
     * {@inheritDoc}
     */
    public function setPurpose($purpose)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPurpose', [$purpose]);

        return parent::setPurpose($purpose);
    }

    /**
     * {@inheritDoc}
     */
    public function getPurpose()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPurpose', []);

        return parent::getPurpose();
    }

    /**
     * {@inheritDoc}
     */
    public function setReturnoption($returnoption)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReturnoption', [$returnoption]);

        return parent::setReturnoption($returnoption);
    }

    /**
     * {@inheritDoc}
     */
    public function getReturnoption()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReturnoption', []);

        return parent::getReturnoption();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getMessageStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessageStatus', []);

        return parent::getMessageStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setMessageStatus($messageStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMessageStatus', [$messageStatus]);

        return parent::setMessageStatus($messageStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessageStatusPrior()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessageStatusPrior', []);

        return parent::getMessageStatusPrior();
    }

    /**
     * {@inheritDoc}
     */
    public function setMessageStatusPrior($messageStatusPrior)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMessageStatusPrior', [$messageStatusPrior]);

        return parent::setMessageStatusPrior($messageStatusPrior);
    }

    /**
     * {@inheritDoc}
     */
    public function setMessageCategory($messageCategory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMessageCategory', [$messageCategory]);

        return parent::setMessageCategory($messageCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessageCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessageCategory', []);

        return parent::getMessageCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function getMessageTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessageTitle', []);

        return parent::getMessageTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setMessageTitle($messageTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMessageTitle', [$messageTitle]);

        return parent::setMessageTitle($messageTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessageTitleStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessageTitleStr', []);

        return parent::getMessageTitleStr();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttachmentContainer($attachmentContainer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttachmentContainer', [$attachmentContainer]);

        return parent::setAttachmentContainer($attachmentContainer);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttachmentContainer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttachmentContainer', []);

        return parent::getAttachmentContainer();
    }

    /**
     * {@inheritDoc}
     */
    public function getDataqualityMrnAcc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDataqualityMrnAcc', []);

        return parent::getDataqualityMrnAcc();
    }

    /**
     * {@inheritDoc}
     */
    public function setDataqualityMrnAcc($dataqualitiesmrnacc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDataqualityMrnAcc', [$dataqualitiesmrnacc]);

        return parent::setDataqualityMrnAcc($dataqualitiesmrnacc);
    }

    /**
     * {@inheritDoc}
     */
    public function addDataqualityMrnAcc($dataqualitymrnacc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDataqualityMrnAcc', [$dataqualitymrnacc]);

        return parent::addDataqualityMrnAcc($dataqualitymrnacc);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDataqualityMrnAcc($dataqualitymrnacc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDataqualityMrnAcc', [$dataqualitymrnacc]);

        return parent::removeDataqualityMrnAcc($dataqualitymrnacc);
    }

    /**
     * {@inheritDoc}
     */
    public function getHistory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHistory', []);

        return parent::getHistory();
    }

    /**
     * {@inheritDoc}
     */
    public function addHistory($history)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addHistory', [$history]);

        return parent::addHistory($history);
    }

    /**
     * {@inheritDoc}
     */
    public function removeHistory($history)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeHistory', [$history]);

        return parent::removeHistory($history);
    }

    /**
     * {@inheritDoc}
     */
    public function getSources()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSources', []);

        return parent::getSources();
    }

    /**
     * {@inheritDoc}
     */
    public function addSource($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSource', [$item]);

        return parent::addSource($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSource($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSource', [$item]);

        return parent::removeSource($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getDestinations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDestinations', []);

        return parent::getDestinations();
    }

    /**
     * {@inheritDoc}
     */
    public function addDestination($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDestination', [$item]);

        return parent::addDestination($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDestination($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDestination', [$item]);

        return parent::removeDestination($item);
    }

    /**
     * {@inheritDoc}
     */
    public function setAccount($account)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccount', [$account]);

        return parent::setAccount($account);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccount', []);

        return parent::getAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function setOid($oid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOid', [$oid]);

        return parent::setOid($oid);
    }

    /**
     * {@inheritDoc}
     */
    public function getOid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOid', []);

        return parent::getOid();
    }

    /**
     * {@inheritDoc}
     */
    public function setEducational($educational)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEducational', [$educational]);

        return parent::setEducational($educational);
    }

    /**
     * {@inheritDoc}
     */
    public function getEducational()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEducational', []);

        return parent::getEducational();
    }

    /**
     * {@inheritDoc}
     */
    public function setResearch($research)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResearch', [$research]);

        return parent::setResearch($research);
    }

    /**
     * {@inheritDoc}
     */
    public function getResearch()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResearch', []);

        return parent::getResearch();
    }

    /**
     * {@inheritDoc}
     */
    public function addExternalId($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addExternalId', [$item]);

        return parent::addExternalId($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExternalId($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeExternalId', [$item]);

        return parent::removeExternalId($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getExternalIds()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExternalIds', []);

        return parent::getExternalIds();
    }

    /**
     * {@inheritDoc}
     */
    public function addFormVersion($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFormVersion', [$item]);

        return parent::addFormVersion($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFormVersion($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFormVersion', [$item]);

        return parent::removeFormVersion($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormVersions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormVersions', []);

        return parent::getFormVersions();
    }

    /**
     * {@inheritDoc}
     */
    public function getVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersion', []);

        return parent::getVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersion($version)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersion', [$version]);

        return parent::setVersion($version);
    }

    /**
     * {@inheritDoc}
     */
    public function getAmendmentReason()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmendmentReason', []);

        return parent::getAmendmentReason();
    }

    /**
     * {@inheritDoc}
     */
    public function setAmendmentReason($amendmentReason)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAmendmentReason', [$amendmentReason]);

        return parent::setAmendmentReason($amendmentReason);
    }

    /**
     * {@inheritDoc}
     */
    public function getSigneeInfo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSigneeInfo', []);

        return parent::getSigneeInfo();
    }

    /**
     * {@inheritDoc}
     */
    public function setSigneeInfo($signeeInfo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSigneeInfo', [$signeeInfo]);

        return parent::setSigneeInfo($signeeInfo);
    }

    /**
     * {@inheritDoc}
     */
    public function addEditorInfo($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEditorInfo', [$item]);

        return parent::addEditorInfo($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEditorInfo($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEditorInfo', [$item]);

        return parent::removeEditorInfo($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getEditorInfos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEditorInfos', []);

        return parent::getEditorInfos();
    }

    /**
     * {@inheritDoc}
     */
    public function addPatient(\Oleg\OrderformBundle\Entity\Patient $patient)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPatient', [$patient]);

        return parent::addPatient($patient);
    }

    /**
     * {@inheritDoc}
     */
    public function removePatient(\Oleg\OrderformBundle\Entity\Patient $patient)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePatient', [$patient]);

        return parent::removePatient($patient);
    }

    /**
     * {@inheritDoc}
     */
    public function getPatient()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPatient', []);

        return parent::getPatient();
    }

    /**
     * {@inheritDoc}
     */
    public function clearPatient()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'clearPatient', []);

        return parent::clearPatient();
    }

    /**
     * {@inheritDoc}
     */
    public function clearEncounter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'clearEncounter', []);

        return parent::clearEncounter();
    }

    /**
     * {@inheritDoc}
     */
    public function getValidEncounter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidEncounter', []);

        return parent::getValidEncounter();
    }

    /**
     * {@inheritDoc}
     */
    public function addSlide(\Oleg\OrderformBundle\Entity\Slide $slide)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSlide', [$slide]);

        return parent::addSlide($slide);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSlide(\Oleg\OrderformBundle\Entity\Slide $slide)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSlide', [$slide]);

        return parent::removeSlide($slide);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlide()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlide', []);

        return parent::getSlide();
    }

    /**
     * {@inheritDoc}
     */
    public function addEncounter(\Oleg\OrderformBundle\Entity\Encounter $encounter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEncounter', [$encounter]);

        return parent::addEncounter($encounter);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEncounter(\Oleg\OrderformBundle\Entity\Encounter $encounter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEncounter', [$encounter]);

        return parent::removeEncounter($encounter);
    }

    /**
     * {@inheritDoc}
     */
    public function getEncounter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEncounter', []);

        return parent::getEncounter();
    }

    /**
     * {@inheritDoc}
     */
    public function addProcedure(\Oleg\OrderformBundle\Entity\Procedure $procedure)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProcedure', [$procedure]);

        return parent::addProcedure($procedure);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProcedure(\Oleg\OrderformBundle\Entity\Procedure $procedure)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProcedure', [$procedure]);

        return parent::removeProcedure($procedure);
    }

    /**
     * {@inheritDoc}
     */
    public function getProcedure()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProcedure', []);

        return parent::getProcedure();
    }

    /**
     * {@inheritDoc}
     */
    public function addAccession(\Oleg\OrderformBundle\Entity\Accession $accession)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAccession', [$accession]);

        return parent::addAccession($accession);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAccession(\Oleg\OrderformBundle\Entity\Accession $accession)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAccession', [$accession]);

        return parent::removeAccession($accession);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccession()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccession', []);

        return parent::getAccession();
    }

    /**
     * {@inheritDoc}
     */
    public function addPart(\Oleg\OrderformBundle\Entity\Part $part)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPart', [$part]);

        return parent::addPart($part);
    }

    /**
     * {@inheritDoc}
     */
    public function removePart(\Oleg\OrderformBundle\Entity\Part $part)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePart', [$part]);

        return parent::removePart($part);
    }

    /**
     * {@inheritDoc}
     */
    public function getPart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPart', []);

        return parent::getPart();
    }

    /**
     * {@inheritDoc}
     */
    public function addBlock(\Oleg\OrderformBundle\Entity\Block $block)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBlock', [$block]);

        return parent::addBlock($block);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBlock(\Oleg\OrderformBundle\Entity\Block $block)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBlock', [$block]);

        return parent::removeBlock($block);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlock()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlock', []);

        return parent::getBlock();
    }

    /**
     * {@inheritDoc}
     */
    public function getImaging()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImaging', []);

        return parent::getImaging();
    }

    /**
     * {@inheritDoc}
     */
    public function addImaging($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addImaging', [$item]);

        return parent::addImaging($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeImaging($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeImaging', [$item]);

        return parent::removeImaging($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getInputs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInputs', []);

        return parent::getInputs();
    }

    /**
     * {@inheritDoc}
     */
    public function addInput($input)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addInput', [$input]);

        return parent::addInput($input);
    }

    /**
     * {@inheritDoc}
     */
    public function removeInput($input)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeInput', [$input]);

        return parent::removeInput($input);
    }

    /**
     * {@inheritDoc}
     */
    public function getOutputs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOutputs', []);

        return parent::getOutputs();
    }

    /**
     * {@inheritDoc}
     */
    public function addOutput($output)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOutput', [$output]);

        return parent::addOutput($output);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOutput($output)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOutput', [$output]);

        return parent::removeOutput($output);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssociations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssociations', []);

        return parent::getAssociations();
    }

    /**
     * {@inheritDoc}
     */
    public function addAssociation($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAssociation', [$item]);

        return parent::addAssociation($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAssociation($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAssociation', [$item]);

        return parent::removeAssociation($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackAssociations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackAssociations', []);

        return parent::getBackAssociations();
    }

    /**
     * {@inheritDoc}
     */
    public function addBackAssociation($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBackAssociation', [$item]);

        return parent::addBackAssociation($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBackAssociation($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBackAssociation', [$item]);

        return parent::removeBackAssociation($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getFullName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullName', []);

        return parent::getFullName();
    }

    /**
     * {@inheritDoc}
     */
    public function getMessageIdStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessageIdStr', []);

        return parent::getMessageIdStr();
    }

    /**
     * {@inheritDoc}
     */
    public function getMessageOidVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessageOidVersion', []);

        return parent::getMessageOidVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl($generator, $urlname, $oid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', [$generator, $urlname, $oid]);

        return parent::getUrl($generator, $urlname, $oid);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function addInputObject($object)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addInputObject', [$object]);

        return parent::addInputObject($object);
    }

    /**
     * {@inheritDoc}
     */
    public function addOutputObject($object)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOutputObject', [$object]);

        return parent::addOutputObject($object);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildren()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildren', []);

        return parent::getChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function addChildren($child)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChildren', [$child]);

        return parent::addChildren($child);
    }

    /**
     * {@inheritDoc}
     */
    public function removeChildren($child)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeChildren', [$child]);

        return parent::removeChildren($child);
    }

    /**
     * {@inheritDoc}
     */
    public function getPatientNameMrnInfo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPatientNameMrnInfo', []);

        return parent::getPatientNameMrnInfo();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubmitterInfoSimpleDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubmitterInfoSimpleDate', []);

        return parent::getSubmitterInfoSimpleDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderSimpleDateStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderSimpleDateStr', []);

        return parent::getOrderSimpleDateStr();
    }

    /**
     * {@inheritDoc}
     */
    public function getFormVersionsInfo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormVersionsInfo', []);

        return parent::getFormVersionsInfo();
    }

    /**
     * {@inheritDoc}
     */
    public function setScanorder($scanorder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScanorder', [$scanorder]);

        return parent::setScanorder($scanorder);
    }

    /**
     * {@inheritDoc}
     */
    public function getScanorder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScanorder', []);

        return parent::getScanorder();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlideReturnRequest($slideReturnRequest)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlideReturnRequest', [$slideReturnRequest]);

        return parent::setSlideReturnRequest($slideReturnRequest);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlideReturnRequest()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlideReturnRequest', []);

        return parent::getSlideReturnRequest();
    }

    /**
     * {@inheritDoc}
     */
    public function setLaborder($laborder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLaborder', [$laborder]);

        return parent::setLaborder($laborder);
    }

    /**
     * {@inheritDoc}
     */
    public function getLaborder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLaborder', []);

        return parent::getLaborder();
    }

    /**
     * {@inheritDoc}
     */
    public function setReport($report)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReport', [$report]);

        return parent::setReport($report);
    }

    /**
     * {@inheritDoc}
     */
    public function getReport()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReport', []);

        return parent::getReport();
    }

    /**
     * {@inheritDoc}
     */
    public function setBlockorder($blockorder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBlockorder', [$blockorder]);

        return parent::setBlockorder($blockorder);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlockorder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlockorder', []);

        return parent::getBlockorder();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlideorder($slideorder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlideorder', [$slideorder]);

        return parent::setSlideorder($slideorder);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlideorder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlideorder', []);

        return parent::getSlideorder();
    }

    /**
     * {@inheritDoc}
     */
    public function setStainorder($stainorder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStainorder', [$stainorder]);

        return parent::setStainorder($stainorder);
    }

    /**
     * {@inheritDoc}
     */
    public function getStainorder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStainorder', []);

        return parent::getStainorder();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageAnalysisOrder($imageAnalysisOrder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageAnalysisOrder', [$imageAnalysisOrder]);

        return parent::setImageAnalysisOrder($imageAnalysisOrder);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageAnalysisOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageAnalysisOrder', []);

        return parent::getImageAnalysisOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setReportBlock($reportBlock)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReportBlock', [$reportBlock]);

        return parent::setReportBlock($reportBlock);
    }

    /**
     * {@inheritDoc}
     */
    public function getReportBlock()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReportBlock', []);

        return parent::getReportBlock();
    }

    /**
     * {@inheritDoc}
     */
    public function setProcedureorder($procedureorder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProcedureorder', [$procedureorder]);

        return parent::setProcedureorder($procedureorder);
    }

    /**
     * {@inheritDoc}
     */
    public function getProcedureorder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProcedureorder', []);

        return parent::getProcedureorder();
    }

    /**
     * {@inheritDoc}
     */
    public function getCalllogEntryMessage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCalllogEntryMessage', []);

        return parent::getCalllogEntryMessage();
    }

    /**
     * {@inheritDoc}
     */
    public function setCalllogEntryMessage($calllogEntryMessage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCalllogEntryMessage', [$calllogEntryMessage]);

        return parent::setCalllogEntryMessage($calllogEntryMessage);
    }

}
