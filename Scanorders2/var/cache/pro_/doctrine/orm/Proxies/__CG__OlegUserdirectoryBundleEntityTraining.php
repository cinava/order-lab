<?php

namespace Proxies\__CG__\Oleg\UserdirectoryBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Training extends \Oleg\UserdirectoryBundle\Entity\Training implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'user', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'startDate', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'completionDate', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'completionReason', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'degree', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'appendDegreeToName', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'residencySpecialty', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'fellowshipSubspecialty', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'majors', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'minors', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'honors', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'fellowshipTitle', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'appendFellowshipTitleToName', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'institution', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'trainingType', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'jobTitle', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'geoLocation', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'description', 'id', 'author', 'updateAuthor', 'updateAuthorRoles', 'type', 'status', 'createdate', 'updatedate', 'orderinlist'];
        }

        return ['__isInitialized__', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'user', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'startDate', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'completionDate', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'completionReason', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'degree', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'appendDegreeToName', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'residencySpecialty', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'fellowshipSubspecialty', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'majors', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'minors', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'honors', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'fellowshipTitle', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'appendFellowshipTitleToName', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'institution', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'trainingType', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'jobTitle', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'geoLocation', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\Training' . "\0" . 'description', 'id', 'author', 'updateAuthor', 'updateAuthorRoles', 'type', 'status', 'createdate', 'updatedate', 'orderinlist'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Training $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompletionDate($completionDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompletionDate', [$completionDate]);

        return parent::setCompletionDate($completionDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompletionDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompletionDate', []);

        return parent::getCompletionDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartDate($startDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartDate', [$startDate]);

        return parent::setStartDate($startDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartDate', []);

        return parent::getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompletionReason($completionReason)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompletionReason', [$completionReason]);

        return parent::setCompletionReason($completionReason);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompletionReason()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompletionReason', []);

        return parent::getCompletionReason();
    }

    /**
     * {@inheritDoc}
     */
    public function setDegree($degree)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDegree', [$degree]);

        return parent::setDegree($degree);
    }

    /**
     * {@inheritDoc}
     */
    public function getDegree()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDegree', []);

        return parent::getDegree();
    }

    /**
     * {@inheritDoc}
     */
    public function setAppendDegreeToName($appendDegreeToName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAppendDegreeToName', [$appendDegreeToName]);

        return parent::setAppendDegreeToName($appendDegreeToName);
    }

    /**
     * {@inheritDoc}
     */
    public function getAppendDegreeToName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAppendDegreeToName', []);

        return parent::getAppendDegreeToName();
    }

    /**
     * {@inheritDoc}
     */
    public function setResidencySpecialty($residencySpecialty)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResidencySpecialty', [$residencySpecialty]);

        return parent::setResidencySpecialty($residencySpecialty);
    }

    /**
     * {@inheritDoc}
     */
    public function getResidencySpecialty()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResidencySpecialty', []);

        return parent::getResidencySpecialty();
    }

    /**
     * {@inheritDoc}
     */
    public function setFellowshipSubspecialty($fellowshipSubspecialty)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFellowshipSubspecialty', [$fellowshipSubspecialty]);

        return parent::setFellowshipSubspecialty($fellowshipSubspecialty);
    }

    /**
     * {@inheritDoc}
     */
    public function getFellowshipSubspecialty()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFellowshipSubspecialty', []);

        return parent::getFellowshipSubspecialty();
    }

    /**
     * {@inheritDoc}
     */
    public function setAppendFellowshipTitleToName($appendFellowshipTitleToName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAppendFellowshipTitleToName', [$appendFellowshipTitleToName]);

        return parent::setAppendFellowshipTitleToName($appendFellowshipTitleToName);
    }

    /**
     * {@inheritDoc}
     */
    public function getAppendFellowshipTitleToName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAppendFellowshipTitleToName', []);

        return parent::getAppendFellowshipTitleToName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFellowshipTitle($fellowshipTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFellowshipTitle', [$fellowshipTitle]);

        return parent::setFellowshipTitle($fellowshipTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getFellowshipTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFellowshipTitle', []);

        return parent::getFellowshipTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getMajors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMajors', []);

        return parent::getMajors();
    }

    /**
     * {@inheritDoc}
     */
    public function addMajor($major)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMajor', [$major]);

        return parent::addMajor($major);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMajor($major)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMajor', [$major]);

        return parent::removeMajor($major);
    }

    /**
     * {@inheritDoc}
     */
    public function getMinors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMinors', []);

        return parent::getMinors();
    }

    /**
     * {@inheritDoc}
     */
    public function addMinor($minor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMinor', [$minor]);

        return parent::addMinor($minor);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMinor($minor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMinor', [$minor]);

        return parent::removeMinor($minor);
    }

    /**
     * {@inheritDoc}
     */
    public function addHonor($honor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addHonor', [$honor]);

        return parent::addHonor($honor);
    }

    /**
     * {@inheritDoc}
     */
    public function removeHonor($honor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeHonor', [$honor]);

        return parent::removeHonor($honor);
    }

    /**
     * {@inheritDoc}
     */
    public function getHonors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHonors', []);

        return parent::getHonors();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstitution($institution)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstitution', [$institution]);

        return parent::setInstitution($institution);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstitution()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstitution', []);

        return parent::getInstitution();
    }

    /**
     * {@inheritDoc}
     */
    public function setTrainingType($trainingType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTrainingType', [$trainingType]);

        return parent::setTrainingType($trainingType);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrainingType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrainingType', []);

        return parent::getTrainingType();
    }

    /**
     * {@inheritDoc}
     */
    public function setJobTitle($jobTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJobTitle', [$jobTitle]);

        return parent::setJobTitle($jobTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobTitle', []);

        return parent::getJobTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getGeoLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGeoLocation', []);

        return parent::getGeoLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setGeoLocation($geoLocation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGeoLocation', [$geoLocation]);

        return parent::setGeoLocation($geoLocation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthor($author)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthor', [$author]);

        return parent::setAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthor', []);

        return parent::getAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedate', []);

        return parent::setCreatedate();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedate', []);

        return parent::getCreatedate();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderinlist($orderinlist)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderinlist', [$orderinlist]);

        return parent::setOrderinlist($orderinlist);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderinlist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderinlist', []);

        return parent::getOrderinlist();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdateAuthor($updateAuthor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdateAuthor', [$updateAuthor]);

        return parent::setUpdateAuthor($updateAuthor);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdateAuthor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdateAuthor', []);

        return parent::getUpdateAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedate', []);

        return parent::setUpdatedate();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedate', []);

        return parent::getUpdatedate();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdateAuthorRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdateAuthorRoles', []);

        return parent::getUpdateAuthorRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdateAuthorRoles($roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdateAuthorRoles', [$roles]);

        return parent::setUpdateAuthorRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function addUpdateAuthorRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUpdateAuthorRole', [$role]);

        return parent::addUpdateAuthorRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusStr', []);

        return parent::getStatusStr();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusStrByStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusStrByStatus', [$status]);

        return parent::getStatusStrByStatus($status);
    }

}
