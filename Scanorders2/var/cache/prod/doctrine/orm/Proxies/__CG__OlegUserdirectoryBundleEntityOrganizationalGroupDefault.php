<?php

namespace Proxies\__CG__\Oleg\UserdirectoryBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class OrganizationalGroupDefault extends \Oleg\UserdirectoryBundle\Entity\OrganizationalGroupDefault implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'id', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'siteParameter', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'institution', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'primaryPublicUserIdType', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'email', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'roles', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'timezone', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'tooltip', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'showToInstitutions', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'defaultInstitution', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'permittedInstitutionalPHIScope', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'employmentType', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'locale', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'languages', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'administrativeTitleInstitution', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'academicTitleInstitution', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'medicalTitleInstitution', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'locationTypes', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'locationInstitution', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'city', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'state', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'zip', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'country', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'medicalLicenseCountry', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'medicalLicenseState'];
        }

        return ['__isInitialized__', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'id', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'siteParameter', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'institution', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'primaryPublicUserIdType', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'email', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'roles', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'timezone', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'tooltip', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'showToInstitutions', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'defaultInstitution', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'permittedInstitutionalPHIScope', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'employmentType', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'locale', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'languages', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'administrativeTitleInstitution', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'academicTitleInstitution', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'medicalTitleInstitution', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'locationTypes', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'locationInstitution', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'city', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'state', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'zip', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'country', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'medicalLicenseCountry', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\OrganizationalGroupDefault' . "\0" . 'medicalLicenseState'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (OrganizationalGroupDefault $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getSiteParameter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSiteParameter', []);

        return parent::getSiteParameter();
    }

    /**
     * {@inheritDoc}
     */
    public function setSiteParameter($siteParameter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSiteParameter', [$siteParameter]);

        return parent::setSiteParameter($siteParameter);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstitution()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstitution', []);

        return parent::getInstitution();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstitution($institution)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstitution', [$institution]);

        return parent::setInstitution($institution);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrimaryPublicUserIdType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrimaryPublicUserIdType', []);

        return parent::getPrimaryPublicUserIdType();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrimaryPublicUserIdType($primaryPublicUserIdType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrimaryPublicUserIdType', [$primaryPublicUserIdType]);

        return parent::setPrimaryPublicUserIdType($primaryPublicUserIdType);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getTimezone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimezone', []);

        return parent::getTimezone();
    }

    /**
     * {@inheritDoc}
     */
    public function setTimezone($timezone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTimezone', [$timezone]);

        return parent::setTimezone($timezone);
    }

    /**
     * {@inheritDoc}
     */
    public function getTooltip()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTooltip', []);

        return parent::getTooltip();
    }

    /**
     * {@inheritDoc}
     */
    public function setTooltip($tooltip)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTooltip', [$tooltip]);

        return parent::setTooltip($tooltip);
    }

    /**
     * {@inheritDoc}
     */
    public function getPermittedInstitutionalPHIScope()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPermittedInstitutionalPHIScope', []);

        return parent::getPermittedInstitutionalPHIScope();
    }

    /**
     * {@inheritDoc}
     */
    public function addPermittedInstitutionalPHIScope($permittedInstitutionalPHIScope)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPermittedInstitutionalPHIScope', [$permittedInstitutionalPHIScope]);

        return parent::addPermittedInstitutionalPHIScope($permittedInstitutionalPHIScope);
    }

    /**
     * {@inheritDoc}
     */
    public function removePermittedInstitutionalPHIScope($permittedInstitutionalPHIScope)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePermittedInstitutionalPHIScope', [$permittedInstitutionalPHIScope]);

        return parent::removePermittedInstitutionalPHIScope($permittedInstitutionalPHIScope);
    }

    /**
     * {@inheritDoc}
     */
    public function addShowToInstitution($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addShowToInstitution', [$item]);

        return parent::addShowToInstitution($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeShowToInstitution($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeShowToInstitution', [$item]);

        return parent::removeShowToInstitution($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getShowToInstitutions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShowToInstitutions', []);

        return parent::getShowToInstitutions();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultInstitution()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultInstitution', []);

        return parent::getDefaultInstitution();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultInstitution($defaultInstitution)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultInstitution', [$defaultInstitution]);

        return parent::setDefaultInstitution($defaultInstitution);
    }

    /**
     * {@inheritDoc}
     */
    public function addLanguage($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLanguage', [$item]);

        return parent::addLanguage($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLanguage($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLanguage', [$item]);

        return parent::removeLanguage($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguages', []);

        return parent::getLanguages();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmploymentType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmploymentType', []);

        return parent::getEmploymentType();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmploymentType($employmentType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmploymentType', [$employmentType]);

        return parent::setEmploymentType($employmentType);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocale', []);

        return parent::getLocale();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocale($locale)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocale', [$locale]);

        return parent::setLocale($locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocationTypes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocationTypes', []);

        return parent::getLocationTypes();
    }

    /**
     * {@inheritDoc}
     */
    public function addLocationType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLocationType', [$type]);

        return parent::addLocationType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLocationType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLocationType', [$type]);

        return parent::removeLocationType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdministrativeTitleInstitution()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdministrativeTitleInstitution', []);

        return parent::getAdministrativeTitleInstitution();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdministrativeTitleInstitution($administrativeTitleInstitution)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdministrativeTitleInstitution', [$administrativeTitleInstitution]);

        return parent::setAdministrativeTitleInstitution($administrativeTitleInstitution);
    }

    /**
     * {@inheritDoc}
     */
    public function getAcademicTitleInstitution()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcademicTitleInstitution', []);

        return parent::getAcademicTitleInstitution();
    }

    /**
     * {@inheritDoc}
     */
    public function setAcademicTitleInstitution($academicTitleInstitution)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcademicTitleInstitution', [$academicTitleInstitution]);

        return parent::setAcademicTitleInstitution($academicTitleInstitution);
    }

    /**
     * {@inheritDoc}
     */
    public function getMedicalTitleInstitution()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMedicalTitleInstitution', []);

        return parent::getMedicalTitleInstitution();
    }

    /**
     * {@inheritDoc}
     */
    public function setMedicalTitleInstitution($medicalTitleInstitution)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMedicalTitleInstitution', [$medicalTitleInstitution]);

        return parent::setMedicalTitleInstitution($medicalTitleInstitution);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocationInstitution()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocationInstitution', []);

        return parent::getLocationInstitution();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocationInstitution($locationInstitution)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocationInstitution', [$locationInstitution]);

        return parent::setLocationInstitution($locationInstitution);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', []);

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity($city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', [$city]);

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', []);

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function setState($state)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', [$state]);

        return parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getZip()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getZip', []);

        return parent::getZip();
    }

    /**
     * {@inheritDoc}
     */
    public function setZip($zip)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setZip', [$zip]);

        return parent::setZip($zip);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', []);

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry($country)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', [$country]);

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getMedicalLicenseCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMedicalLicenseCountry', []);

        return parent::getMedicalLicenseCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setMedicalLicenseCountry($medicalLicenseCountry)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMedicalLicenseCountry', [$medicalLicenseCountry]);

        return parent::setMedicalLicenseCountry($medicalLicenseCountry);
    }

    /**
     * {@inheritDoc}
     */
    public function getMedicalLicenseState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMedicalLicenseState', []);

        return parent::getMedicalLicenseState();
    }

    /**
     * {@inheritDoc}
     */
    public function setMedicalLicenseState($medicalLicenseState)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMedicalLicenseState', [$medicalLicenseState]);

        return parent::setMedicalLicenseState($medicalLicenseState);
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function addRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', [$role]);

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', [$role]);

        return parent::removeRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function hasRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasRole', [$role]);

        return parent::hasRole($role);
    }

}
