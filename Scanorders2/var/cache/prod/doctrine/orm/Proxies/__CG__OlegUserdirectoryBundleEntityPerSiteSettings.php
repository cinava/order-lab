<?php

namespace Proxies\__CG__\Oleg\UserdirectoryBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PerSiteSettings extends \Oleg\UserdirectoryBundle\Entity\PerSiteSettings implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\PerSiteSettings' . "\0" . 'permittedInstitutionalPHIScope', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\PerSiteSettings' . "\0" . 'scanOrdersServicesScope', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\PerSiteSettings' . "\0" . 'chiefServices', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\PerSiteSettings' . "\0" . 'defaultInstitution', 'user', 'tooltip', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\PerSiteSettings' . "\0" . 'organizationalGroupDefault', 'id', 'author', 'updateAuthor', 'updateAuthorRoles', 'type', 'status', 'createdate', 'updatedate', 'orderinlist'];
        }

        return ['__isInitialized__', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\PerSiteSettings' . "\0" . 'permittedInstitutionalPHIScope', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\PerSiteSettings' . "\0" . 'scanOrdersServicesScope', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\PerSiteSettings' . "\0" . 'chiefServices', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\PerSiteSettings' . "\0" . 'defaultInstitution', 'user', 'tooltip', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\PerSiteSettings' . "\0" . 'organizationalGroupDefault', 'id', 'author', 'updateAuthor', 'updateAuthorRoles', 'type', 'status', 'createdate', 'updatedate', 'orderinlist'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PerSiteSettings $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getPermittedInstitutionalPHIScope()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPermittedInstitutionalPHIScope', []);

        return parent::getPermittedInstitutionalPHIScope();
    }

    /**
     * {@inheritDoc}
     */
    public function addPermittedInstitutionalPHIScope($permittedInstitutionalPHIScope)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPermittedInstitutionalPHIScope', [$permittedInstitutionalPHIScope]);

        return parent::addPermittedInstitutionalPHIScope($permittedInstitutionalPHIScope);
    }

    /**
     * {@inheritDoc}
     */
    public function removePermittedInstitutionalPHIScope($permittedInstitutionalPHIScope)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePermittedInstitutionalPHIScope', [$permittedInstitutionalPHIScope]);

        return parent::removePermittedInstitutionalPHIScope($permittedInstitutionalPHIScope);
    }

    /**
     * {@inheritDoc}
     */
    public function getScanOrdersServicesScope()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScanOrdersServicesScope', []);

        return parent::getScanOrdersServicesScope();
    }

    /**
     * {@inheritDoc}
     */
    public function addScanOrdersServicesScope($scanOrdersServicesScope)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addScanOrdersServicesScope', [$scanOrdersServicesScope]);

        return parent::addScanOrdersServicesScope($scanOrdersServicesScope);
    }

    /**
     * {@inheritDoc}
     */
    public function removeScanOrdersServicesScope($scanOrdersServicesScope)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeScanOrdersServicesScope', [$scanOrdersServicesScope]);

        return parent::removeScanOrdersServicesScope($scanOrdersServicesScope);
    }

    /**
     * {@inheritDoc}
     */
    public function getScanOrderInstitutionScope()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScanOrderInstitutionScope', []);

        return parent::getScanOrderInstitutionScope();
    }

    /**
     * {@inheritDoc}
     */
    public function getChiefServices()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChiefServices', []);

        return parent::getChiefServices();
    }

    /**
     * {@inheritDoc}
     */
    public function addChiefService($chiefService)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChiefService', [$chiefService]);

        return parent::addChiefService($chiefService);
    }

    /**
     * {@inheritDoc}
     */
    public function removeChiefService($chiefService)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeChiefService', [$chiefService]);

        return parent::removeChiefService($chiefService);
    }

    /**
     * {@inheritDoc}
     */
    public function setTooltip($tooltip)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTooltip', [$tooltip]);

        return parent::setTooltip($tooltip);
    }

    /**
     * {@inheritDoc}
     */
    public function getTooltip()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTooltip', []);

        return parent::getTooltip();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultInstitution($defaultInstitution)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultInstitution', [$defaultInstitution]);

        return parent::setDefaultInstitution($defaultInstitution);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultInstitution()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultInstitution', []);

        return parent::getDefaultInstitution();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganizationalGroupDefault()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganizationalGroupDefault', []);

        return parent::getOrganizationalGroupDefault();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganizationalGroupDefault($organizationalGroupDefault)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganizationalGroupDefault', [$organizationalGroupDefault]);

        return parent::setOrganizationalGroupDefault($organizationalGroupDefault);
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthor($author)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthor', [$author]);

        return parent::setAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthor', []);

        return parent::getAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedate', []);

        return parent::setCreatedate();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedate', []);

        return parent::getCreatedate();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderinlist($orderinlist)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderinlist', [$orderinlist]);

        return parent::setOrderinlist($orderinlist);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderinlist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderinlist', []);

        return parent::getOrderinlist();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdateAuthor($updateAuthor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdateAuthor', [$updateAuthor]);

        return parent::setUpdateAuthor($updateAuthor);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdateAuthor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdateAuthor', []);

        return parent::getUpdateAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedate', []);

        return parent::setUpdatedate();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedate', []);

        return parent::getUpdatedate();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdateAuthorRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdateAuthorRoles', []);

        return parent::getUpdateAuthorRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdateAuthorRoles($roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdateAuthorRoles', [$roles]);

        return parent::setUpdateAuthorRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function addUpdateAuthorRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUpdateAuthorRole', [$role]);

        return parent::addUpdateAuthorRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusStr', []);

        return parent::getStatusStr();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusStrByStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusStrByStatus', [$status]);

        return parent::getStatusStrByStatus($status);
    }

}
