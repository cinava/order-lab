<?php

namespace Proxies\__CG__\Oleg\UserdirectoryBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \Oleg\UserdirectoryBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'dn', 'keytype', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'primaryPublicUserId', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'infos', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'createdby', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'preferences', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'credentials', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'trainings', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'fellowshipApplications', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'locations', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'administrativeTitles', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'appointmentTitles', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'medicalTitles', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'employmentStatus', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'researchLabs', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'grants', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'publications', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'books', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'lectures', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'privateComments', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'publicComments', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'confidentialComments', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'adminComments', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'avatar', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'permissions', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'perSiteSettings', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'testingAccount', 'username', 'usernameCanonical', 'email', 'emailCanonical', 'enabled', 'salt', 'password', 'plainPassword', 'lastLogin', 'confirmationToken', 'passwordRequestedAt', 'groups', 'roles'];
        }

        return ['__isInitialized__', 'id', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'dn', 'keytype', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'primaryPublicUserId', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'infos', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'createdby', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'preferences', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'credentials', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'trainings', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'fellowshipApplications', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'locations', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'administrativeTitles', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'appointmentTitles', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'medicalTitles', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'employmentStatus', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'researchLabs', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'grants', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'publications', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'books', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'lectures', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'privateComments', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'publicComments', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'confidentialComments', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'adminComments', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'avatar', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'permissions', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'perSiteSettings', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\User' . "\0" . 'testingAccount', 'username', 'usernameCanonical', 'email', 'emailCanonical', 'enabled', 'salt', 'password', 'plainPassword', 'lastLogin', 'confirmationToken', 'passwordRequestedAt', 'groups', 'roles'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setDn($dn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDn', [$dn]);

        return parent::setDn($dn);
    }

    /**
     * {@inheritDoc}
     */
    public function getDn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDn', []);

        return parent::getDn();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdNull()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdNull', []);

        return parent::setIdNull();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvatar($avatar)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvatar', [$avatar]);

        return parent::setAvatar($avatar);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvatar()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvatar', []);

        return parent::getAvatar();
    }

    /**
     * {@inheritDoc}
     */
    public function setKeytype($keytype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setKeytype', [$keytype]);

        return parent::setKeytype($keytype);
    }

    /**
     * {@inheritDoc}
     */
    public function getKeytype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKeytype', []);

        return parent::getKeytype();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrimaryPublicUserId($primaryPublicUserId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrimaryPublicUserId', [$primaryPublicUserId]);

        return parent::setPrimaryPublicUserId($primaryPublicUserId);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrimaryPublicUserId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrimaryPublicUserId', []);

        return parent::getPrimaryPublicUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTestingAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTestingAccount', []);

        return parent::getTestingAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function setTestingAccount($testingAccount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTestingAccount', [$testingAccount]);

        return parent::setTestingAccount($testingAccount);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedby($createdby = 'ldap')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedby', [$createdby]);

        return parent::setCreatedby($createdby);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedby()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedby', []);

        return parent::getCreatedby();
    }

    /**
     * {@inheritDoc}
     */
    public function getMainLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMainLocation', []);

        return parent::getMainLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function getHomeLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHomeLocation', []);

        return parent::getHomeLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function hasRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasRole', [$role]);

        return parent::hasRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function setPreferences($preferences)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreferences', [$preferences]);

        return parent::setPreferences($preferences);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreferences()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreferences', []);

        return parent::getPreferences();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function addTraining($training)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTraining', [$training]);

        return parent::addTraining($training);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTraining($training)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTraining', [$training]);

        return parent::removeTraining($training);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrainings()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrainings', []);

        return parent::getTrainings();
    }

    /**
     * {@inheritDoc}
     */
    public function addFellowshipApplication($training)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFellowshipApplication', [$training]);

        return parent::addFellowshipApplication($training);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFellowshipApplication($training)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFellowshipApplication', [$training]);

        return parent::removeFellowshipApplication($training);
    }

    /**
     * {@inheritDoc}
     */
    public function getFellowshipApplications()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFellowshipApplications', []);

        return parent::getFellowshipApplications();
    }

    /**
     * {@inheritDoc}
     */
    public function addLocation($location)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLocation', [$location]);

        return parent::addLocation($location);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLocation($locations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLocation', [$locations]);

        return parent::removeLocation($locations);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocations', []);

        return parent::getLocations();
    }

    /**
     * {@inheritDoc}
     */
    public function addAdministrativeTitle($administrativeTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAdministrativeTitle', [$administrativeTitle]);

        return parent::addAdministrativeTitle($administrativeTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAdministrativeTitle($administrativeTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAdministrativeTitle', [$administrativeTitle]);

        return parent::removeAdministrativeTitle($administrativeTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdministrativeTitles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdministrativeTitles', []);

        return parent::getAdministrativeTitles();
    }

    /**
     * {@inheritDoc}
     */
    public function addAppointmentTitle($appointmentTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAppointmentTitle', [$appointmentTitle]);

        return parent::addAppointmentTitle($appointmentTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAppointmentTitle($appointmentTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAppointmentTitle', [$appointmentTitle]);

        return parent::removeAppointmentTitle($appointmentTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getAppointmentTitles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAppointmentTitles', []);

        return parent::getAppointmentTitles();
    }

    /**
     * {@inheritDoc}
     */
    public function addMedicalTitle($medicalTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMedicalTitle', [$medicalTitle]);

        return parent::addMedicalTitle($medicalTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMedicalTitle($medicalTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMedicalTitle', [$medicalTitle]);

        return parent::removeMedicalTitle($medicalTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getMedicalTitles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMedicalTitles', []);

        return parent::getMedicalTitles();
    }

    /**
     * {@inheritDoc}
     */
    public function setCredentials($credentials)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCredentials', [$credentials]);

        return parent::setCredentials($credentials);
    }

    /**
     * {@inheritDoc}
     */
    public function getCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCredentials', []);

        return parent::getCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function addEmploymentStatus($employmentStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEmploymentStatus', [$employmentStatus]);

        return parent::addEmploymentStatus($employmentStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function addEmploymentStatu($employmentStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEmploymentStatu', [$employmentStatus]);

        return parent::addEmploymentStatu($employmentStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEmploymentStatus($employmentStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEmploymentStatus', [$employmentStatus]);

        return parent::removeEmploymentStatus($employmentStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEmploymentStatu($employmentStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEmploymentStatu', [$employmentStatus]);

        return parent::removeEmploymentStatu($employmentStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmploymentStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmploymentStatus', []);

        return parent::getEmploymentStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getPrivateComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrivateComments', []);

        return parent::getPrivateComments();
    }

    /**
     * {@inheritDoc}
     */
    public function addPrivateComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPrivateComment', [$comment]);

        return parent::addPrivateComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function removePrivateComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePrivateComment', [$comment]);

        return parent::removePrivateComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublicComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublicComments', []);

        return parent::getPublicComments();
    }

    /**
     * {@inheritDoc}
     */
    public function addPublicComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPublicComment', [$comment]);

        return parent::addPublicComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function removePublicComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePublicComment', [$comment]);

        return parent::removePublicComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdminComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdminComments', []);

        return parent::getAdminComments();
    }

    /**
     * {@inheritDoc}
     */
    public function addAdminComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAdminComment', [$comment]);

        return parent::addAdminComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAdminComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAdminComment', [$comment]);

        return parent::removeAdminComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfidentialComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfidentialComments', []);

        return parent::getConfidentialComments();
    }

    /**
     * {@inheritDoc}
     */
    public function addConfidentialComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addConfidentialComment', [$comment]);

        return parent::addConfidentialComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function removeConfidentialComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeConfidentialComment', [$comment]);

        return parent::removeConfidentialComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function addResearchLab($researchLab)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addResearchLab', [$researchLab]);

        return parent::addResearchLab($researchLab);
    }

    /**
     * {@inheritDoc}
     */
    public function removeResearchLab($researchLab)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeResearchLab', [$researchLab]);

        return parent::removeResearchLab($researchLab);
    }

    /**
     * {@inheritDoc}
     */
    public function getResearchLabs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResearchLabs', []);

        return parent::getResearchLabs();
    }

    /**
     * {@inheritDoc}
     */
    public function addGrant($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGrant', [$item]);

        return parent::addGrant($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGrant($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGrant', [$item]);

        return parent::removeGrant($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getGrants()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGrants', []);

        return parent::getGrants();
    }

    /**
     * {@inheritDoc}
     */
    public function addPublication($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPublication', [$item]);

        return parent::addPublication($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removePublication($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePublication', [$item]);

        return parent::removePublication($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublications()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublications', []);

        return parent::getPublications();
    }

    /**
     * {@inheritDoc}
     */
    public function addBook($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBook', [$item]);

        return parent::addBook($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBook($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBook', [$item]);

        return parent::removeBook($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getBooks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBooks', []);

        return parent::getBooks();
    }

    /**
     * {@inheritDoc}
     */
    public function addLecture($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLecture', [$item]);

        return parent::addLecture($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLecture($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLecture', [$item]);

        return parent::removeLecture($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getLectures()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLectures', []);

        return parent::getLectures();
    }

    /**
     * {@inheritDoc}
     */
    public function getPermissions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPermissions', []);

        return parent::getPermissions();
    }

    /**
     * {@inheritDoc}
     */
    public function addPermission($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPermission', [$item]);

        return parent::addPermission($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removePermission($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePermission', [$item]);

        return parent::removePermission($item);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsernameForce($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsernameForce', [$username]);

        return parent::setUsernameForce($username);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsernameCanonicalForce($usernameCanonical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsernameCanonicalForce', [$usernameCanonical]);

        return parent::setUsernameCanonicalForce($usernameCanonical);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsernameCanonical($usernameCanonical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsernameCanonical', [$usernameCanonical]);

        return parent::setUsernameCanonical($usernameCanonical);
    }

    /**
     * {@inheritDoc}
     */
    public function setUniqueUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUniqueUsername', []);

        return parent::setUniqueUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function createUniqueUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createUniqueUsername', []);

        return parent::createUniqueUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function createUniqueUsernameByKeyKeytype($keytype, $key)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createUniqueUsernameByKeyKeytype', [$keytype, $key]);

        return parent::createUniqueUsernameByKeyKeytype($keytype, $key);
    }

    /**
     * {@inheritDoc}
     */
    public function createCleanUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createCleanUsername', [$username]);

        return parent::createCleanUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsernamePrefix($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsernamePrefix', [$username]);

        return parent::getUsernamePrefix($username);
    }

    /**
     * {@inheritDoc}
     */
    public function usernameIsValid($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'usernameIsValid', [$username]);

        return parent::usernameIsValid($username);
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplaynameIfEmpty()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplaynameIfEmpty', []);

        return parent::setDisplaynameIfEmpty();
    }

    /**
     * {@inheritDoc}
     */
    public function addInfo($info)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addInfo', [$info]);

        return parent::addInfo($info);
    }

    /**
     * {@inheritDoc}
     */
    public function removeInfo($info)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeInfo', [$info]);

        return parent::removeInfo($info);
    }

    /**
     * {@inheritDoc}
     */
    public function getInfos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInfos', []);

        return parent::getInfos();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocked($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocked', [$value]);

        return parent::setLocked($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setSuffix($suffix)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSuffix', [$suffix]);

        return parent::setSuffix($suffix);
    }

    /**
     * {@inheritDoc}
     */
    public function getSuffix()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSuffix', []);

        return parent::getSuffix();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', [$firstName]);

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', []);

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setMiddleName($middleName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMiddleName', [$middleName]);

        return parent::setMiddleName($middleName);
    }

    /**
     * {@inheritDoc}
     */
    public function getMiddleName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMiddleName', []);

        return parent::getMiddleName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($lastName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', [$lastName]);

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', []);

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalutation($salutation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalutation', [$salutation]);

        return parent::setSalutation($salutation);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalutation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalutation', []);

        return parent::getSalutation();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastNameUppercase()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastNameUppercase', []);

        return parent::getLastNameUppercase();
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstNameUppercase()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstNameUppercase', []);

        return parent::getFirstNameUppercase();
    }

    /**
     * {@inheritDoc}
     */
    public function capitalizeIfNotAllCapital($s)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'capitalizeIfNotAllCapital', [$s]);

        return parent::capitalizeIfNotAllCapital($s);
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayName($displayName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayName', [$displayName]);

        return parent::setDisplayName($displayName);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayName', []);

        return parent::getDisplayName();
    }

    /**
     * {@inheritDoc}
     */
    public function setPreferredPhone($preferredPhone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreferredPhone', [$preferredPhone]);

        return parent::setPreferredPhone($preferredPhone);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreferredPhone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreferredPhone', []);

        return parent::getPreferredPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setInitials($initials)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInitials', [$initials]);

        return parent::setInitials($initials);
    }

    /**
     * {@inheritDoc}
     */
    public function getInitials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInitials', []);

        return parent::getInitials();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailCanonical($emailCanonical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailCanonical', [$emailCanonical]);

        return parent::setEmailCanonical($emailCanonical);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailCanonical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailCanonical', []);

        return parent::getEmailCanonical();
    }

    /**
     * {@inheritDoc}
     */
    public function setPerSiteSettings($perSiteSettings)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPerSiteSettings', [$perSiteSettings]);

        return parent::setPerSiteSettings($perSiteSettings);
    }

    /**
     * {@inheritDoc}
     */
    public function getPerSiteSettings()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPerSiteSettings', []);

        return parent::getPerSiteSettings();
    }

    /**
     * {@inheritDoc}
     */
    public function getCleanUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCleanUsername', []);

        return parent::getCleanUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserNameStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserNameStr', []);

        return parent::getUserNameStr();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserNameShortStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserNameShortStr', []);

        return parent::getUserNameShortStr();
    }

    /**
     * {@inheritDoc}
     */
    public function getPrimaryUseridKeytypeStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrimaryUseridKeytypeStr', []);

        return parent::getPrimaryUseridKeytypeStr();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsernameShortest()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsernameShortest', []);

        return parent::getUsernameShortest();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsernameOptimal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsernameOptimal', []);

        return parent::getUsernameOptimal();
    }

    /**
     * {@inheritDoc}
     */
    public function getSingleLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSingleLastName', []);

        return parent::getSingleLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function getSingleFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSingleFirstName', []);

        return parent::getSingleFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function getSingleSalutation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSingleSalutation', []);

        return parent::getSingleSalutation();
    }

    /**
     * {@inheritDoc}
     */
    public function getInstitutions($type = NULL, $status = NULL, $priority = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstitutions', [$type, $status, $priority]);

        return parent::getInstitutions($type, $status, $priority);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeduplicatedInstitutions($priority = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeduplicatedInstitutions', [$priority]);

        return parent::getDeduplicatedInstitutions($priority);
    }

    /**
     * {@inheritDoc}
     */
    public function isSingleUniqueKeyMatchCombination($array, $key1, $match1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSingleUniqueKeyMatchCombination', [$array, $key1, $match1]);

        return parent::isSingleUniqueKeyMatchCombination($array, $key1, $match1);
    }

    /**
     * {@inheritDoc}
     */
    public function getBosses()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBosses', []);

        return parent::getBosses();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitleAndNameByTitle($admintitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitleAndNameByTitle', [$admintitle]);

        return parent::getTitleAndNameByTitle($admintitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getDetailsArr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetailsArr', []);

        return parent::getDetailsArr();
    }

    /**
     * {@inheritDoc}
     */
    public function getDetailsArrFromTitles($titles, $res)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetailsArrFromTitles', [$titles, $res]);

        return parent::getDetailsArrFromTitles($titles, $res);
    }

    /**
     * {@inheritDoc}
     */
    public function getMemoryUsage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMemoryUsage', []);

        return parent::getMemoryUsage();
    }

    /**
     * {@inheritDoc}
     */
    public function getAssistants()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssistants', []);

        return parent::getAssistants();
    }

    /**
     * {@inheritDoc}
     */
    public function getSiteRoles($sitename)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSiteRoles', [$sitename]);

        return parent::getSiteRoles($sitename);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllPhones()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllPhones', []);

        return parent::getAllPhones();
    }

    /**
     * {@inheritDoc}
     */
    public function getSinglePhoneAndPager()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSinglePhoneAndPager', []);

        return parent::getSinglePhoneAndPager();
    }

    /**
     * {@inheritDoc}
     */
    public function getAllEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllEmail', []);

        return parent::getAllEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function getSingleEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSingleEmail', []);

        return parent::getSingleEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function isInUserArray($users)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isInUserArray', [$users]);

        return parent::isInUserArray($users);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmploymentTerminatedStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmploymentTerminatedStr', []);

        return parent::getEmploymentTerminatedStr();
    }

    /**
     * {@inheritDoc}
     */
    public function getHeadInfo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeadInfo', []);

        return parent::getHeadInfo();
    }

    /**
     * {@inheritDoc}
     */
    public function addTitleInfo($instArr, $tablename, $titles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTitleInfo', [$instArr, $tablename, $titles]);

        return parent::addTitleInfo($instArr, $tablename, $titles);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeadInstitutionInfoArr($institution)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeadInstitutionInfoArr', [$institution]);

        return parent::getHeadInstitutionInfoArr($institution);
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueTitles($titles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueTitles', [$titles]);

        return parent::getUniqueTitles($titles);
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueTitlesStr($titles, $delimeter = '; ')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueTitlesStr', [$titles, $delimeter]);

        return parent::getUniqueTitlesStr($titles, $delimeter);
    }

    /**
     * {@inheritDoc}
     */
    public function addRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', [$role]);

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', []);

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', [$serialized]);

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsernameCanonical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsernameCanonical', []);

        return parent::getUsernameCanonical();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getPlainPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlainPassword', []);

        return parent::getPlainPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLogin', []);

        return parent::getLastLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmationToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmationToken', []);

        return parent::getConfirmationToken();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonExpired', []);

        return parent::isAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonLocked', []);

        return parent::isAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsNonExpired', []);

        return parent::isCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function isSuperAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSuperAdmin', []);

        return parent::isSuperAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', [$role]);

        return parent::removeRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function setSalt($salt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalt', [$salt]);

        return parent::setSalt($salt);
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', [$boolean]);

        return parent::setEnabled($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function setSuperAdmin($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSuperAdmin', [$boolean]);

        return parent::setSuperAdmin($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setPlainPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlainPassword', [$password]);

        return parent::setPlainPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function setLastLogin(\DateTime $time = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastLogin', [$time]);

        return parent::setLastLogin($time);
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmationToken($confirmationToken)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmationToken', [$confirmationToken]);

        return parent::setConfirmationToken($confirmationToken);
    }

    /**
     * {@inheritDoc}
     */
    public function setPasswordRequestedAt(\DateTime $date = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasswordRequestedAt', [$date]);

        return parent::setPasswordRequestedAt($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswordRequestedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswordRequestedAt', []);

        return parent::getPasswordRequestedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function isPasswordRequestNonExpired($ttl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPasswordRequestNonExpired', [$ttl]);

        return parent::isPasswordRequestNonExpired($ttl);
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroups', []);

        return parent::getGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupNames()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupNames', []);

        return parent::getGroupNames();
    }

    /**
     * {@inheritDoc}
     */
    public function hasGroup($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasGroup', [$name]);

        return parent::hasGroup($name);
    }

    /**
     * {@inheritDoc}
     */
    public function addGroup(\FOS\UserBundle\Model\GroupInterface $group)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGroup', [$group]);

        return parent::addGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGroup(\FOS\UserBundle\Model\GroupInterface $group)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGroup', [$group]);

        return parent::removeGroup($group);
    }

}
