<?php

namespace Proxies\__CG__\Oleg\FellAppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Rank extends \Oleg\FellAppBundle\Entity\Rank implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Oleg\\FellAppBundle\\Entity\\Rank' . "\0" . 'id', '' . "\0" . 'Oleg\\FellAppBundle\\Entity\\Rank' . "\0" . 'fellapp', '' . "\0" . 'Oleg\\FellAppBundle\\Entity\\Rank' . "\0" . 'rank', '' . "\0" . 'Oleg\\FellAppBundle\\Entity\\Rank' . "\0" . 'user', '' . "\0" . 'Oleg\\FellAppBundle\\Entity\\Rank' . "\0" . 'userroles', '' . "\0" . 'Oleg\\FellAppBundle\\Entity\\Rank' . "\0" . 'creationdate', '' . "\0" . 'Oleg\\FellAppBundle\\Entity\\Rank' . "\0" . 'updateuser', '' . "\0" . 'Oleg\\FellAppBundle\\Entity\\Rank' . "\0" . 'updateuserroles', '' . "\0" . 'Oleg\\FellAppBundle\\Entity\\Rank' . "\0" . 'updatedate'];
        }

        return ['__isInitialized__', '' . "\0" . 'Oleg\\FellAppBundle\\Entity\\Rank' . "\0" . 'id', '' . "\0" . 'Oleg\\FellAppBundle\\Entity\\Rank' . "\0" . 'fellapp', '' . "\0" . 'Oleg\\FellAppBundle\\Entity\\Rank' . "\0" . 'rank', '' . "\0" . 'Oleg\\FellAppBundle\\Entity\\Rank' . "\0" . 'user', '' . "\0" . 'Oleg\\FellAppBundle\\Entity\\Rank' . "\0" . 'userroles', '' . "\0" . 'Oleg\\FellAppBundle\\Entity\\Rank' . "\0" . 'creationdate', '' . "\0" . 'Oleg\\FellAppBundle\\Entity\\Rank' . "\0" . 'updateuser', '' . "\0" . 'Oleg\\FellAppBundle\\Entity\\Rank' . "\0" . 'updateuserroles', '' . "\0" . 'Oleg\\FellAppBundle\\Entity\\Rank' . "\0" . 'updatedate'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Rank $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getFellapp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFellapp', []);

        return parent::getFellapp();
    }

    /**
     * {@inheritDoc}
     */
    public function setFellapp($fellapp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFellapp', [$fellapp]);

        return parent::setFellapp($fellapp);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserroles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserroles', []);

        return parent::getUserroles();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserroles($userroles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserroles', [$userroles]);

        return parent::setUserroles($userroles);
    }

    /**
     * {@inheritDoc}
     */
    public function addUserrole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUserrole', [$role]);

        return parent::addUserrole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdateuserroles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdateuserroles', []);

        return parent::getUpdateuserroles();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdateuserroles($updateuserroles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdateuserroles', [$updateuserroles]);

        return parent::setUpdateuserroles($updateuserroles);
    }

    /**
     * {@inheritDoc}
     */
    public function addUpdateuserrole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUpdateuserrole', [$role]);

        return parent::addUpdateuserrole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreationdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreationdate', []);

        return parent::getCreationdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreationdate($creationdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreationdate', [$creationdate]);

        return parent::setCreationdate($creationdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdateuser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdateuser', []);

        return parent::getUpdateuser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdateuser($updateuser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdateuser', [$updateuser]);

        return parent::setUpdateuser($updateuser);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedate', []);

        return parent::getUpdatedate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedate', []);

        return parent::setUpdatedate();
    }

    /**
     * {@inheritDoc}
     */
    public function getRank()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRank', []);

        return parent::getRank();
    }

    /**
     * {@inheritDoc}
     */
    public function setRank($rank)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRank', [$rank]);

        return parent::setRank($rank);
    }

}
