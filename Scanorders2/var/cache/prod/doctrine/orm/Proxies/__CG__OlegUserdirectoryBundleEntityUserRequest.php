<?php

namespace Proxies\__CG__\Oleg\UserdirectoryBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class UserRequest extends \Oleg\UserdirectoryBundle\Entity\UserRequest implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'id', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'cwid', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'username', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'hascwid', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'name', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'firstName', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'email', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'phone', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'job', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'requestedInstitutionalPHIScope', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'requestedScanOrderInstitutionScope', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'request', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'similaruser', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'primaryService', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'status', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'creationdate', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'actiondate', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'referencename', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'referenceemail', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'referencephone', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'systemAccountRequest', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'siteName', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'roles'];
        }

        return ['__isInitialized__', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'id', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'cwid', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'username', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'hascwid', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'name', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'firstName', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'email', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'phone', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'job', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'requestedInstitutionalPHIScope', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'requestedScanOrderInstitutionScope', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'request', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'similaruser', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'primaryService', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'status', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'creationdate', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'actiondate', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'referencename', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'referenceemail', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'referencephone', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'systemAccountRequest', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'siteName', '' . "\0" . 'Oleg\\UserdirectoryBundle\\Entity\\UserRequest' . "\0" . 'roles'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (UserRequest $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setCwid($cwid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCwid', [$cwid]);

        return parent::setCwid($cwid);
    }

    /**
     * {@inheritDoc}
     */
    public function getCwid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCwid', []);

        return parent::getCwid();
    }

    /**
     * {@inheritDoc}
     */
    public function setRequest($request)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRequest', [$request]);

        return parent::setRequest($request);
    }

    /**
     * {@inheritDoc}
     */
    public function getRequest()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRequest', []);

        return parent::getRequest();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone', []);

        return parent::getPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function getJob()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJob', []);

        return parent::getJob();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone($phone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone', [$phone]);

        return parent::setPhone($phone);
    }

    /**
     * {@inheritDoc}
     */
    public function setJob($job)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJob', [$job]);

        return parent::setJob($job);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreationdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreationdate', []);

        return parent::setCreationdate();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreationdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreationdate', []);

        return parent::getCreationdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrimaryService($primaryService)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrimaryService', [$primaryService]);

        return parent::setPrimaryService($primaryService);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrimaryService()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrimaryService', []);

        return parent::getPrimaryService();
    }

    /**
     * {@inheritDoc}
     */
    public function setReferenceemail($referenceemail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReferenceemail', [$referenceemail]);

        return parent::setReferenceemail($referenceemail);
    }

    /**
     * {@inheritDoc}
     */
    public function getReferenceemail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReferenceemail', []);

        return parent::getReferenceemail();
    }

    /**
     * {@inheritDoc}
     */
    public function setReferencename($referencename)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReferencename', [$referencename]);

        return parent::setReferencename($referencename);
    }

    /**
     * {@inheritDoc}
     */
    public function getReferencename()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReferencename', []);

        return parent::getReferencename();
    }

    /**
     * {@inheritDoc}
     */
    public function setReferencephone($referencephone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReferencephone', [$referencephone]);

        return parent::setReferencephone($referencephone);
    }

    /**
     * {@inheritDoc}
     */
    public function getReferencephone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReferencephone', []);

        return parent::getReferencephone();
    }

    /**
     * {@inheritDoc}
     */
    public function setSimilaruser($similaruser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSimilaruser', [$similaruser]);

        return parent::setSimilaruser($similaruser);
    }

    /**
     * {@inheritDoc}
     */
    public function getSimilaruser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSimilaruser', []);

        return parent::getSimilaruser();
    }

    /**
     * {@inheritDoc}
     */
    public function setHascwid($hascwid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHascwid', [$hascwid]);

        return parent::setHascwid($hascwid);
    }

    /**
     * {@inheritDoc}
     */
    public function getHascwid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHascwid', []);

        return parent::getHascwid();
    }

    /**
     * {@inheritDoc}
     */
    public function getRequestedInstitutionalPHIScope()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRequestedInstitutionalPHIScope', []);

        return parent::getRequestedInstitutionalPHIScope();
    }

    /**
     * {@inheritDoc}
     */
    public function setRequestedInstitutionalPHIScope($requestedInstitutionalPHIScope)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRequestedInstitutionalPHIScope', [$requestedInstitutionalPHIScope]);

        return parent::setRequestedInstitutionalPHIScope($requestedInstitutionalPHIScope);
    }

    /**
     * {@inheritDoc}
     */
    public function addRequestedInstitutionalPHIScope(\Oleg\UserdirectoryBundle\Entity\Institution $institution)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRequestedInstitutionalPHIScope', [$institution]);

        return parent::addRequestedInstitutionalPHIScope($institution);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRequestedInstitutionalPHIScope(\Oleg\UserdirectoryBundle\Entity\Institution $institution)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRequestedInstitutionalPHIScope', [$institution]);

        return parent::removeRequestedInstitutionalPHIScope($institution);
    }

    /**
     * {@inheritDoc}
     */
    public function setRequestedScanOrderInstitutionScope($requestedScanOrderInstitutionScope)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRequestedScanOrderInstitutionScope', [$requestedScanOrderInstitutionScope]);

        return parent::setRequestedScanOrderInstitutionScope($requestedScanOrderInstitutionScope);
    }

    /**
     * {@inheritDoc}
     */
    public function getRequestedScanOrderInstitutionScope()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRequestedScanOrderInstitutionScope', []);

        return parent::getRequestedScanOrderInstitutionScope();
    }

    /**
     * {@inheritDoc}
     */
    public function setActiondate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActiondate', []);

        return parent::setActiondate();
    }

    /**
     * {@inheritDoc}
     */
    public function getActiondate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActiondate', []);

        return parent::getActiondate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', []);

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', [$firstName]);

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getSystemAccountRequest()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSystemAccountRequest', []);

        return parent::getSystemAccountRequest();
    }

    /**
     * {@inheritDoc}
     */
    public function setSystemAccountRequest($systemAccountRequest)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSystemAccountRequest', [$systemAccountRequest]);

        return parent::setSystemAccountRequest($systemAccountRequest);
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles($roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function addRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', [$role]);

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function hasRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasRole', [$role]);

        return parent::hasRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getSiteName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSiteName', []);

        return parent::getSiteName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSiteName($siteName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSiteName', [$siteName]);

        return parent::setSiteName($siteName);
    }

}
