<?php

namespace Proxies\__CG__\Oleg\TranslationalResearchBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Project extends \Oleg\TranslationalResearchBundle\Entity\Project implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'id', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'submitter', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'updateUser', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'createDate', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'updateDate', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'status', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'principalInvestigators', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'coInvestigators', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'pathologists', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'title', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'irbSubmitter', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'irbNumber', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'contact', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'funded', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'fundedAccountNumber', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'description', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'budgetSummary', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'totalCost', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'projectType', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'biostatisticalComment', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'administratorComment', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'primaryReviewerComment', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'readyForReview', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'approvalDate'];
        }

        return ['__isInitialized__', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'id', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'submitter', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'updateUser', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'createDate', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'updateDate', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'status', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'principalInvestigators', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'coInvestigators', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'pathologists', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'title', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'irbSubmitter', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'irbNumber', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'contact', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'funded', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'fundedAccountNumber', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'description', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'budgetSummary', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'totalCost', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'projectType', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'biostatisticalComment', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'administratorComment', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'primaryReviewerComment', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'readyForReview', '' . "\0" . 'Oleg\\TranslationalResearchBundle\\Entity\\Project' . "\0" . 'approvalDate'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Project $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubmitter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubmitter', []);

        return parent::getSubmitter();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubmitter($submitter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubmitter', [$submitter]);

        return parent::setSubmitter($submitter);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdateUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdateUser', []);

        return parent::getUpdateUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdateUser($updateUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdateUser', [$updateUser]);

        return parent::setUpdateUser($updateUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreateDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreateDate', []);

        return parent::getCreateDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreateDate($createDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreateDate', [$createDate]);

        return parent::setCreateDate($createDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdateDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdateDate', []);

        return parent::getUpdateDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdateDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdateDate', []);

        return parent::setUpdateDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getIrbSubmitter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIrbSubmitter', []);

        return parent::getIrbSubmitter();
    }

    /**
     * {@inheritDoc}
     */
    public function setIrbSubmitter($irbSubmitter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIrbSubmitter', [$irbSubmitter]);

        return parent::setIrbSubmitter($irbSubmitter);
    }

    /**
     * {@inheritDoc}
     */
    public function getIrbNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIrbNumber', []);

        return parent::getIrbNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setIrbNumber($irbNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIrbNumber', [$irbNumber]);

        return parent::setIrbNumber($irbNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getContact()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContact', []);

        return parent::getContact();
    }

    /**
     * {@inheritDoc}
     */
    public function setContact($contact)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContact', [$contact]);

        return parent::setContact($contact);
    }

    /**
     * {@inheritDoc}
     */
    public function getFunded()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFunded', []);

        return parent::getFunded();
    }

    /**
     * {@inheritDoc}
     */
    public function setFunded($funded)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFunded', [$funded]);

        return parent::setFunded($funded);
    }

    /**
     * {@inheritDoc}
     */
    public function getFundedAccountNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFundedAccountNumber', []);

        return parent::getFundedAccountNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setFundedAccountNumber($fundedAccountNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFundedAccountNumber', [$fundedAccountNumber]);

        return parent::setFundedAccountNumber($fundedAccountNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getBudgetSummary()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBudgetSummary', []);

        return parent::getBudgetSummary();
    }

    /**
     * {@inheritDoc}
     */
    public function setBudgetSummary($budgetSummary)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBudgetSummary', [$budgetSummary]);

        return parent::setBudgetSummary($budgetSummary);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalCost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalCost', []);

        return parent::getTotalCost();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalCost($totalCost)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalCost', [$totalCost]);

        return parent::setTotalCost($totalCost);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectType', []);

        return parent::getProjectType();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectType($projectType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectType', [$projectType]);

        return parent::setProjectType($projectType);
    }

    /**
     * {@inheritDoc}
     */
    public function getBiostatisticalComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBiostatisticalComment', []);

        return parent::getBiostatisticalComment();
    }

    /**
     * {@inheritDoc}
     */
    public function setBiostatisticalComment($biostatisticalComment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBiostatisticalComment', [$biostatisticalComment]);

        return parent::setBiostatisticalComment($biostatisticalComment);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdministratorComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdministratorComment', []);

        return parent::getAdministratorComment();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdministratorComment($administratorComment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdministratorComment', [$administratorComment]);

        return parent::setAdministratorComment($administratorComment);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrimaryReviewerComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrimaryReviewerComment', []);

        return parent::getPrimaryReviewerComment();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrimaryReviewerComment($primaryReviewerComment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrimaryReviewerComment', [$primaryReviewerComment]);

        return parent::setPrimaryReviewerComment($primaryReviewerComment);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrincipalInvestigators()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrincipalInvestigators', []);

        return parent::getPrincipalInvestigators();
    }

    /**
     * {@inheritDoc}
     */
    public function addPrincipalInvestigator($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPrincipalInvestigator', [$item]);

        return parent::addPrincipalInvestigator($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removePrincipalInvestigator($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePrincipalInvestigator', [$item]);

        return parent::removePrincipalInvestigator($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getCoInvestigators()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoInvestigators', []);

        return parent::getCoInvestigators();
    }

    /**
     * {@inheritDoc}
     */
    public function addCoInvestigator($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCoInvestigator', [$item]);

        return parent::addCoInvestigator($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCoInvestigator($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCoInvestigator', [$item]);

        return parent::removeCoInvestigator($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getPathologists()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPathologists', []);

        return parent::getPathologists();
    }

    /**
     * {@inheritDoc}
     */
    public function addPathologist($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPathologist', [$item]);

        return parent::addPathologist($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removePathologist($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePathologist', [$item]);

        return parent::removePathologist($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getReadyForReview()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReadyForReview', []);

        return parent::getReadyForReview();
    }

    /**
     * {@inheritDoc}
     */
    public function setReadyForReview($readyForReview)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReadyForReview', [$readyForReview]);

        return parent::setReadyForReview($readyForReview);
    }

    /**
     * {@inheritDoc}
     */
    public function getApprovalDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApprovalDate', []);

        return parent::getApprovalDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setApprovalDate($approvalDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApprovalDate', [$approvalDate]);

        return parent::setApprovalDate($approvalDate);
    }

}
