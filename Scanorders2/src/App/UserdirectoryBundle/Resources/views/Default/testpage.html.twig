{#
    Copyright 2017 Cornell University

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
#}

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>

    {#<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>#}

    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>

    <!-- Latest compiled and minified JavaScript -->
    <!--
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
    script src="//netdna.bootstrapcdn.com/bootstrap/3.0.3/js/bootstrap.min.js"></script>
    -->
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>

    <script src="https://raw.githubusercontent.com/eternicode/bootstrap-datepicker/master/js/bootstrap-datepicker.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/3.5.0/select2.min.js"></script>


    <script>

    var transactionTime = 500;

    var _photoLink = "";
    var _cvLink = "";
    var _coverLetterLink = "";
    var _reprimandExplanationLink = "";
    var _legalExplanationLink = "";

    $(document).ready(function() {

//        onFormSuccess();

        $('.panel-collapse').collapse({'toggle': false});
//
        initDatepicker();
//
//        initSelect();

        expandTextarea();

        $(document).scrollTop();

        addFileUlpoadOnchange();

        autofillPermanentAddress();




//        $(document).ready(function () {
            $.getJSON('https://script.google.com/a/macros/pathologysystems.org/s/AKfycbwvwigp9nGu8TqVk_Zj10NOiIs5Jeu7mhryvk6jg960/dev?prefix=?', null, function (results) {
                $('#form-content').html(results);
            });
//        });

    });

    function onFormFailure(error) {
        $('#formError').html('');
        var errorElement = '<div class="alert alert-danger" role="alert">'+error+'</div>';
        $('#formError').html(errorElement);
    }

    function onUploadFailure(error) {
        //console.log(error);
        alert(error);
        return false;
    }

    //check if last, first name and email are not empty
    function onUploadFileOK() {

        if( $('#lastName').val() == "" ) {
            onUploadFailure("Please fill in your Last Name before uploading");
            return false;
        }
        if( $('#firstName').val() == "") {
            onUploadFailure("Please fill in your First Name before uploading");
            return false;
        }
        if( $('#email').val() == "") {
            onUploadFailure("Please fill in your E-mail before uploading");
            return false;
        }
        return true;
    }

    function onFormSuccess() {

        //window.location.href = "http://google.com";
        //console.log("Submiteed Form!");
        var succElement = '<br><br><div id="succSubmition" class="alert alert-success" role="alert">Your application has been successfully submitted!</div>';
        $('.container').html(succElement);

        /////// None of the Scroll below does work! Is it because of iframe? ///////
        window.parent.parent.scrollTo(0,0);
        $('html, body', window.parent.document).animate({scrollTop:0}, 'slow');
        window.parent.$("body").animate({scrollTop:0}, 'slow');

        var target = document.getElementById("headerHandle");
        target.parentNode.scrollTop = target.offsetTop;

        var x = $('#headerHandle').offset().top;
        $('html,body').animate( {scrollTop: x}, 400 );
        /////////////////////////////////////////////////////////////////////////////
    }



    function fileUploadedReprimandExplanation(url) {
        _reprimandExplanationLink = fileUploaded(url,"uploadReprimandExplanationBtn","uploadedReprimandExplanationStatus","uploadedReprimandExplanationUrl");
    }
    function fileUploadedLegalExplanation(url) {
        _legalExplanationLink = fileUploaded(url,"uploadLegalExplanationBtn","uploadedLegalExplanationStatus","uploadedLegalExplanationUrl");
    }
    function fileUploadedCoverLetter(url) {
        _coverLetterLink = fileUploaded(url,"uploadCoverLetterBtn","uploadedCoverLetterStatus","uploadedCoverLetterUrl");
    }
    function fileUploadedCV(url) {
        _cvLink = fileUploaded(url,"uploadCurriculumVitaeBtn","uploadedCVStatus","uploadedCVUrl");
    }
    function fileUploadedPhoto(url) {
        _photoLink = fileUploaded(url,"uploadPhotoBtn","uploadedPhotoStatus","uploadedPhotoUrl");
    }
    function fileUploaded(url,uploadBtnID,uploadedStatusID,uploadedUrlID) {

        $('#'+uploadBtnID).hide();

        //$('#'+uploadedStatusID).attr('href',url);
        $('#'+uploadedStatusID).show();

        $('#'+uploadedUrlID).val(url);

        console.log('url='+url);
        return url;
    }

    //listener for file input field
    function addFileUlpoadOnchange() {

        $('.upload-file-field').on( 'click', function() {
            if( !onUploadFileOK() ) {
                return false;
            }

        });

        $('.upload-file-field').on( 'change', function() {

            var fileVal = $(this).val();
            var holder = $(this).closest('.row');
            var btnEl = holder.find('.uploadBtn');
            var statusEl = holder.find('.uploaded-file-status');

            //console.log('file input listener fileVal='+fileVal);

            if( fileVal != "" ) {

                //check if url is different
                if( !btnEl.is(":visible")  ) {
                    btnEl.val('Upload');
                    btnEl.show();
                    statusEl.hide();
                }

                //btnEl.removeClass('disabled');
                btnEl.prop('disabled', false);

            } else {

                //console.log('file input empty');

                if( !btnEl.is(":visible") ) {
                    btnEl.val('Press Here to Upload');
                    btnEl.show();
                    statusEl.hide();
                }

                btnEl.prop('disabled', true);

            }

        });

    }

    function resetUploadBtn(wellEl) {
        wellEl.find('.uploaded-file-status').hide();
        var btnEl = wellEl.find('.uploadBtn');
        btnEl.val('Press Here to Upload');
        btnEl.show();
        btnEl.prop('disabled', true);
    }


    function collapseAll() {
        $('.panel-collapse').collapse('hide');
        $('#collapseAll').addClass('btn-pressed-default');
        $('#expandAll').removeClass('btn-pressed-default');
    }

    function expandAll() {
        $('.panel-collapse').collapse('show');
        $('#expandAll').addClass('btn-pressed-default');
        $('#collapseAll').removeClass('btn-pressed-default');
    }


    function initSelect() {
        //$(".combobox").select2();

        var combobox_width = '100%'; //'element'

        $("select.combobox").select2({
            width: combobox_width,
            dropdownAutoWidth: true,
            placeholder: "Select an option",
            allowClear: true
            //selectOnBlur: false
            //readonly: true
            //containerCssClass: 'combobox-width'
        });

        $(".fellowshipTypeCombobox").on("change", function(e) {
            //console.log("selecting val=" + e.val + " choice=" + e.object.text);
            if( e.val == "Other" ) {
                $("#otherFellowshipType").show(transactionTime);
            } else {
                $("#otherFellowshipType").hide(transactionTime);
                $("#otherFellowshipType").val("");
            }
        });


        $(".usstates").select2({
            allowClear: true,
            width: combobox_width,
            dropdownAutoWidth: true,
            selectOnBlur: false,
            dataType: 'json',
            quietMillis: 100,
            multiple: false,
            data: _USStates,
            createSearchChoice:function(term,data) {
                return {id:term, text:term};
            }
        });



    }

    function initDatepicker() {
        //console.log('initDatepicker');
        var datepickers = $('.datepicker');
        //var datepickers = $('.input-group.date');
        initSingleDatepicker( datepickers );
    }
    function initSingleDatepicker( datepickerElement ) {

        //printF(datepickerElement,'datepicker element:');

        var endDate = new Date(); //use current date as default

        if( datepickerElement.hasClass('allow-future-date') ) {
            endDate = false;//'End of time';
        }
        //console.log('endDate='+endDate);

        //datepickerElement = datepickerElement.find('.datepicker');
        //console.log(datepickerElement);

        //to prevent datepicker clear on Enter key, use the version from https://github.com/eternicode/bootstrap-datepicker/issues/775
        datepickerElement.datepicker({
            autoclose: true,
            clearBtn: true,
            todayBtn: "linked",
            todayHighlight: true,
            endDate: endDate
        });
    }

    function hideWell(element) {
        $(element).closest('.form-holder-element').find('.wellcollapsable').hide(transactionTime);
        $(element).closest('.form-holder-element').find('.wellcollapsable').find('input,textarea').val('');
        resetUploadBtn($(element).closest('.form-holder-element').find('.wellcollapsable'));
    }

    function showWell(element) {
        $(element).closest('.form-holder-element').find('.wellcollapsable').show(transactionTime);

    }


    function expandTextarea() {
        var elements = $('.textarea');

        for (var i = 0; i < elements.length; ++i) {
            var element = elements[i];
            addEvent('keyup', element, function() {
                this.style.overflow = 'hidden';
                this.style.height = 0;
                var newH = this.scrollHeight + 10;
                //console.log("cur h="+this.style.height+", newH="+newH);
                this.style.height = newH + 'px';
            }, false);
        }
    }

    //Internet Explorer (up to version 8) used an alternate attachEvent method.
    // The following should be an attempt to write a cross-browser addEvent function.
    function addEvent(event, elem, func) {
        if (elem.addEventListener)  // W3C DOM
            elem.addEventListener(event,func,false);
        else if (elem.attachEvent) { // IE DOM
            //elem.attachEvent("on"+event, func);
            elem.attachEvent("on" + event, function() {return(func.call(elem, window.event));});
        }
        else { // No much to do
            elem[event] = func;
        }
    }


    function autofillPermanentAddress() {

        //on change
        $('#samePAddress').on( "change", function() {
            if( $(this).is(':checked') ) {
                //copy address fields
                copyAddressFields(true);
            } else {
                //clean address fields
                copyAddressFields(false);
            }

        });


    }


    function copyAddressFields(copyFlag) {

        var presentAddressStreet1 = $('#presentAddressStreet1');
        var presentAddressStreet2 = $('#presentAddressStreet2');
        var presentAddressCity = $('#presentAddressCity');
        var presentAddressState = $('#presentAddressState');
        var presentAddressZip = $('#presentAddressZip');
        var presentAddressCountry = $('#presentAddressCountry');

        var permanentAddressStreet1 = $('#permanentAddressStreet1');
        var permanentAddressStreet2 = $('#permanentAddressStreet2');
        var permanentAddressCity = $('#permanentAddressCity');
        var permanentAddressState = $('#permanentAddressState');
        var permanentAddressZip = $('#permanentAddressZip');
        var permanentAddressCountry = $('#permanentAddressCountry');

        if( copyFlag ) {

            permanentAddressStreet1.val( presentAddressStreet1.val() );
            permanentAddressStreet2.val( presentAddressStreet2.val() );
            permanentAddressCity.val( presentAddressCity.val() );
            permanentAddressZip.val( presentAddressZip.val() );
            permanentAddressCountry.val( presentAddressCountry.val() );

            permanentAddressState.select2( 'val', presentAddressState.select2('val') );

        } else {

            permanentAddressStreet1.val('');
            permanentAddressStreet2.val('');
            permanentAddressCity.val('');
            permanentAddressZip.val('');
            permanentAddressCountry.val('');

            permanentAddressState.select2( 'val', null );

        }






    }
    </script>


    {#<script>#}
        {#$(document).ready(function () {#}
            {#$.getJSON('https://script.google.com/a/macros/pathologysystems.org/s/AKfycbwvwigp9nGu8TqVk_Zj10NOiIs5Jeu7mhryvk6jg960/exec?prefix=?', null, function (results) {#}
                {#$('#form-content').html(results);#}
            {#});#}
        {#});#}
    {#</script>#}

</head>

<body>
<div id="form-content"></div>
</body>

</html>






