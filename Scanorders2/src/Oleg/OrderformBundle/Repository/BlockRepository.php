<?php

namespace Oleg\OrderformBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Oleg\OrderformBundle\Helper\FormHelper;

/**
 * BlockRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BlockRepository extends EntityRepository
{
    
    //this function will create an entity if it doesn't exist or return the existing entity object
    public function processEntity( $block, $part=null ) {  
        
        $em = $this->_em;

        if( $part == null || $part->getId() == null) {
            $em->persist($block);
            //$em->flush();

            return $block;
        }

        $helper = new FormHelper();
        $key = $block->getName();

        if( $key >= 0 ) {
            $name = $helper->getBlock();
            $block->setName( $name[$key] );
            //echo "name =" .  $name[$key];
        }
        //exit();

        //Check if the part has the block with the same name    
        $query = $em->createQuery(
            'SELECT b FROM OlegOrderformBundle:Block b
            JOIN b.part p
            JOIN p.accession a
            WHERE p = :part AND b.name = :bname AND a = :acc'
        )->setParameters( array(
            'part' => $part,
            'bname' => $block->getName(),
            'acc' => $part->getAccession()
        ));

        $block_found =  $query->getResult();
                  
        if( $block_found == null ) {
            $em->persist($block);
            //$em->flush();

            return $block;
        }

//        echo " block_found is not null ";
//        echo "block count=".count($block_found)."<br>";
//        exit();

        $block_res = $block_found[0];
        //copy all children to existing entity
        foreach( $block->getSlide() as $slide ) {
            $block_res->addSlide($slide);
        }

       //anyway we should get only one block found 
       return $block_res;
    }
    
}
