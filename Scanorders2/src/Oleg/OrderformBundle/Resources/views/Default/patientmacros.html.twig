
{% macro displayPatient( patient, patientCount, status, showPlus, datastructure, type, formtype ) %}

    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}


        {############# patient #############}

        {% set uid = patientCount~'_'~0~'_'~0~'_'~0~'_'~0~'_'~0~'_'~0~'_'~0~'_'~0 %}
        <div id="formpanel_patient_{{ uid }}" class="panel panel-patient panel-multi-form">

            {{ formmacros.message_panel_header(
                patient,'patient', datastructure, type, formtype, patientCount, uid,
                patientCount, 0, 0, 0, 0, 0, 0, 0, 0)
            }}


            <div id="form_body_patient_{{ uid }}" class="panel-body panel-body-multi-form collapse in">

                {#patient form#}
                {{ formmacros.patientForm(
                    patient,
                    datastructure,
                    uid,
                    type,
                    status,
                    showPlus,
                    formtype
                ) }}

                {############# encounter #############}
                {% set encounterCount = 0 %}
                {% for encounter in patient.encounter %}

                    {#encounter panel#}
                    {% set uid = patientCount~'_'~encounterCount~'_'~0~'_'~0~'_'~0~'_'~0~'_'~0~'_'~0~'_'~0 %}
                    <div id="formpanel_encounter_{{ uid }}" class="panel panel-encounter panel-multi-form">

                    {#encounter header#}
                    {{ formmacros.message_panel_header(
                    encounter,'encounter', datastructure, type, formtype, encounterCount, uid,
                    patientCount, encounterCount, 0, 0, 0, 0, 0, 0, 0)
                    }}

                    {#encounter body#}
                    <div id="form_body_encounter_{{ uid }}" class="panel-body panel-body-multi-form collapse in">

                        {#encounter form#}
                        {% if datastructure and (datastructure == "datastructure" or datastructure == "datastructure-patient") %}
                            {{ formmacros.encounterForm(encounter,datastructure,uid,type,status,showPlus) }}
                        {% endif %}

                        {############# procedure #############}
                        {% set procedureCount = 0 %}
                        {% for procedure in encounter.procedure %}

                            {#procedure header#}
                            {% set uid = patientCount~'_'~encounterCount~'_'~procedureCount~'_'~0~'_'~0~'_'~0~'_'~0~'_'~0~'_'~0 %}
                            {% if datastructure and (datastructure == "datastructure" or datastructure == "datastructure-patient") %}
                                <div id="formpanel_procedure_{{ uid }}" class="panel panel-procedure panel-multi-form">
                                    {#procedure header#}
                                    {{ formmacros.message_panel_header(
                                    procedure,'procedure', datastructure, type, formtype, encounterCount, uid,
                                    patientCount, encounterCount, procedureCount, 0, 0, 0, 0, 0, 0)
                                    }}

                                    {#procedure body#}
                                    <div id="form_body_procedure_{{ uid }}" class="panel-body panel-body-multi-form collapse in">
                                        {{ formmacros.procedureForm(procedure,datastructure,uid,type,status,showPlus) }}
                            {% endif %}


                            {############# accession #############}
                            {% set accessionCount = 0 %}
                            {% for accession in procedure.accession %}
                                {% set uid = patientCount~'_'~encounterCount~'_'~procedureCount~'_'~accessionCount~'_'~0~'_'~0~'_'~0~'_'~0~'_'~0 %}

                                {% if datastructure and (datastructure == "datastructure" or datastructure == "datastructure-patient") %}
                                        <div id="formpanel_accession_{{ uid }}" class="panel panel-accession panel-multi-form">
                                        {{ formmacros.message_panel_header(
                                        accession,'accession', datastructure, type, formtype, accessionCount, uid,
                                        patientCount, encounterCount, procedureCount, accessionCount, 0, 0, 0, 0, 0)
                                        }}

                                        <div id="form_body_accession_{{ uid }}" class="panel-body panel-body-multi-form collapse in">
                                {% endif %}

                                {#accession form#}
                                {{ formmacros.accessionForm(encounter,procedure,accession,datastructure,uid,type,status,showPlus) }}

                                {#############  part    #############}
                                {% set partCount = 0 %}
                                {% for part in accession.part %}
                                    {% set uid = patientCount~'_'~encounterCount~'_'~procedureCount~'_'~accessionCount~'_'~partCount~'_'~0~'_'~0~'_'~0~'_'~0 %}
                                    <div id="formpanel_part_{{ uid }}" class="panel panel-part panel-multi-form">

                                        {{ formmacros.message_panel_header(
                                        part,'part', datastructure, type, formtype, partCount, uid,
                                        patientCount, encounterCount, procedureCount, accessionCount, partCount, 0, 0, 0, 0)
                                        }}

                                        <div id="form_body_part_{{ uid }}" class="panel-body panel-body-multi-form collapse in">

                                            {{ formmacros.partForm( part, datastructure, uid, type, status, showPlus, "","","","","","","") }}


                                            {#block#}
                                            {% set blockCount = 0 %}
                                            {% for block in part.block %}
                                                {#block id={{ block.vars.value.id }}#}
                                                {% set uid = patientCount~'_'~encounterCount~'_'~procedureCount~'_'~accessionCount~'_'~partCount~'_'~blockCount~'_'~0~'_'~0~'_'~0 %}
                                                <div id="formpanel_block_{{ uid }}" class="panel panel-block panel-multi-form">
                                                    {{ formmacros.message_panel_header(
                                                    block,'block', datastructure, type, formtype, blockCount, uid,
                                                    patientCount, encounterCount, procedureCount, accessionCount, partCount, blockCount, 0, 0, 0)
                                                    }}

                                                    <div id="form_body_block_{{ uid }}" class="panel-body panel-body-multi-form collapse in">
                                                        {#{{ formmacros.field(block.name) }}#}
                                                        {{ formmacros.blockForm( block, datastructure, uid, type, status, showPlus) }}


                                                        {#slide#}
                                                        {% set slideCount = 0 %}
                                                        {% for slide in block.slide %}
                                                            {#slide id={{ slide.vars.value.id }}#}
                                                            {% set uid = patientCount~'_'~encounterCount~'_'~procedureCount~'_'~accessionCount~'_'~partCount~'_'~blockCount~'_'~slideCount~'_'~0~'_'~0 %}
                                                            <div id="formpanel_slide_{{ uid }}" class="panel panel-slide panel-multi-form">
                                                                {{ formmacros.message_panel_header(
                                                                slide,'slide', datastructure, type, formtype, slideCount, uid,
                                                                patientCount, encounterCount, procedureCount, accessionCount, partCount, blockCount, slideCount, 0, 0)
                                                                }}

                                                                <div id="form_body_slide_{{ uid }}" class="panel-body panel-body-multi-form collapse in">

                                                                    {{ formmacros.slideForm( slide, datastructure, uid, type ) }}

                                                                </div>
                                                            </div> {#end of slide#}
                                                            {% set slideCount = slideCount + 1 %}
                                                        {% endfor %}


                                                    </div>
                                                    {% set blockCount = blockCount + 1 %}
                                                </div> {#end of block#}
                                            {% endfor %}

                                            {#part's slide#}
                                            {% set slideCount = 0 %}
                                            {% for slide in part.slide %}
                                                {% set uid = patientCount~'_'~encounterCount~'_'~procedureCount~'_'~accessionCount~'_'~partCount~'_'~blockCount~'_'~slideCount~'_'~0~'_'~0 %}
                                                <div id="formpanel_slide_{{ uid }}" class="panel panel-slide panel-multi-form">
                                                    {{ formmacros.message_panel_header(
                                                    slide,'slide', datastructure, type, formtype, slideCount, uid,
                                                    patientCount, encounterCount, procedureCount, accessionCount, partCount, blockCount, slideCount, 0, 0)
                                                    }}

                                                    <div id="form_body_slide_{{ uid }}" class="panel-body panel-body-multi-form collapse in">

                                                        {{ formmacros.slideForm( slide, datastructure, uid, type ) }}

                                                    </div>
                                                </div> {#end of slide#}
                                                {% set slideCount = slideCount + 1 %}
                                            {% endfor %}



                                        </div>
                                    </div> {#end of part#}
                                    {% set partCount = partCount + 1 %}
                                {% endfor %}

                                {% if datastructure and (datastructure == "datastructure" or datastructure == "datastructure-patient") %}
                                        </div>
                                    </div> {#end of accession#}
                                {% endif %}
                                {% set accessionCount = accessionCount + 1 %}
                            {% endfor %}


                            {% if datastructure and (datastructure == "datastructure" or datastructure == "datastructure-patient") %}
                                    </div>
                                </div> {#end of procedure#}
                            {% endif %}
                            {% set procedureCount = procedureCount + 1 %}
                        {% endfor %} {# procedure loop #}

                        </div>

                    </div>{#end of encounter #}
                    {% set encounterCount = encounterCount + 1 %}
                {% endfor %} {# encounter loop #}


            </div>{# end of form_body_patient_ #}

        </div> {#end of patient #}

        {#{% set patientCount = patientCount + 1 %}#}
    {#{% endfor %} &#123;&#35; patient loop &#35;&#125;#}


{% endmacro %}



{#Macros to display a patient form #}
{#patient - is patient form; type == cycle#}
{% macro displayFullPatientForm( formPatient, status, showPlus, datastructure, type, formtype, patientParentForm, dataqualityPrototype ) %}

    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% import "OlegOrderformBundle::Default/patientmacros.html.twig" as patientmacros %}
    {% import "OlegUserdirectoryBundle::Default/usermacros.html.twig" as usermacros %}

    {#{{ formmacros.testSpotShow(formPatient) }}#}

    {% if type != 'show' %}
        {#{% set mrnHtml = formmacros.inputField(formPatient.vars.prototype.mrn,type,"key","prototype","","","","patientmrn","") %}#}
        {% if formPatient.vars.prototype is defined and formPatient.vars.prototype %}
            {% set patientPrototype = formPatient.vars.prototype %}
            {% set patientMrn = formPatient.vars.prototype.mrn %}
            {% set patientDob = formPatient.vars.prototype.dob %}
            {% set patientClinicalHistory = formPatient.vars.prototype.clinicalHistory %}
            {% set patientEncounter = formPatient.vars.prototype.encounter %}
            {#{% set patientSpotField = formPatient.tracker.spots %}#}
        {% else %}
            {% set patientPrototype = formPatient %}
            {% set patientMrn = formPatient.mrn %}
            {% set patientDob = formPatient.dob %}
            {% set patientClinicalHistory = formPatient.clinicalHistory %}
            {% set patientEncounter = formPatient.encounter %}
            {#{% set patientSpotField = formPatient.tracker.spots %}#}
        {% endif %}

        {% set mrnHtml = formmacros.inputField(patientMrn,type,"key","prototype","","","","patientmrn","") %}
        {% set dobHtml = formmacros.inputField(patientDob,type,"date","prototype") %}
        {% set clinicalhistoryHtml = formmacros.inputField(patientClinicalHistory,type,"","prototype") %}

        {% if formPatient.tracker is defined %}
            {% set patientSpotField = formPatient.tracker.spots %}
            {#{% set patienttrackerHtml = formmacros.inputField(patientTracker,type,"","prototype") %}#}
            {% set patientspotWidget = formmacros.fieldPatientSpotWidget(patientSpotField,type,"employees","prototype","patienttrackerspot") %}
            {% set spotHtml = formmacros.inputField(patientSpotField,type,"patienttrackerspot","prototype",patientspotWidget) %}
        {% else %}
            {% set patientspotWidget = "" %}
            {% set spotHtml = "" %}
        {% endif %}

        {#{% set accessionHtml = formmacros.inputField(formPatient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.accession,type,"key","prototype","","","","accessionaccession","") %}#}
        {% set accessionHtml = formmacros.inputField(patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.accession,type,"key","prototype","","","","accessionaccession","") %}

        {#{% set encounterHtml = formmacros.inputField(formPatient.vars.prototype.encounter.vars.prototype.name,type,"","prototype") %}#}
        {#{% set encounternumberHtml = formmacros.inputField(formPatient.vars.prototype.encounter.vars.prototype.number,type,"","prototype","","","nolabel") %}#}
        {% set encounterdateHtml = formmacros.inputField(patientEncounter.vars.prototype.date,type,"date","prototype") %}

        {% set procedurenameHtml = formmacros.inputField(patientEncounter.vars.prototype.procedure.vars.prototype.name,type,"","prototype") %}
        {#{% set procedurenumberHtml = formmacros.inputField(formPatient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.number,type,"","prototype","","","nolabel") %}#}
        {#{% set proceduredateHtml = formmacros.inputField(formPatient.vars.prototype.encounter.vars.prototype.procedure.vars.prototype.date,type,"date","prototype") %}#}

        {% set patsuffixHtml = formmacros.inputField(patientEncounter.vars.prototype.patsuffix,type,"","prototype","","","","encounterpatsuffix") %}
        {% set patlastnameHtml = formmacros.inputField(patientEncounter.vars.prototype.patlastname,type,"","prototype","","","","encounterpatlastname") %}
        {% set patfirstnameHtml = formmacros.inputField(patientEncounter.vars.prototype.patfirstname,type,"","prototype","","","","encounterpatfirstname") %}
        {% set patmiddlenameHtml = formmacros.inputField(patientEncounter.vars.prototype.patmiddlename,type,"","prototype","","","","encounterpatmiddlename") %}

        {% set patageHtml = formmacros.inputField(patientEncounter.vars.prototype.patage,type,"","prototype") %}
        {% set patsexHtml = formmacros.inputField(patientEncounter.vars.prototype.patsex,type,"","prototype") %}
        {% set patpathistoryHtml = formmacros.inputField(patientEncounter.vars.prototype.pathistory,type,"","prototype","","","","encounterpathistory") %}

        {% set accessiondateHtml = formmacros.inputField(patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.accessionDate,type,"date","prototype") %}

        {% set partnameHtml = formmacros.inputField(patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.partname,type,"key","prototype") %}
        {% set sourceorganHtml = formmacros.inputField(patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.sourceOrgan,type,"","prototype") %}
        {% set parttitleHtml = formmacros.inputField(patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.parttitle,type,"","prototype") %}
        {% set paperHtml = formmacros.inputField(patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.paper,type,"paper","prototype") %}
        {% set descriptionHtml = formmacros.inputField(patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.description,type,"","prototype") %}
        {% set diagnosisHtml = formmacros.inputField(patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.disident,type,"","prototype") %}

        {% set diffDiagnosesField = patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.diffDisident %}
        {% set diffDiagnosesWidget = formmacros.fieldWidget(diffDiagnosesField) %}
        {% set diffDiagnosesHtml = formmacros.inputField(diffDiagnosesField,type,"partdiffDisident","prototype",diffDiagnosesWidget,"") %}

        {% set diseaseTypeHtml = formmacros.inputField(patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.diseaseType,type,"diseaseType","prototype") %}

        {% set blocknameHtml = formmacros.inputField(patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.blockname,type,"key","prototype") %}
        {% set sectionsourceHtml = formmacros.inputField(patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.sectionsource,type,"","prototype") %}

        {% set relevantScansField = patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.slide.vars.prototype.relevantScans %}
        {% set relevantScansWidget = formmacros.fieldWidgetNoOther(relevantScansField) %}
        {% set relevantScansHtml = formmacros.inputField(relevantScansField,type,"sliderelevantScans","prototype",relevantScansWidget,"") %}

        {% set specialStainsField = patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.specialStains %}
        {% set specialStainsWidget = formmacros.fieldSpecialStainsWidget(specialStainsField) %}
        {% set specialStainsHtml = formmacros.inputField(specialStainsField,type,"blockspecialStains","prototype",specialStainsWidget,"buttonbottom","") %}

    {% endif %}

    {% set uid = '__patient_____encounter_____procedure_____accession_____part_____block_____slide_____scan_____stain__' %}

    {#type:{{ type }}<br>#}
    {#{{ formmacros.testSpotShow(formPatient) }}#}

    <div id="form-prototype-data"

            {% if type != 'show' %}

                {#data-prototype-dataquality = "{{ formmacros.dataQualityWidgetNotMapped(form.conflicts.vars.prototype)|e }}"#}
                {% if dataqualityPrototype is defined and dataqualityPrototype %}
                    data-prototype-dataquality = "{{ formmacros.dataQualityWidgetNotMapped(dataqualityPrototype)|e }}"
                {% endif %}

                data-prototype-patient="{{ formmacros.patientForm(
                patientPrototype,
                "check",
                uid,
                type,
                status,
                showPlus,
                formtype,
                mrnHtml,
                dobHtml,
                clinicalhistoryHtml,
                spotHtml
                )|e }}"

                data-prototype-patientmrn=               "{{ mrnHtml|e }}"
                data-prototype-patientdob=               "{{ dobHtml|e }}"
                data-prototype-patientclinicalhistory=   "{{ clinicalhistoryHtml|e }}"
                data-prototype-patienttrackerspot=       "{{ patientspotWidget|e }}"

                data-prototype-encounter="
         {{ formmacros.accessionForm(
                patientEncounter.vars.prototype,
                patientEncounter.vars.prototype.procedure.vars.prototype,
                patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype,
                "check",uid,type,status,showPlus,
                procedurenameHtml,
                accessionHtml,
                accessiondateHtml,
                encounterdateHtml,
                patsuffixHtml,
                patlastnameHtml,
                patfirstnameHtml,
                patmiddlenameHtml,
                patageHtml,
                patsexHtml,
                patpathistoryHtml
                )|e }}
         "
                data-prototype-accessionaccession= "{{ accessionHtml|e }}"
                data-prototype-accessionaccessiondate= "{{ accessiondateHtml|e }}"
                {#data-prototype-encounternumber= "{{ encounternumberHtml|e }}"#}
                data-prototype-procedurename= "{{ procedurenameHtml|e }}"
                {#data-prototype-procedurenumber= "{{ procedurenumberHtml|e }}"#}

                data-prototype-encounterdate= "{{ encounterdateHtml|e }}"
                data-prototype-encounterpatsuffix= "{{ patsuffixHtml|e }}"
                data-prototype-encounterpatlastname= "{{ patlastnameHtml|e }}"
                data-prototype-encounterpatfirstname= "{{ patfirstnameHtml|e }}"
                data-prototype-encounterpatmiddlename= "{{ patmiddlenameHtml|e }}"

                data-prototype-encounterpatage= "{{ patageHtml|e }}"
                data-prototype-encounterpatsex= "{{ patsexHtml|e }}"
                data-prototype-encounterpathistory= "{{ patpathistoryHtml|e }}"

                data-prototype-part="
            {{ formmacros.partForm(
                patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype,
                "check", uid, type, status, showPlus,
                partnameHtml,
                sourceorganHtml,
                parttitleHtml,
                paperHtml,
                descriptionHtml,
                diagnosisHtml,
                diffDiagnosesHtml,
                diseaseTypeHtml
                )|e }}
          "

                {#requires for adding field by pressing +; to remove label replace the last "" by "nolabel"; withspace=""#}
                data-prototype-addpartdiffDisident="{{ formmacros.inputField(diffDiagnosesField,type,"partdiffDisident","prototype",diffDiagnosesWidget,"","","","","minusplusbtn")|e }}"
                {#requires for check form to populate fields by AJAX (no '+' buttons)#}
                data-prototype-partdiffDisident="{{ formmacros.inputField(diffDiagnosesField,type,"partdiffDisident","prototype",diffDiagnosesWidget,"","","","","plusbtn")|e }}"
                data-prototype-partpaper= "{{ paperHtml|e }}"

                data-prototype-block="
        {{ formmacros.blockForm(
                patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype,
                "check", uid, type, status, showPlus,
                blocknameHtml, sectionsourceHtml, specialStainsHtml
                )|e }}
        "
                data-prototype-slide="
        {{ formmacros.slideForm( patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.slide.vars.prototype, "", uid, type,
                formmacros.field(patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.slide.vars.prototype.slidetype),
                formmacros.field(patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.slide.vars.prototype.stain.vars.prototype.field),
                formmacros.field(patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.slide.vars.prototype.scan.vars.prototype.magnification),
                formmacros.field(patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.slide.vars.prototype.scan.vars.prototype.scanregion),
                formmacros.field(patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.slide.vars.prototype.scan.vars.prototype.note),
                formmacros.field(patientEncounter.vars.prototype.procedure.vars.prototype.accession.vars.prototype.part.vars.prototype.block.vars.prototype.slide.vars.prototype.microscopicdescr),
                relevantScansHtml
                )|e }}
        "

                {#requires for adding field by pressing +; to remove label replace the last "" by "nolabel"#}
                data-prototype-addsliderelevantScans="{{ formmacros.inputField(relevantScansField,type,"sliderelevantScans","prototype",relevantScansWidget,"","","","","minusplusbtn")|e }}"
                {#requires for check form to populate fields by AJAX (no '+' buttons)#}
                data-prototype-sliderelevantScans="{{ formmacros.inputField(relevantScansField,type,"sliderelevantScans","prototype",relevantScansWidget,"","","","","plusbtn")|e }}"

                {#requires for adding field by pressing +; to remove label replace the last "" by "nolabel"#}
                data-prototype-addblockspecialStains="{{ formmacros.inputField(specialStainsField,type,"blockspecialStains","prototype",specialStainsWidget,"","","","withspace","minusplusbtn")|e }}"
                {#requires for check form to populate fields by AJAX (no '+' buttons)#}
                data-prototype-blockspecialStains="{{ formmacros.inputField(specialStainsField,type,"blockspecialStains","prototype",specialStainsWidget,"","","","","plusbtn")|e }}"

            {% endif %}

         data-uploadurl = "{{ oneup_uploader_endpoint('scan_gallery') }}"
         data-userid = "{{ app.security.getToken().getUser().getId() }}"

    ></div>
    {#Note: addSameForm button pass variables - object name and 6 counts for: 1-patient, 2-proceudre, 3-accession, 4-part, 5-block, 6-slide#}

    {#{{ formmacros.testSpotShow(formPatient) }}#}

    {% set patientCount = 0 %}

    {% if patientParentForm is defined and patientParentForm %}

        {#patient; form - is order form#}
        {% for thisFormPatient in patientParentForm %}

            {#{% set patientCount = 0 %}#}

            {#Patient hierarchy form#}
            {{ patientmacros.displayPatient(
                thisFormPatient,
                patientCount,
                status,
                showPlus,
                datastructure,
                type,
                formtype
            ) }}

            {% set patientCount = patientCount + 1 %}

        {% endfor %} {# patient loop #}

    {% else %}

        {#status: 'Submitted'#}
        {{ patientmacros.displayPatient(
            formPatient,
            patientCount,
            status,
            showPlus,
            datastructure,
            type,
            formtype
        ) }}

    {% endif %}


{% endmacro %}




