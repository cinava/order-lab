parameters:

    #idle time in seconds: 60 min * 60 sec = 3600 seconds
#    session_max_idle_time: 3600


#framework:
#    session:
#        cookie_lifetime: 20
#        gc_maxlifetime: 10

fr3d_ldap:
    driver:
       host:          a.wcmc-ad.net                         # Required
       username:      svc_aperio_spectrum@a.wcmc-ad.net     # Optional
       password:      Aperi0,123                            # Optional
       accountDomainName: a.wcmc-ad.net                     # Required
#       accountDomainNameShort: LOCAL
#       bindRequiresDn:      true   # Optional
#       baseDn:              ou=users, dc=host, dc=foo   # Optional
#       accountFilterFormat: (&(uid=%s)) # Optional. sprintf format %s will be the username
#       optReferrals:        false  # Optional
#       useSsl:              true   # Enable SSL negotiation. Optional
#       useStartTls:         true   # Enable TLS negotiation. Optional
    user:
            baseDn: dc=a,dc=wcmc-ad,dc=net                  # Required
            filter: (&(ObjectClass=user))
            attributes:          # Specify ldap attributes mapping [ldap attribute, user object method]
                - { ldap_attr: cn,   user_method: setUsername }
                - { ldap_attr: mail,   user_method: setEmail }
                - { ldap_attr: sn,   user_method: setLastName }
                - { ldap_attr: title,   user_method: setTitle }
                - { ldap_attr: givenname,   user_method: setFirstName }
                - { ldap_attr: displayname,   user_method: setDisplayName }

#                - { ldap_attr: streetaddress,   user_method: setLastName }
#                - { ldap_attr: objectGUID,   user_method: setName }
#                - { ldap_attr: dn,   user_method: setDn }
#                - { ldap_attr: uid,  user_method: setName }

#              - { ldap_attr: cn,   user_method: setUsername }
#               - { ldap_attr: uid,  user_method: setName } # Default
#               - { ldap_attr: cn,   user_method: setName }     # Optional
    #           - { ldap_attr: ...,  user_method: ... }         # Optional
    service:
        ldap_manager:  oleg.security.ldap_manager
#        user_manager: fos_user.user_manager          # Overrides default user manager
    #       ldap_manager: fr3d_ldap.ldap_manager.default # Overrides default ldap manager

#fos user bundle
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Oleg\OrderformBundle\Entity\User
#    group:
#        group_class: Oleg\OrderformBundle\Entity\Group

services:

    #Custom selector fields
    order_form.type.stain_selector:
        class: Oleg\OrderformBundle\Form\CustomType\CustomSelectorType
        arguments: ["@doctrine.orm.entity_manager","@security.context", "@service_container"]
        tags:
            - { name: form.type, alias: custom_selector }

    #Custom selector fields with data
    order_form.type.custom_data_selector:
        class: Oleg\OrderformBundle\Form\CustomType\CustomDataSelectorType
        arguments: ["@doctrine.orm.entity_manager","@security.context", "@service_container"]
        tags:
            - { name: form.type, alias: custom_data_selector }

    #Redirect admin to index
    authentication_handler:
        class: Oleg\OrderformBundle\Security\Authentication\LoginSuccessHandler
        arguments:  [@router, @security.context, @doctrine.orm.entity_manager]

    #Override Ldap Manager
    oleg.security.ldap_manager:
        class: Oleg\OrderformBundle\Security\Authentication\LdapManager
        arguments: [@fr3d_ldap.ldap_driver, @fr3d_ldap.user_manager, %fr3d_ldap.ldap_manager.parameters%, %default_time_zone%]

    #idle time out handler (can pass %session_max_idle_time%. Now use DB)
    oleg.handler.session_idle:
        class: Oleg\OrderformBundle\Helper\SessionIdleHandler
        arguments: ["@session", "@security.context", "@router", "@doctrine.orm.entity_manager"]
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }


    #aperio authentication
    aperio.security.authentication.provider:
        class: Oleg\OrderformBundle\Security\Authentication\AperioProvider
        arguments: ["", @service_container,"aperio_ldap_firewall",%default_time_zone%]

    #aperio listener
    aperio.security.authentication.listener:
        class: Oleg\OrderformBundle\Security\Firewall\AperioListener
        arguments: ["@security.context", "@security.authentication.manager", "aperio_ldap_firewall"]

    #twig listener
    twigdate.listener.request:
        class: Oleg\OrderformBundle\Services\TwigDateRequestListener
        arguments: ["@twig", "@security.context", %default_time_zone%]
        tags:
              - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
