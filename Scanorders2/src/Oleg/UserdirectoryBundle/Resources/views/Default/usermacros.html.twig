
{% macro fileupload( comment, cycle, classname, prototype ) %}


    {% import _self as usermacros %}

    <p>
    <div class="row files-upload-holder" style="height: 50px">
        <div class="col-xs-6" align="right">
            <strong>Attached Document(s):</strong>
        </div>
        <div class="col-xs-6" align="left">

            <div class="dropzone file-upload-dropzone" style="min-height: 150px; margin-bottom: 5px;">

                {% if cycle != "show_user" %}
                    <div class="dz-message" style="padding-bottom:5px;"><span>Drag and drop files here to upload or click to select a file (Maximum 4 files, 10 MB each)</span></div>
                {% else %}
                    <div class="dz-message" style="padding-bottom:5px;"><span></span></div>
                {% endif %}

                {{ usermacros.document( comment, cycle, prototype ) }}

            </div>

            {#{% do comment.documents.setRendered %}#}

        </div>
    </div>
    </p>

{% endmacro %}

{% macro document( comment, cycle, prototype ) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}

    {% for document in comment.documents %}

        <div class="dz-preview dz-file-preview" style="width:24%; height:220px; margin:0;">
            <div class="dz-details">
                <div class="dz-filename"><span data-dz-name>{{ document.vars.value.uniquename }}</span></div>
                <div class="dz-size" data-dz-size><strong>{{ document.vars.value.getSizeStr() }}</strong></div>
                <img data-dz-thumbnail alt="{{ document.vars.value.originalname }}" src="{{ document.vars.value.getAbsoluteUploadFullPath }}" style="display:block;" />
            </div>
            <div class="dz-progress"><span class="dz-upload" data-dz-uploadprogress></span></div>
            <div class="dz-success-mark"><span>✔</span></div>
            <div class="dz-error-mark"><span>✘</span></div>
            <div class="dz-error-message"><span data-dz-errormessage></span></div>

            {#link to open/download file#}
            <div class="file-upload-showlink">
                <div style="overflow:hidden; white-space:nowrap;">
                    {#<a href="{{ document.vars.value.getRelativeUploadFullPath() }}" target="_blank">{{ document.vars.value.originalname }}</a>#}
                    <a target="_blank" href="{{ path(employees_sitename~'_file_download', { 'id': document.vars.value.id }) }}">{{ document.vars.value.originalname }}</a>
                </div>
            </div>

            {% if cycle != "show_user" and cycle != "show" %}
                <a data-dz-remove="" href="javascript:void(0);" class="dz-remove" onclick="removeUploadedFile(this)">Remove file</a>
            {% endif %}

            {{ formmacros.field(document.id) }}
        </div>

        {% do document.setRendered %}

    {% endfor %}

    {% do comment.documents.setRendered %}

{% endmacro %}



{% macro getInstitutionalTree( entity, linktype ) %}

    {% import _self as usermacros %}

    {% if linktype is defined and linktype == 'userlink' %}
    {% else %}
        {% set linktype = 'nodelink' %}
    {% endif %}

    <ol class="breadcrumb">

        {#institution#}
        {% if entity.parent.parent.parent is defined %}
            <li>{{ usermacros.hrefLinkToNode(entity.parent.parent.parent,linktype) }}</li>
        {% endif %}
        {#department#}
        {% if entity.parent.parent is defined %}
            <li>{{ usermacros.hrefLinkToNode(entity.parent.parent,linktype) }}</li>
        {% endif %}
        {#division#}
        {% if entity.parent is defined %}
            <li>{{ usermacros.hrefLinkToNode(entity.parent,linktype) }}</li>
        {% endif %}
        {#service#}
        {% if entity is defined %}
            <li>{{ usermacros.hrefLinkToNode(entity,linktype) }}</li>
        {% endif %}

    </ol>

{% endmacro %}

{% macro hrefLinkToNode( node, linktype ) %}
    {% if node and node is defined %}
        {% if linktype == 'nodelink' %}
            <a href="{{ path(node.getClassName()|lower~'s_show', { 'id': node.id }) }}">{{ node }}</a>
        {% endif %}
        {% if linktype == 'userlink' %}
            <a href="{{ path( employees_sitename~'_search_same_object', { 'tablename':node.getClassName()|lower,'id': node.id, 'name': node.__toString() }) }}">{{ node }}</a>
        {% endif %}
    {% endif %}
{% endmacro %}

{% macro locationObject( field, cycle, classname, prototype, sitename, entity ) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% import _self as usermacros %}

    {% if prototype == "prototype" %}
        {% set formfield = field.vars.prototype %}
    {% else %}
        {% set formfield = field %}
    {% endif %}

    {% if   prototype == "prototype" or
            formfield.vars.value and
            (
                formfield.vars.value.removable == true or
                formfield.vars.value.removable != true and
                formfield.vars.value.name != "Home"
            )
    %}
        {% set homeLocation = false %}
    {% else %}
        {% set homeLocation = true %}
    {% endif %}


    {% if formfield.vars.value and formfield.vars.value.status == constant('Oleg\\UserdirectoryBundle\\Entity\\BaseUserAttributes::STATUS_UNVERIFIED') or prototype == 'prototype' %}
        {% set wellclass = "user-alert-warning" %}
    {% else %}
        {% set wellclass = "" %}
    {% endif %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {#Consider stanAlone for all cycles with _standalone, except new_standalone. Cycle new_standalone is exception because we don't show list attributes in creation page#}
    {% set standAloneLocation = false %}
    {% if cycle == "create_standalone" or cycle == "show_standalone" or cycle == "edit_standalone" %}
        {% set wellclass = "" %}
        {% set standAloneLocation = true %}
    {% endif %}
    {% if cycle == "new_standalone" %}
        {% set wellclass = "" %}
    {% endif %}

    {#On "Common Location" view pages, (for locations where Inhabitant is not set)#}
    {% if not standAloneLocation or formfield.vars.value.user or cycle != 'show_standalone' %}
        {% set standAloneLocationNotView = true %}
    {% else %}
        {% set standAloneLocationNotView = false %}
    {% endif %}

    {#    Show restrictions for home location:    #}
    {#####Case1: privacy="Administration can see and edit this contact information"#}
    {#Show Home location only to subjectuser, Administrator or Editor; Hide for others.#}
    {#####Case2: privacy="Administration; Those 'on call' can see these phone numbers & email" or default (NULL)#}
    {#Show only to subjectuser, Administrator or Editor #}
    {#Show fields to users with role 'On Call' (ROLE_SCANORDER_ONCALL_TRAINEE, ROLE_SCANORDER_ONCALL_ATTENDING):#}
    {#Phone,Mobile Phone,Pager,Fax,E-Mail#}
    {#####Case3: privacy=others#}
    {#Show it as now (show all non-empty fields)#}

    {% if app.security.getToken().getUser().getId() == entity.id %}
        {% set subjectuser = true %}
    {% else %}
        {% set subjectuser = false %}
    {% endif %}

    {% if is_granted('ROLE_USERDIRECTORY_EDITOR') or is_granted('ROLE_USERDIRECTORY_ADMIN') %}
        {% set userEditor = true %}
    {% else %}
        {% set userEditor = false %}
    {% endif %}

    {% if is_granted('ROLE_SCANORDER_ONCALL_TRAINEE') or is_granted('ROLE_SCANORDER_ONCALL_ATTENDING') %}
        {% set onCallUser = true %}
    {% else %}
        {% set onCallUser = false %}
    {% endif %}

    {% set privacyCase1 = false %}
    {% set privacyCase2 = false %}
    {% if homeLocation and formfield.vars.value.privacy == "Administration can see and edit this contact information" %}
        {% set privacyCase1 = true %}
    {% endif %}
    {% if homeLocation and (formfield.vars.value.privacy == "Administration; Those 'on call' can see these phone numbers & email" or not formfield.vars.value.privacy) %}
        {% set privacyCase2 = true %}
    {% endif %}

    {% set showRegularFields1 = true %}
    {% set showRegularFields2 = true %}

    {% if privacyCase1 %}
        {% set showRegularFields1 = false %}
        {% set showRegularFields2 = false %}

        {% if userEditor or subjectuser %}
            {% set showRegularFields1 = true %}
            {% set showRegularFields2 = true %}
        {% endif %}
    {% endif %}

    {% if privacyCase2 %}
        {% set showRegularFields1 = false %}
        {% set showRegularFields2 = false %}

        {% if onCallUser %}
            {% set showRegularFields2 = true %}
        {% endif %}

        {% if userEditor or subjectuser %}
            {% set showRegularFields1 = true %}
            {% set showRegularFields2 = true %}
        {% endif %}
    {% endif %}

    {% if showRegularFields1 or showRegularFields2 %}
        <div class="user-collection-holder alert {{ classname }} {{ wellclass }}">

            {% if cycle != 'show_user' and (prototype == "prototype" or formfield.vars.value and formfield.vars.value.removable == true) %}
                {% if not standAloneLocation and cycle != "new_standalone" %}
                    <div class="text-right">
                        <button type="button" class="btn btn-default btn-sm" onClick="removeExistingObject(this,'{{ classname }}')" >
                            <span class="glyphicon glyphicon-remove"></span>
                        </button>
                    </div>
                {% endif %}
            {% endif %}

            {% if showRegularFields1 %}
                {{ formmacros.field(formfield.id) }}
                {{ usermacros.statusVerifiedField(formfield,cycle) }}

                {% if formfield.user is defined %}
                    {#On "Common Location" view pages, (for locations where Inhabitant is not set) hide "Inhabitant" field and value (still show it on the Edit page).#}
                    {% if standAloneLocationNotView %}
                        {{ formmacros.field(formfield.user) }}
                    {% endif %}
                {% endif %}

                {% if prototype == "prototype" or formfield.vars.value and formfield.vars.value.removable == true %}
                    {{ formmacros.field(formfield.name) }}
                {% else %}
                    {{ formmacros.field(formfield.name,"","readonly") }}
                {% endif %}

                {% if homeLocation == true or standAloneLocation %}
                    {#Do not show "Location Privacy (who can see this contact info):" field for orphan locations (locations not connected to any user)#}
                    {% if
                        cycle != 'show_user' or
                        cycle == 'show_user' and (userEditor or subjectuser) and formfield.vars.value.user
                    %}
                        {% if cycle != 'show_standalone' or cycle == 'show_standalone' and (userEditor or subjectuser) and formfield.vars.value.user %}
                            {{ formmacros.field(formfield.privacy) }}
                        {% else %}
                            {% do formfield.privacy.setRendered %}
                        {% endif %}
                    {% endif %}
                {% else %}
                    {% do formfield.privacy.setRendered %}
                {% endif %}

                {% if formfield.locationType is defined %}
                    {{ formmacros.field(formfield.locationType) }}
                {% endif %}
            {% endif %}{#showRegularFields1#}

            {% if showRegularFields2 %}

                {{ usermacros.emailPhoneField(formfield.phone,cycle,'phone',"") }}

                {{ usermacros.emailPhoneField_notempty(formfield.pager,cycle,'phone',"") }}
                {{ usermacros.emailPhoneField_notempty(formfield.mobile,cycle,'phone',"") }}

                {% if homeLocation == false %}
                    {{ formmacros.field_notempty(formfield.ic,cycle) }}
                {% endif %}

                {{ formmacros.field_notempty(formfield.fax,cycle) }}
                {{ usermacros.emailPhoneField_notempty(formfield.email,cycle,'email',"") }}

            {% endif %}{#showRegularFields2#}

            {% if showRegularFields1 %}
                {% if homeLocation == false %}

                    {#On "Common Location" view pages, (for locations where Inhabitant is not set) hide "Assistant(s):" field and value.#}
                    {#{% if standAloneLocationNotView %}#}

                        {#assistant field#}
                        {% if formfield.assistant is defined %}
                            {% if not showFlag %}
                                {{ formmacros.field(formfield.assistant) }}
                            {% else %}
                                {% if formfield.vars.value.assistant is defined and formfield.vars.value.assistant != NULL and formfield.vars.value.assistant|length > 0 %}
                                    <p>
                                        <strong>Assistant(s):</strong>
                                    </p>
                                    {% for assistant in formfield.vars.value.assistant %}
                                        {{ usermacros.personInfo(assistant,cycle,sitename) }}
                                    {% endfor %}
                                {% endif %}
                            {% endif %}
                        {% endif %}

                    {#{% endif %}#}

                {% endif %}

                {% if homeLocation == false %}

                    {{ formmacros.field_notempty(formfield.room,cycle) }}
                    {{ formmacros.field_notempty(formfield.suite,cycle) }}

                    {{ formmacros.field(formfield.floor) }}
                    {{ formmacros.field(formfield.institution) }}
                    {{ formmacros.field(formfield.department) }}
                    {{ formmacros.field(formfield.division) }}
                    {{ formmacros.field(formfield.service) }}

                    {{ formmacros.field_notempty(formfield.mailbox,cycle) }}

                    {{ formmacros.field(formfield.building) }}

                {% endif %}

                {#Location GeoLocation#}
                {{ usermacros.geoLocation(field,cycle,prototype) }}

                {% if homeLocation == false %}
                    {{ formmacros.field_notempty(formfield.associatedCode,cycle) }}
                {% endif %}

                {#In Locations, show the CLIA, and PFI fields only to Administrators and the user himself.#}
                {% if formfield.associatedClia is defined %}
                    {{ formmacros.field_notempty(formfield.associatedClia,cycle) }}
                    {{ formmacros.fieldDateLabel_notempty(formfield.associatedCliaExpDate,cycle,'allow-future-date') }}
                    {{ formmacros.field_notempty(formfield.associatedPfi,cycle) }}
                {% endif %}

                {{ formmacros.field_notempty(formfield.comment,cycle) }}
            {% endif %} {#showRegularFields1#}

        </div>
    {% endif %}

    {#show list properties#}
    {% if standAloneLocation %}
        {{ usermacros.listProperties(formfield) }}
    {% endif %}

    {% do formfield.setRendered %}

{% endmacro %}


{#entity is a location object#}
{% macro geoLocation( entity, cycle, prototype ) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}

    {% if prototype == "prototype" %}
        {% set formfield = entity.vars.prototype.geoLocation %}
    {% else %}
        {% set formfield = entity.geoLocation %}
    {% endif %}

    {{ formmacros.field_notempty(formfield.street1,cycle) }}
    {{ formmacros.field_notempty(formfield.street2,cycle) }}
    {{ formmacros.field_notempty(formfield.city,cycle) }}
    {{ formmacros.field_notempty(formfield.state,cycle) }}
    {{ formmacros.field_notempty(formfield.zip,cycle) }}
    {{ formmacros.field_notempty(formfield.county,cycle) }}
    {{ formmacros.field_notempty(formfield.country,cycle) }}
{% endmacro %}

{% macro statusVerifiedField( entity, cycle ) %}
    {% if entity.status is defined %}

        {#On "Common Location" view pages, (for locations where Inhabitant is not set) hide "Status" field and value if it is equal to "Verified by Administration"#}
        {% if "show" in cycle %}
            {% set showFlag = true %}
        {% else %}
            {% set showFlag = false %}
        {% endif %}

        {% if not showFlag or entity.status.vars.value != constant('Oleg\\UserdirectoryBundle\\Entity\\BaseUserAttributes::STATUS_VERIFIED') %}
            {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
            {{ formmacros.field(entity.status) }}
        {% else %}
            {% do entity.status.setRendered %}
        {% endif %}
    {% endif %}
{% endmacro %}


{% macro checkbox_notempty(field,value,cycle) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {% if value == 1 or not showFlag %}
        {{ formmacros.checkbox(field) }}
    {% else %}
        {% do field.setRendered %}
    {% endif %}
{% endmacro %}

{% macro emailPhoneField_notempty(field,cycle,type,label) %}
    {% import _self as formuser %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {% if field.vars.value or not showFlag %}
        {{ formuser.emailPhoneField(field,cycle,type,label) }}
    {% else %}
        {% do field.setRendered %}
    {% endif %}
{% endmacro %}

{% macro emailPhoneField(field,cycle,type,label) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% import _self as usermacros %}

    {% if label == "" %}
        {% set value = field.vars.value %}
    {% else %}
        {% set value = field %}
    {% endif %}

    {% if "show" in cycle %}
        {% set showFlag = true %}
    {% else %}
        {% set showFlag = false %}
    {% endif %}

    {% if showFlag %}
        <p>
        <div class="row">
            <div class="col-xs-6" align="right">
                {% if label == "" %}
                    {{ form_label(field) }}
                {% else %}
                    <strong>{{ label }}</strong>
                {% endif %}
            </div>
            <div class="col-xs-6" align="left">
                <div class="form-control form-control-modif" disabled>
                    {% if type == "email" %}
                        <a href="mailto:{{ value }}" target="_top">{{ value }}</a>
                    {% endif %}
                    {% if type == "phone" %}
                        {{ usermacros.phoneHref(value) }}
                    {% endif %}
                    {% if type == "link" %}
                        {% if "http" not in value %}
                            {% set weburl = "http://"~value %}
                        {% else %}
                            {% set weburl = value %}
                        {% endif %}
                        <a href="{{ weburl }}" target="_top">{{ weburl }}</a>
                    {% endif %}
                </div>
            </div>
        </div>
        </p>
        {% if label == "" %}
            {% do field.setRendered %}
        {% endif %}
    {% else %}
        {{ formmacros.field(field) }}
    {% endif %}
{% endmacro %}

{% macro phoneHref(phone) %}
    {% set valueclean = phone|replace({('+'): "", (' '): "", (')'): "", ('('): "", ('-'): ""}) %}
    <a href="tel:{{ valueclean }}" target="_top">{{ phone }}</a>
{% endmacro %}

{% macro personInfo( person, cycle, sitename ) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% import _self as usermacros %}
    <p>
    <div class="well">
        {% set bossurl = path(sitename~'_showuser',{'id':person.id}) %}
        {% set bosslink = '<a href="'~bossurl~'">'~person.getUserNameShortStr()~'</a>'  %}
        {{ formmacros.simplefield( "Name:", bosslink, "", "disabled" ) }}
        {{ usermacros.emailPhoneField(person.preferredPhone,cycle,'phone',"Preferred Phone Number:") }}
        {{ usermacros.emailPhoneField(person.email,cycle,'email',"Preferred Email:") }}
    </div>
    </p>
{% endmacro %}


{% macro listProperties(formfield) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    <div class="well">
        <p>
        <h4 class="text-muted" align="center">List properties:</h4>
        </p>

        {#{{ formmacros.field(formfield.list.abbreviation) }}#}

        {% if formfield.list.original is defined %}
            {{ formmacros.field(formfield.list.original) }}
        {% endif %}

        {% if formfield.list.synonyms is defined %}
            {{ formmacros.field(formfield.list.synonyms) }}
        {% endif %}

        {{ formmacros.field(formfield.list.type) }}

        {{ formmacros.field(formfield.list.creator) }}

        {{ formmacros.field(formfield.list.createdate) }}

        {{ formmacros.field(formfield.list.orderinlist) }}

        {% if formfield.list.updatedby is defined %}
            {{ formmacros.field(formfield.list.updatedby) }}
            {{ formmacros.field(formfield.list.updatedon) }}
        {% endif %}
    </div>
{% endmacro %}

{% macro buildingObject( field, cycle, classname, prototype, sitename, entity ) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% import _self as usermacros %}

    {% if prototype == "prototype" %}
        {% set formfield = field.vars.prototype %}
    {% else %}
        {% set formfield = field %}
    {% endif %}

    {% set standAloneLocation = false %}
    {% if cycle == "create_standalone" or cycle == "show_standalone" or cycle == "edit_standalone" %}
        {% set wellclass = "" %}
        {% set standAloneLocation = true %}
    {% endif %}

    {{ formmacros.field(formfield.name) }}
    {{ formmacros.field(formfield.abbreviation) }}

    {#Location GeoLocation#}
    {{ usermacros.geoLocation(field,cycle,prototype) }}

    {{ formmacros.field(formfield.institution) }}

    <br>

    {#show list properties#}
    {% if standAloneLocation %}
        {{ usermacros.listProperties(formfield) }}
    {% endif %}

    {% do formfield.setRendered %}

{% endmacro %}
