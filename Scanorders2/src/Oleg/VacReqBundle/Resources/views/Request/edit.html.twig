{% extends "OlegVacReqBundle::Default/base.html.twig" %}

{% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
{% import "OlegUserdirectoryBundle::Default/usermacros.html.twig" as usermacros %}
{% import "OlegUserdirectoryBundle::Tree/treemacros.html.twig" as treemacros %}
{% import "OlegVacReqBundle::Default/vacreqmacros.html.twig" as vacreqmacros %}
{% import "OlegUserdirectoryBundle::Default/userformmacros.html.twig" as userform %}


{% if "show" in cycle %}
    {% set showFlag = true %}
{% else %}
    {% set showFlag = false %}
{% endif %}


{% if review is not defined %}
    {% set review = false %}
{% endif %}

{% block title %}
    {{ title }}
{% endblock %}



{% block content %}

    <input type="hidden" id="formcycle" value="{{ cycle }}" />
    <input type="hidden" id="requestType" value="{{ entity.getRequestType().getAbbreviation() }}" />

    {% if is_granted('ROLE_VACREQ_ADMIN') %}
        {% if accessreqs is defined and accessreqs and accessreqs > 0 %}
            {% set prefixStr = "There is" %}
            {% set postfixStr = "unprocessed access request." %}
            {% if accessreqs > 1 %}
                {% set prefixStr = "There are" %}
                {% set postfixStr = "unprocessed access requests." %}
            {% endif %}
            <div class="alert alert-warning">
                {{ prefixStr }} <a href="{{ path(vacreq_sitename~'_accessrequest_list') }}" target="_blank">{{ accessreqs }} {{ postfixStr }}</a>
            </div>
        {% endif %}
    {% endif %}

    {% if totalApprovedDaysString is defined and totalApprovedDaysString %}
        <div class="alert alert-success">
            <p>{{ totalApprovedDaysString|raw }}</p>
            <p>{{ accruedDaysString }}</p>
            {% if carriedOverDaysString %}
                <p>{{ carriedOverDaysString }}</p>
            {% endif %}
        </div>
    {% endif %}

    <h4 class="text-info" align="center">
        {{ title }}
    </h4>

    <br>

    {% if (cycle == 'show' or review) and entity.user.id is defined %}
        {{ userform.snapshot_steve(entity.user,vacreq_sitename,cycle) }}
    {% endif %}

    <hr>

    {{ form_start(form,{'attr': {'id': 'vacreq-request-form'}}) }}

        {{ form_errors(form) }}

        {#{{ treemacros.compositeTreeNode(form.institution,cycle,'') }}#}

        {% if form.approver is defined %}
            {{ formmacros.field(form.approver) }}
        {% endif %}

        {% if form.submitter is defined %}
            {{ formmacros.field(form.submitter) }}
        {% endif %}

        {% if form.user is defined %}
            {{ formmacros.field(form.user) }}
        {% endif %}

        {% if form.phone is defined %}
            {#{{ formmacros.field(form.phone) }}#}
            {{ usermacros.emailPhoneField(form.phone,cycle,'phone',"") }}
        {% endif %}

        {#organizationalInstitution => institution#}
        {% if form.institution is defined %}
            {{ formmacros.field(form.institution) }}
        {% endif %}
        {% if form.organizationalInstitution is defined %}
            {{ formmacros.field(form.organizationalInstitution) }}
        {% endif %}


        {#Carry Over#}
        {% if entity.getRequestType().getAbbreviation() == "carryover" %}
            <div class="panel panel-info">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" href="#carryover">
                            Carry Over Request
                        </a>
                    </h4>
                </div>
                <div id="carryover" class="panel-collapse collapse in">
                    <div class="panel-body">

                        {#{{ formmacros.field(form.sourceYear) }}#}
                        {{ formmacros.simplefield( "Source Academic Year:", entity.getSourceYearRange(), "input", "disabled" ) }}

                        {#{{ formmacros.field(form.destinationYear) }}#}
                        {{ formmacros.simplefield( "Destination Academic Year:", entity.getDestinationYearRange(), "input", "disabled" ) }}

                        {{ formmacros.field(form.carryOverDays) }}

                    </div> <!-- panel-body -->
                </div> <!-- panel-collapse -->
            </div> <!-- panel panel-info -->
        {% endif %}


        {#Business#}
        {% if form.requestBusiness is defined and (entity.hasBusinessRequest or cycle == 'new' or cycle == 'edit') %}
            {% set showBusinessStatus = false %}
            {% if entity.requestBusiness and entity.requestBusiness.status is defined %}
                {% set showBusinessStatus = true %}
            {% endif %}
            {#set collapse#}
            {% set businessCollapse = '' %}
            {% if (not showFlag and not review) or (entity.requestBusiness and entity.requestBusiness.numberOfDays>0) %}
                {% set businessCollapse = 'in' %}
            {% endif %}
            {#set accordion color#}
            {% set businessPanelColor = 'panel-info' %}
            {% if entity.requestBusiness and entity.requestBusiness.status == 'approved' %}
                {% set businessPanelColor = 'panel-success' %}
            {% endif %}
            {% if entity.requestBusiness and entity.requestBusiness.status == 'rejected' %}
                {% set businessPanelColor = 'panel-danger' %}
            {% endif %}
            {#Business panel#}
            <div class="panel {{ businessPanelColor }}">
                <div class="panel-heading">
                    <h4 class="panel-title" align='center'>
                        {#<a data-toggle="collapse" href="#vacreq-Business">#}
                            {#Business Travel#}
                        {#</a>#}
                        {#{{ vacreqmacros.request_radio_choice( form.requestBusiness ) }}#}
                        {% if showBusinessStatus %}
                            <div class="row">
                                <div class="col-xs-6" align="right">
                                    <a data-toggle="collapse" href="#vacreq-Business">
                                        Business Travel
                                    </a>
                                </div>
                                {#{% if showBusinessStatus %}#}
                                    <div class="col-xs-6" align="left" style="color:#333;">
                                        {{ vacreqmacros.request_radio_choice( form.requestBusiness ) }}
                                    </div>
                                {#{% endif %}#}
                            </div>
                        {% else %}
                            <a data-toggle="collapse" href="#vacreq-Business">
                                Business Travel
                            </a>
                        {% endif %}
                    </h4>
                </div>
                <div id="vacreq-Business" class="panel-collapse collapse {{ businessCollapse }}">
                    <div class="panel-body">
                        {{ formmacros.fieldDateLabel(form.requestBusiness.startDate,'allow-future-date') }}
                        {{ formmacros.fieldDateLabel(form.requestBusiness.endDate,'allow-future-date') }}

                        {#{{ formmacros.field(form.requestBusiness.numberOfDays) }}#}
                        {#{{ formmacros.fieldDateLabel(form.requestBusiness.firstDayBackInOffice,'allow-future-date') }}#}
                        {{ vacreqmacros.request_inputWithCalculateBtn(form.requestBusiness.numberOfDays) }}
                        {#{{ vacreqmacros.request_dateWithCalculateBtn(form.requestBusiness.firstDayBackInOffice) }}#}

                        {{ formmacros.checkbox(form.requestBusiness.paidByOutsideOrganization) }}
                        {{ formmacros.field(form.requestBusiness.expenses) }}

                        {{ formmacros.field(form.requestBusiness.description) }}
                        {% if form.requestBusiness.approverComment is defined and businessCollapse == 'in'  %}
                            {{ formmacros.field(form.requestBusiness.approverComment) }}
                        {% endif %}
                    </div> <!-- panel-body -->
                </div> <!-- panel-collapse -->
            </div> <!-- panel panel-info -->
        {% endif %}

        {#Vacation#}
        {% if form.requestVacation is defined and (entity.hasVacationRequest or cycle == 'new' or cycle == 'edit') %}
            {#set vacationCollapse#}
            {% set showVacationStatus = false %}
            {% if entity.requestBusiness and entity.requestBusiness.status is defined %}
                {% set showVacationStatus = true %}
            {% endif %}
            {#set collapse#}
            {% set vacationCollapse = '' %}
            {% if (not showFlag and not review) or (entity.requestVacation and entity.requestVacation.numberOfDays>0) %}
                {% set vacationCollapse = 'in' %}
            {% endif %}
            {#set accordion color#}
            {% set vacationPanelColor = 'panel-info' %}
            {% if entity.requestVacation and entity.requestVacation.status == 'approved' %}
                {% set vacationPanelColor = 'panel-success' %}
            {% endif %}
            {% if entity.requestVacation and entity.requestVacation.status == 'rejected' %}
                {% set vacationPanelColor = 'panel-danger' %}
            {% endif %}
            {#vacation panel#}
            <div class="panel {{ vacationPanelColor }}">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        {#<a data-toggle="collapse" href="#vacreq-Vacation">#}
                            {#Vacation Travel#}
                        {#</a>#}
                        {#{{ vacreqmacros.request_radio_choice( form.requestVacation ) }}#}
                        {% if showVacationStatus %}
                            <div class="row">
                                <div class="col-xs-6" align="right">
                                    <a data-toggle="collapse" href="#vacreq-Vacation">
                                        Vacation Travel
                                    </a>
                                </div>
                                {#{% if showVacationStatus %}#}
                                    <div class="col-xs-6" align="left" style="color:#333;">
                                        {{ vacreqmacros.request_radio_choice( form.requestVacation ) }}
                                    </div>
                                {#{% endif %}#}
                            </div>
                        {% else %}
                            <a data-toggle="collapse" href="#vacreq-Vacation">
                                Vacation Travel
                            </a>
                        {% endif %}
                    </h4>
                </div>
                <div id="vacreq-Vacation" class="panel-collapse collapse {{ vacationCollapse }}">
                    <div class="panel-body">
                        {{ formmacros.fieldDateLabel(form.requestVacation.startDate,'allow-future-date') }}
                        {{ formmacros.fieldDateLabel(form.requestVacation.endDate,'allow-future-date') }}

                        {#{{ formmacros.field(form.requestVacation.numberOfDays) }}#}
                        {{ vacreqmacros.request_inputWithCalculateBtn(form.requestVacation.numberOfDays) }}

                        {#{{ formmacros.fieldDateLabel(form.requestVacation.firstDayBackInOffice,'allow-future-date') }}#}
                        {#{{ vacreqmacros.request_dateWithCalculateBtn(form.requestVacation.firstDayBackInOffice) }}#}

                        {% if form.requestVacation.approverComment is defined and vacationCollapse == 'in' %}
                            {{ formmacros.field(form.requestVacation.approverComment) }}
                        {% endif %}
                    </div> <!-- panel-body -->
                </div> <!-- panel-collapse -->
            </div> <!-- panel panel-info -->

            {#{{ formmacros.fieldDateLabel(form.credentials.dob,'allow-future-date') }}#}

            {#firstDayBackInOffice#}
            <div class="panel panel-info">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" href="#firstDayBackInOffice">
                            First Day Back In Office
                        </a>
                    </h4>
                </div>
                <div id="firstDayBackInOffice" class="panel-collapse collapse in">
                    <div class="panel-body">
                        {% if form.firstDayBackInOffice is defined %}
                            {{ vacreqmacros.request_dateWithCalculateBtn(form.firstDayBackInOffice) }}
                        {% endif %}
                    </div> <!-- panel-body -->
                </div> <!-- panel-collapse -->
            </div> <!-- panel panel-info -->
        {% endif %}

        {#Emergency#}
        {% if form.availableViaEmail is defined %}
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" href="#Emergency">
                            Emergency Contact Info (optional)
                        </a>
                    </h4>
                </div>
                <div id="Emergency" class="panel-collapse collapse in">
                    <div class="panel-body">
                        {#{{ formmacros.field(form.availabilities) }}#}
                        {#{{ formmacros.field(form.emergencyComment) }}#}
                        {#{{ formmacros.field(form.emergencyCellPhone) }}#}
                        {#{{ formmacros.field(form.emergencyOther) }}#}

                        {{ formmacros.field(form.availableViaEmail) }}
                        {{ formmacros.field(form.availableEmail) }}

                        {{ formmacros.field(form.availableViaCellPhone) }}
                        {{ formmacros.field(form.availableCellPhone) }}

                        {{ formmacros.field(form.availableViaOther) }}
                        {{ formmacros.field(form.availableOther) }}

                        {{ formmacros.field(form.availableNone) }}

                    </div> <!-- panel-body -->
                </div> <!-- panel-collapse -->
            </div> <!-- panel panel-info -->
        {% endif %}




        {% if form.status is defined %}
            {{ formmacros.field(form.status) }}
        {% endif %}

    {{ form_end(form,{'render_rest': false}) }}

    <br>

    <div id="error-box" class="alert alert-danger" style="display: none"></div>

    <br>

    {% if cycle == "new" %}
        <p>
            <button class="btn btn-warning" name="btnCreate" type="button" onclick="validateVacReqForm(this)">Submit</button>
        </p>
    {% endif %}

    {% if cycle == "edit" or review %}
        <p>
            <button class="btn btn-warning" name="btnUpdate" type="button" onclick="validateVacReqForm(this)">Update</button>
            {% if review %}
                <a class="btn btn-primary" href="{{ path(vacreq_sitename~'_incomingrequests') }}">Cancel</a>
            {% else %}
                <a class="btn btn-primary" href="{{ path(vacreq_sitename~'_show',{'id':entity.id}) }}">Cancel</a>
            {% endif %}
        </p>
    {% endif %}

    {% if cycle == "show" %}
        <p>
            <a class="btn btn_margin_top btn-primary" href="{{ path(vacreq_sitename~'_edit',{'id':entity.id}) }}">Edit</a>
        </p>
    {% endif %}


{% endblock %}


{% block additionaljs %}

    <script language="Javascript">

        var _requestType = null;

        $(document).ready(function() {

            _requestType = $('#requestType').val();

            //console.log('cycle='+cycle);
            if( _requestType == "business-vacation" && (cycle == 'new' || cycle == 'edit') ) {

                vacreqDateListener();

                vacreqAvailabilityListener();

                //init datepicker manually, because the holder 'input-group' does not have class 'date', but js is looking for .input-group.date
                initSingleDatepicker( $('.vacreq-firstDayBackInOffice') );

            }

            vacreqRemoveErrorListener();

            //vacreqDayWeekListener();

        });

        function vacreqAvailabilityListener() {
            $('.vacreq-availableNone').on("click", function(e) {
                var holder = $(this).closest('.panel-body');

                if ($(this).is(':checked')) {
                    holder.find('.vacreq-availableViaEmail').prop('checked', false);
                    holder.find('.vacreq-availableEmail').val('');

                    holder.find('.vacreq-availableViaCellPhone').prop('checked', false);
                    holder.find('.vacreq-availableCellPhone').val('');

                    holder.find('.vacreq-availableViaOther').prop('checked', false);
                    holder.find('.vacreq-availableOther').val('');
                }

            });

            $('.vacreq-availableViaEmail, .vacreq-availableViaCellPhone, .vacreq-availableViaOther').on("click", function(e) {
                var holder = $(this).closest('.panel-body');

                if ($(this).is(':checked')) {
                    holder.find('.vacreq-availableNone').prop('checked', false);
                }

            });
        }

        function vacreqAvailabilityListener_OLD() {
            $('.vacreq-availabilities').on("change", function(e) {
                var holder = $(this).closest('.panel-body');
                var availabilities = holder.find('.vacreq-availabilities').select2('data');
                //console.log(availabilities);

                //this returns all the selected item
                var items= $(this).val();
                //console.log('items='+items);

                $.each( availabilities, function( key, value ) {
                    //console.log( key + ": " + value );
                    //console.log( value );
                    var item = value.text;
                    //console.log('item='+item);
                    if( item == "Not Accessible" ) {
                        //clear others
                        holder.find('.vacreq-availabilities').select2('val',value.id);
                    }

                });

            });
        }

        function vacreqRemoveErrorListener() {
            $('input, .vacreq-numberOfDays, .vacreq-expenses, .vacreq-description').on("input", function(e) {
                $(this).removeClass('alert-danger');
                $('#error-box').html('');
                $('#error-box').hide();
            });

            //$('.vacreq-firstDayBackInOffice').datepicker().on("changeDate", function(e) {
            $('.vacreq-firstDayBackInOffice').on("change", function(e) {
                $(this).removeClass('alert-danger');
                $('#error-box').html('');
                $('#error-box').hide();
                vacreqSetDayWeekTooltip($(this));
            });
        }


        //Show black tool tips above the 5 date fields on the home page with
        //the day of the week (Monday, Tuesday, etc) corresponding to the displayed date on the homepage form.
        var _daysOfWeek = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];
        function vacreqSetDayWeekTooltip(datepickerElem) {
            var thisDate = datepickerElem.val();
            //console.log("set tooltip="+thisDate);
            //printF(datepickerElem, "changeDate:");
            //console.log(datepickerElem);
            if( thisDate ) {
                //console.log("create tooltip="+thisDate);
                datepickerElem.tooltip({
                    title: function() {
                        //console.log("set tooltip="+_daysOfWeek[thisDate.getDay()]);
                        var tooltipDate = $(this).val();
                        if( tooltipDate ) {
                            //console.log("tooltip title: date=" + tooltipDate);
                            tooltipDate = new Date(tooltipDate);
                            return _daysOfWeek[tooltipDate.getDay()];
                        } else {
                            //console.log("tooltip title: destroy");
                            $(this).tooltip('destroy');
                        }
                    }
                });
            } else {
                //console.log("destroy tooltip="+thisDate);
                datepickerElem.tooltip('destroy');
            }
        }

        function vacreqDateListener() {

            //$('.vacreq-startDate,.vacreq-endDate').datepicker().on("changeDate", function(e) {
            $('.vacreq-startDate,.vacreq-endDate').on("change", function(e) {
                //vacreqUpdateDaysAndFirstday(this);

                var holder = $(this).closest('.panel-body');

                var startDate = holder.find('.vacreq-startDate').val();
                var endDate = holder.find('.vacreq-endDate').val();
                //console.log('startDate=('+startDate+')' + ', endDate=('+endDate+')');

                startDate = new Date(startDate);
                endDate = new Date(endDate);

                //get working days difference
                if( startDate && endDate ) {

                    if( startDate > endDate ) {
                        //e.stopPropagation();
                        //e.preventDefault();
                        alert("The requested End Date cannot precede the Start Date.");
                        $(this).datepicker('setDate', null);
                        e.stopPropagation();
                        return;
                    }

                    //var oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds
                    //var difstartDate=fDays = 1 + Math.round(Math.abs((startDate.getTime() - endDate.getTime())/(oneDay)));
                    var diffWorkingDays = calculateWorkingDays(startDate,endDate);
                    //console.log('diffWorkingDays='+diffWorkingDays);

                    if( diffWorkingDays > 0 ) {
                        //numberOfDays
                        //holder.find('.vacreq-numberOfDays').val(diffWorkingDays);

                        //firstDayBackInOffice
                        var nextWorkingDay = getNextWorkingDay();
                        //console.log('nextWorkingDay='+nextWorkingDay);

                        setVacReqDates(holder,diffWorkingDays,nextWorkingDay)
                    }

                }//if

                vacreqSetDayWeekTooltip($(this));

            });

        }

        function setVacReqDates(holder,diffWorkingDays,nextWorkingDay) {

            var numberOfDaysField = holder.find('.vacreq-numberOfDays');
            if( !numberOfDaysField.val() ) {
                numberOfDaysField.val(diffWorkingDays);
                numberOfDaysField.removeClass('alert-danger');
            }

            var firstDayBackInOffice = $('.vacreq-firstDayBackInOffice');
            if( !firstDayBackInOffice.val() ) {
                firstDayBackInOffice.datepicker('setDate', nextWorkingDay);
            }
        }

        //onclick action button
        function setVacReqNumberOfDays(btn) {

            if( cycle != 'new' && cycle != 'edit' ) {
                return;
            }

            var holder = $(btn).closest('.panel-body');
            var startDate = holder.find('.vacreq-startDate').val();
            var endDate = holder.find('.vacreq-endDate').val();
            //console.log('startDate=('+startDate+')' + ', endDate=('+endDate+')');

            startDate = new Date(startDate);
            endDate = new Date(endDate);

            holder.find('.vacreq-numberOfDays').removeClass('alert-danger');

            var diffWorkingDays = null;

            if( startDate && endDate ) {
                if( startDate > endDate ) {
                    alert("The requested Last Day Away cannot precede the First Day Away.");
                    holder.find('.vacreq-numberOfDays').val(null);
                    return null;
                }

                diffWorkingDays = calculateWorkingDays(startDate,endDate);

                if( diffWorkingDays > 0 ) {
                    //numberOfDays
                    holder.find('.vacreq-numberOfDays').val(diffWorkingDays);
                } else {
                    holder.find('.vacreq-numberOfDays').val(null);
                }
            }

            return diffWorkingDays;
        }

        //onclick
        function setVacReqFirstDayBack(btn) {

            if( cycle != 'new' && cycle != 'edit' ) {
                return;
            }

            var nextWorkingDay = getNextWorkingDay();
            //console.log('nextWorkingDay='+nextWorkingDay);
            //return; //testing

            $('.vacreq-firstDayBackInOffice').removeClass('alert-danger');

            if( nextWorkingDay ) {
                //firstDayBackInOffice
                //console.log('nextWorkingDay='+nextWorkingDay);
                $('.vacreq-firstDayBackInOffice').datepicker('setDate', nextWorkingDay);
            } else {
                $('.vacreq-firstDayBackInOffice').datepicker('setDate', null);
            }

            return nextWorkingDay;
        }

        // Count days from d0 to d1 inclusive, excluding Fridays and Saturdays
        function calculateWorkingDays( startDate, endDate )  {
            //return 0;//testing
            var days = 0;
            for( var i = startDate; i <= endDate; i.setDate(i.getDate() + 1) ) {
                if( i.getDay() != 6 && i.getDay() != 0 ) {
                    days = days + 1;
                }
            }
            return days;
        }



        function getNextWorkingDay( endDate )  {
            //return endDate;//testing
            //get endDate - the latest date from business and vacation request
            var endDate = null;
            $('.vacreq-endDate').each( function(){
                //var thisDate = $(this).datepicker('getDate'); //this cause problem async between datepicker field and calendar icon
                var thisDate = $(this).val();
                //console.log('1thisDate='+thisDate);
                if( thisDate ) {
                    thisDate = new Date(thisDate);
                    //console.log('2thisDate=' + thisDate);
                    if( endDate == null || thisDate > endDate ) {
                        endDate = thisDate;
                    }
                }
            });

            if( endDate == null ) {
                //console.log('NULL endDate='+endDate);
                return null;
            }

            //var endDate = new Date(endDate);

            //console.log('endDate='+endDate);
            //return endDate;//testing

            var finishDate = new Date(endDate);
            finishDate.setDate(endDate.getDate()+7);
            //console.log('finishDate='+finishDate+", day="+finishDate.getDay());

            var nextWorkingDay = new Date(endDate);    //new Date();
            nextWorkingDay.setDate(endDate.getDate()+1);
            //console.log('nextWorkingDay='+nextWorkingDay+", day="+nextWorkingDay.getDay());

            for( nextWorkingDay; nextWorkingDay <= finishDate; nextWorkingDay.setDate(nextWorkingDay.getDate() + 1) ) {
                //console.log('nextWorkingDay='+nextWorkingDay+", day="+nextWorkingDay.getDay());
                if( nextWorkingDay.getDay() != 6 && nextWorkingDay.getDay() != 0 ) {
                    return nextWorkingDay;
                }
            }

            //console.log('EOF NULL');
            return null;
        }

        function validateVacReqForm(btn) {
            if( _requestType == "business-vacation" ) {
                validateVacReqBusinessVacationForm(btn);
            }
            if( _requestType == "carryover" ) {
                validateVacReqCarryOverForm(btn);
            }
        }
        function validateVacReqCarryOverForm(btn) {

            var lbtn = Ladda.create(btn);
            lbtn.start();

            $('#error-box').hide();

            //remove alert-danger from input fields
            $('input').removeClass('alert-danger');

            var error = null;

            var userInstitution = $('.vacreq-institution').select2('data');
            if( !error && !userInstitution ) {
                error = "Please choose an organizational group";
            }

            var carryOverDays = $('.vacreq-carryOverDays').val();
            if( !error && !carryOverDays ) {
                error = "Please enter the number of days to carry over";
                $('.vacreq-carryOverDays').addClass('alert-danger');
            }

            if( error ) {
                $('#error-box').html(error);
                $('#error-box').show();
                lbtn.stop();
                return false;
            }

            $('#vacreq-request-form').submit();
        }
        function validateVacReqBusinessVacationForm(btn) {

            var lbtn = Ladda.create(btn);
            lbtn.start();

            $('#error-box').hide();

            //remove alert-danger from input fields
            $('input').removeClass('alert-danger');

            var error = null;
            var requestB = false;
            var requestV = false;

            var userData = $('.vacreq-user').select2('data');
            if( !error && !userData ) {
                error = "Please choose a requester";
            }

            var userInstitution = $('.vacreq-institution').select2('data');
            if( !error && !userInstitution ) {
                error = "Please choose an organizational group";
                //$('.vacreq-institution').addClass('alert-danger');
            }

            var approverData = $('.vacreq-approver').select2('data');
            if( !error && !approverData ) {
                error = "Please choose an approver";
            }

            var businessRequest = $('#vacreq-Business');
            var vacationRequest = $('#vacreq-Vacation');

            var startDateBusiness = businessRequest.find('.vacreq-startDate').val();
            var endDateBusiness = businessRequest.find('.vacreq-endDate').val();
            //console.log('startDateBusiness=('+startDateBusiness+')' + 'endDateBusiness=('+endDateBusiness+')');

            var startDateVacation = vacationRequest.find('.vacreq-startDate').val();
            var endDateVacation = vacationRequest.find('.vacreq-endDate').val();
            //console.log('startDateVacation=('+startDateVacation+')' + 'endDateVacation=('+endDateVacation+')');

            if( !error && !startDateBusiness && !startDateVacation ) {
                error = "Please fill in the First Day Away";
            }

            //console.log('endDate=('+endDate+')');
            if( !error && !endDateBusiness && !endDateVacation ) {
                error = "Please fill in the Last Day Away";
            }

            //Business
            if( !error && startDateBusiness && endDateBusiness ) {
                requestB = true;
                var numberOfDays = businessRequest.find('.vacreq-numberOfDays').val();
                if( !error && !numberOfDays ) {
                    error = "Please enter the number of work days off-site";
                    businessRequest.find('.vacreq-numberOfDays').addClass('alert-danger');
                }

                var expenses = businessRequest.find('.vacreq-expenses').val();
                if( !error && !expenses ) {
                    error = "Please fill in the estimated expenses";
                    businessRequest.find('.vacreq-expenses').addClass('alert-danger');
                }

                var description = businessRequest.find('.vacreq-description').val();
                if( !error && !description ) {
                    error = "Please fill in the description";
                    businessRequest.find('.vacreq-description').addClass('alert-danger');
                }

            }

            //Vacation
            if( !error && startDateVacation && endDateVacation ) {
                requestV = true;
                var numberOfDays = vacationRequest.find('.vacreq-numberOfDays').val();
                if( !error && !numberOfDays ) {
                    error = "Please enter the number of work days off-site";
                    vacationRequest.find('.vacreq-numberOfDays').addClass('alert-danger');
                }

            }

            var firstDayBackInOffice = $('.vacreq-firstDayBackInOffice').val();
            if( !error && !firstDayBackInOffice ) {
                error = "Please fill in the first day back in office";
                vacationRequest.find('.vacreq-firstDayBackInOffice').addClass('alert-danger');
            }

            //check for dates overlaps
            if( requestB && requestV ) {
                //(StartDate1 <= EndDate2) and (StartDate2 <= EndDate1)
                if( startDateBusiness <= endDateVacation && startDateVacation <= endDateBusiness ) {
                    error = "It appears your Business Travel dates and Vacation dates overlap. Please correct the dates prior to submission";
                }
            }

            //console.log('error='+error);

            if( error ) {
                $('#error-box').html(error);
                $('#error-box').show();
                lbtn.stop();
                return false;
            }

            $('#vacreq-request-form').submit();
        }


    </script>
{% endblock %}


{#Snapshot css#}
{% block additionalcss %}
    {% stylesheets
        'bundles/oleguserdirectory/form/css/steve-snapshot.css' filter='cssrewrite'
    %}
    <link rel="stylesheet" href="{{ asset_url }}" />
    {% endstylesheets %}
{% endblock %}
