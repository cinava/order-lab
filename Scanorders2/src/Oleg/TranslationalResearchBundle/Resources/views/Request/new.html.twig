{% extends "OlegTranslationalResearchBundle::Default/base.html.twig" %}

{% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
{% import "OlegTranslationalResearchBundle::Default/transresRequestMacros.html.twig" as transresRequestMacros %}
{% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}


{% block title %}
    {{ title }}
{% endblock %}


{% block content %}

    {% set bwipjsSrcpath = "/order/bundles/oleguserdirectory/bwip-js/" %}
    <input type="hidden" id="bwipjs-srcpath" value="{{ bwipjsSrcpath }}" />

    {#<input type="hidden" id="formnodetrigger" value="{{ formnodetrigger }}" />#}
    {#<input type="hidden" id="formnodeTopHolderId" value="{{ formnodeTopHolderId }}" />#}
    <input type="hidden" id="formcycle" value="{{ cycle }}" />
    <input type="hidden" id="default-accession-type" value="{{ defaultAccessionType }}" />
    <input type="hidden" id="default-antibody" value="{{ defaultAntibodyType }}" />

    <h4 class="text-info" align="center">
        {{ title }}
    </h4>

    {% if cycle == "new" %}
        <p>
            <i>
                Please make sure to save your Work Request as a draft prior leaving this page.
            </i>
        </p>
    {% endif %}
    {% if cycle == "edit" %}
        <p>
            <i>
                Please make sure to update/save your Work Request prior leaving this page.
            </i>
        </p>
    {% endif %}

    {#barcode image test#}
    {#<button onclick="render()">Show Barcode</button>#}
    {#Img:<img id="myimg">#}
    {#<br>#}
    {#Canvas:<canvas id="canvas" width=1 height=1 style="border:1px solid #fff;visibility:hidden"></canvas>#}
    {#<br><br><hr>#}
    {#{{ transresRequestMacros.barcodedemo() }}#}
    {#<div id="barcodeholder"></div>#}
    {#<hr><br><br>#}



    {% if cycle == "show" %}
        {#{% if#}
        {#is_granted('ROLE_TRANSRES_ADMIN') or#}
        {#is_granted('ROLE_TRANSRES_TECHNICIAN') or#}
        {#(#}
        {#transres_util.isProjectRequester(transresRequest.project) and#}
        {#transresRequest.getProgressState() == 'draft'#}
        {#)#}
        {#%}#}
        {% if transres_permission_util.hasRequestPermission("update",transresRequest) %}
            <p>
                <a class="btn btn-default"
                   href="{{ path(translationalresearch_sitename~'_request_edit', { 'id': transresRequest.id }) }}"
                >Edit Work Request</a>
            </p>
            <br>
        {% endif %}
    {% endif %}

{% if routeName == "translationalresearch_new_standalone_request" and form.project is not defined %}
    <p>There are no approved projects are available at this time.</p>
{% else %}

    {% set sitename = translationalresearch_sitename %}

    {{ form_start(form) }}
    {#{{ form_start(form,{'attr':{'onsubmit':'return transresValidateRequest();'}}) }}#}

        <div id="form-prototype-data"
             data-userurllink = "{{ usermacros.userUrlLink()|e }}"
             data-uploadurl = "{{ oneup_uploader_endpoint('transres_gallery') }}"
             data-userid = "{{ app.user.id }}"

             data-prototype-transres-products = "{{ transresRequestMacros.productForm(form.products,cycle,'transres-products','prototype',sitename,1)|e }}"
        ></div>

        {% if form.project is defined %}
            {% if routeName != "translationalresearch_new_standalone_request" %}
                <div style="display: none;">
            {% endif %}
            {{ formmacros.field(form.project) }}
            {% if routeName != "translationalresearch_new_standalone_request" %}
                </div>
            {% endif %}
        {% endif %}

        {#{{ transres.getProjectReviewPrototypeFormData(null,cycle,sitename) }}#}

        {{ transresRequestMacros.transresRequestBody(form,transresRequest,cycle,sitename) }}

        {% if cycle != "new" %}
            {% if showPackingSlip is not defined %}
                {% set showPackingSlip = false %}
            {% endif %}
            {{ transresRequestMacros.transresRequestPackingSlip(form,transresRequest,cycle,showPackingSlip) }}
        {% endif %}

        {% if cycle != "new" %}
            {{ transresRequestMacros.transresRequestHandsontable(form,transresRequest,cycle) }}
        {% endif %}

        {#<p>#}
            {#Table Triggered:<br>#}
            {#<div id="test-barcode-image"></div>#}
        {#</p>#}

        {#<p>#}
            {#Datamatrix Triggered:<br>#}
            {#<div id="test-datamatrix"></div>#}
        {#</p>#}

        {{ transresRequestMacros.transresRequestDetails(form,transresRequest,cycle,sitename) }}

        {% set showFosComment = 'showFosComment' %}
        {% if cycle == "new" %}
            {% set showFosComment = null %}
        {% endif %}
        {{ transresRequestMacros.transresRequestComment(form,transresRequest,cycle,showFosComment) }}

        {#{% if cycle != "new" and is_granted('ROLE_TRANSRES_ADMIN') %}#}
        {% if cycle != "new" %}
            {{ transresRequestMacros.transresRequestInfo(form,transresRequest,cycle) }}
        {% endif %}

        {% if form.updateDate is defined or form.updateUser is defined  %}
            <div class="well well-sm">
                {% if form.updateDate is defined %}
                    {{ formmacros.field(form.updateDate) }}
                {% endif %}
                {% if form.updateUser is defined %}
                    {{ formmacros.field(form.updateUser) }}
                {% endif %}
            </div>
        {% endif %}


        {% if form.saveAsUpdate is defined %}
            {{ form_widget(form.saveAsUpdate) }}
        {% endif %}
        {% if form.saveAsDraft is defined %}
            {{ form_widget(form.saveAsDraft) }}
        {% endif %}
        {% if form.saveAsComplete is defined %}
            <div class="alert alert-success" role="alert" style="margin-top: 30px; margin-bottom: 5px;">
                {#This is a danger alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.#}
                <input type="checkbox" id="confirmationSubmit" name="confirm" value="confirm">
                <label for="subscribeNews">I have verified the contents of this work request and authorize the department of pathology to charge the listed fund number for the listed amount.</label>
            </div>

            <div id="projectError" class="alert alert-danger" style="display: none; margin: 5px;"></div>

            {{ form_widget(form.saveAsComplete) }}
        {% endif %}

    {{ form_end(form) }}

    <div id="please-wait" style="display: none;">Please Wait ...</div>

    {% if cycle == "show" %}
        {#{% if#}
            {#is_granted('ROLE_TRANSRES_ADMIN') or#}
            {#is_granted('ROLE_TRANSRES_TECHNICIAN') or#}
            {#(#}
                {#transres_util.isProjectRequester(transresRequest.project) and#}
                {#transresRequest.getProgressState() == 'draft'#}
            {#)#}
        {#%}#}
            {#<br>#}
            {#<p>#}
                {#<a class="btn btn-default"#}
                   {#href="{{ path(translationalresearch_sitename~'_request_edit', { 'id': transresRequest.id }) }}"#}
                {#>Edit Work Request</a>#}
            {#</p>#}
        {#{% endif %}#}
        {% if transres_permission_util.hasRequestPermission("update",transresRequest) %}
            <p>
                <a class="btn btn-default"
                   href="{{ path(translationalresearch_sitename~'_request_edit', { 'id': transresRequest.id }) }}"
                >Edit Work Request</a>
            </p>
        {% endif %}
    {% endif %}


    {% if project and project.id %}
        <br>
        {{ transres.projectObjFullInfo(project,cycle) }}
        <p>
            <a href="{{ path(translationalresearch_sitename~'_request_index',{'id':project.id}) }}">Back to the request list</a>
        </p>
    {% endif %}

{% endif %} {#routeName and project#}

{% endblock %}



{% block additionalcss %}

    {% stylesheets '@FOSCommentBundle/Resources/public/css/comments.css' %}
    <link rel="stylesheet" href="{{ asset_url }}" type="text/css" />
    {% endstylesheets %}

    {% stylesheets
    'bundles/olegtranslationalresearch/form/css/comments.css' filter='cssrewrite'
    %}
    <link rel="stylesheet" href="{{ asset_url }}" />
    {% endstylesheets %}

    {#{% stylesheets#}
    {#'bundles/olegorderform/handsontable/jquery.handsontable.full.css' filter='cssrewrite'#}
    {#'bundles/olegorderform/form/css/handsontable.css' filter='cssrewrite'#}
    {#%}#}
    {#<link rel="stylesheet" href="{{ asset_url }}" />#}
    {#{% endstylesheets %}#}

    {% stylesheets
    'bundles/oleguserdirectory/handsontable-5/dist/handsontable.full.css' filter='cssrewrite'
    'bundles/olegorderform/form/css/handsontable.css' filter='cssrewrite'
    %}
    <link rel="stylesheet" href="{{ asset_url }}" />
    {% endstylesheets %}

    {% stylesheets
    'bundles/oleguserdirectory/bwip-js/lib/demo.css' filter='cssrewrite'
    'bundles/oleguserdirectory/bwip-js/lib/jquery-ui.min.css' filter='cssrewrite'
    %}
    <link rel="stylesheet" href="{{ asset_url }}" />
    {% endstylesheets %}

{% endblock %}


{% block additionaljs %}

    {#'@OlegUserdirectoryBundle/Resources/public/bwip-js/lib/jquery.js'#}

    {#{% javascripts#}
    {#'@OlegOrderformBundle/Resources/public/handsontable/jquery.handsontable.full.js'#}
    {#'@OlegTranslationalResearchBundle/Resources/public/form/js/handsontable.js'#}
    {#'@OlegUserdirectoryBundle/Resources/public/bwip-js/freetype.js'#}
    {#'@OlegOrderformBundle/Resources/public/form/js/selectAjax.js'#}
    {#'@OlegOrderformBundle/Resources/public/form/js/masking.js'#}
    {#'@OlegTranslationalResearchBundle/Resources/public/form/js/barcode.js'#}
    {#'@OlegUserdirectoryBundle/Resources/public/qrcode/qrcode.js'#}
    {#'@OlegUserdirectoryBundle/Resources/public/bwip-js/bwipp.js'#}
    {#'@OlegUserdirectoryBundle/Resources/public/bwip-js/bwipjs.js'#}
    {#'@OlegUserdirectoryBundle/Resources/public/bwip-js/lib/jquery-ui.min.js'#}
    {#'@OlegUserdirectoryBundle/Resources/public/bwip-js/lib/xhr-fonts.js'#}
    {#'@OlegUserdirectoryBundle/Resources/public/bwip-js/lib/bitmap.js'#}
    {#'@OlegUserdirectoryBundle/Resources/public/bwip-js/lib/symdesc.js'#}
    {#'@OlegUserdirectoryBundle/Resources/public/bwip-js/lib/canvas-toblob.js'#}
    {#'@OlegUserdirectoryBundle/Resources/public/bwip-js/lib/filesaver.js'#}
    {#%}#}
    {#<script type="text/javascript" src="{{ asset_url }}"></script>#}
    {#{% endjavascripts %}#}
    {#'@OlegOrderformBundle/Resources/public/handsontable/jquery.handsontable.full.js'#}

    {% javascripts
    '@OlegUserdirectoryBundle/Resources/public/handsontable-5/dist/handsontable.full.js'
    %}
    <script type="text/javascript" src="{{ asset_url }}"></script>
    {% endjavascripts %}

    {% javascripts
    '@OlegTranslationalResearchBundle/Resources/public/form/js/handsontable.js'
    '@OlegUserdirectoryBundle/Resources/public/bwip-js/freetype.js'
    '@OlegOrderformBundle/Resources/public/form/js/selectAjax.js'
    '@OlegOrderformBundle/Resources/public/form/js/masking.js'
    '@OlegTranslationalResearchBundle/Resources/public/form/js/barcode.js'
    '@OlegUserdirectoryBundle/Resources/public/qrcode/qrcode.js'
    '@OlegUserdirectoryBundle/Resources/public/jquery-qrcode/jquery.qrcode.min.js'
    %}
    <script type="text/javascript" src="{{ asset_url }}"></script>
    {% endjavascripts %}

    <script type="text/javascript">

        var _handsometableDataArr = [];

        $(document).ready(function() {

            //if( $('#oleg_translationalresearchbundle_request_project') ) {
                //var projectId = $('#oleg_translationalresearchbundle_request_project').val();
                transresPrepopulateProjectDetails( $('#oleg_translationalresearchbundle_request_project') );

                //update tarnsresrequest-fundedAccountNumber by tarnsresrequest-project
                $('#oleg_translationalresearchbundle_request_project').on("change", function(event) {
                    //console.log("project changed: change");
                    //var projectId = $(this).val();
                    transresPrepopulateProjectDetails( $(this) );
                });
            //}

            var tableFormCycle = '{{ cycle }}';
            //console.log('tableFormCycle='+tableFormCycle);

            if( tableFormCycle != "new" ) {

                getComboboxAccessionType(null,true);

                getAntobodies(null,true);

                var _handsometableDataArr = {{ handsometableData|json_encode|raw }};
                //console.log('init _handsometableDataArr:');
                //console.log(_handsometableDataArr);

                //handsonTableInit(_handsometableDataArr, tableFormCycle);


                // Wait until idle (busy must be false)
                var _TIMEOUT = 300; // waitfor test rate [msec]

                //console.log('before wait for');
                waitfor( ajaxFinishedCondition, true, _TIMEOUT, 0, 'play->busy false', function() {
                    //console.log('The show can resume !');
                    transresMakeColumnData();

                    handsonTableInit(_handsometableDataArr, tableFormCycle);
                });

            }

//            $('.table-barcode').on("change", function(event) {
//                transresTableBarcodeGeneration( $(this) );
//            });

            //bwipInit();

            var showPackingSlip = document.getElementById("latest-packing-slip-pdf-view");
            console.log("1 show showPackingSlip");
            if( showPackingSlip ) {
                console.log("2 show showPackingSlip");
                showPackingSlip.click();
            }

        });

        function transresValidateRequest() {

            transresHideBtn();

            //validate submit confirmation
            $("#projectError").hide();
            $("#projectError").html(null);
            var confirmationSubmit = $('#confirmationSubmit');
            if( confirmationSubmit.length ) {
                if( confirmationSubmit.is(':checked') ) {
                    //ok confirmed
                    console.log("ok confirmed");
                } else {
                    var msg = "Please confirm the agreement in order to submit a new work request.";
                    $("#projectError").show();
                    $("#projectError").html(msg);
                    console.log("not confirmed");
                    transresShowBtn();
                    return false;
                }
            }
            console.log("transresValidateRequest: finished");

            transresValidateHandsonTable();

        }

        function transresHideBtn() {
            //console.log("hide submit");
            $(":submit").hide();
            $('#please-wait').show();
        }
        function transresShowBtn() {
            //console.log("show submit");
            $(":submit").show();
            $('#please-wait').hide();
        }

        function transresPrepopulateProjectDetails( projectField ) {
            var projectId = null;    //$('#oleg_translationalresearchbundle_request_project');
            if( projectField.length ) {
                projectId = projectField.val();
            } else {
                return;
            }

            console.log("projectId="+projectId);
            if( projectId ) {
                //console.log("get project account number");

                var url = Routing.generate('translationalresearch_get_project_ajax');
                url = url + "/" + projectId;

                $.ajax({
                    url: url,
                    timeout: _ajaxTimeout,
                    type: "GET",
                    //data: {id: projectId },
                    dataType: 'json',
                    async: asyncflag
                }).success(function(response) {
                    //console.log(response);
                    //set fundedAccountNumber
                    $("#oleg_translationalresearchbundle_request_fundedAccountNumber").val(response.fundedAccountNumber);

                    //set oleg_translationalresearchbundle_request_principalInvestigators
                    $("#oleg_translationalresearchbundle_request_principalInvestigators").select2('val',response.principalInvestigators);

                    //set BillingContact oleg_translationalresearchbundle_request_contact
                    $("#oleg_translationalresearchbundle_request_contact").select2('val',response.contact);

                    //set supportEndDate (project's irbExpirationDate)
                    $("#oleg_translationalresearchbundle_request_supportEndDate").val(response.implicitExpirationDate);

                    $('#transer-funded').val(response.fundedStr);

                }).done(function() {
                    //
                }).error(function(jqXHR, textStatus, errorThrown) {
                    //console.log('Error : ' + errorThrown);
                    $("#oleg_translationalresearchbundle_request_fundedAccountNumber").val(errorThrown);
                });

            } else {
                $("#oleg_translationalresearchbundle_request_fundedAccountNumber").val(null);
                $("#oleg_translationalresearchbundle_request_supportEndDate").val(null);
                $("#oleg_translationalresearchbundle_request_principalInvestigators").select2('val',null);
                $("#oleg_translationalresearchbundle_request_contact").select2('val',null);
                $('#transer-funded').val(null);
            }
        }



//        function transresTableBarcodeGeneration( barcodeField ) {
//            console.log("generate barcode");
//            //generate barcode
//            var barcode = null;
//            var image = '<img src="https://www.imgonline.com.ua/examples/random-pixels.jpg" alt="Smiley face" height="42" width="42">';
//
//            //put barcode image to '.table-barcode-image'
//            barcodeField.closest(".table-barcode-image").html(image);
//
//            let canvas = document.createElement('canvas');
//            bwipjs(canvas, options, function(err, cvs) {
//                console.log("bwipjs function");
//                if (err) {
//                    // handle the error
//                    console.log(err);
//                } else {
//                    console.log("set barcode image");
//                    // Don't need the second param since we have the canvas in scope...
//                    document.getElementById('test-barcode-image').src = canvas.toDataURL('image/png');
//                }
//            });
//        }


    </script>


{% endblock %}




