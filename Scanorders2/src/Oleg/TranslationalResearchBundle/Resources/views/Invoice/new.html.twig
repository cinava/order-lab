{% extends "OlegTranslationalResearchBundle::Default/base.html.twig" %}

{% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
{% import "OlegTranslationalResearchBundle::Default/transresRequestMacros.html.twig" as transresRequestMacros %}
{% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}
{% import "OlegUserdirectoryBundle::Default/usermacros.html.twig" as usermacros %}

{% block title %}
    {{ title }}
{% endblock %}


{% block content %}

    <input type="hidden" id="formcycle" value="{{ cycle }}" />

    <div id="form-prototype-data"
         data-userurllink = "{{ usermacros.userUrlLink()|e }}"
         data-uploadurl = "{{ oneup_uploader_endpoint('transres_gallery') }}"
         data-userid = "{{ app.user.id }}"
    ></div>


    <h4 class="text-info" align="center">
        {{ title }}
    </h4>
    <br>

    {% set sitename = translationalresearch_sitename %}

    <div class="row" align="left">
        <div class="col-xs-5">
            {{ transres_request_util.getInvoiceLogo()|raw }}
        </div>
        <div class="col-xs-7"></div>
    </div>

    {{ form_start(form) }}

        {#{{ formmacros.field(form.updateUser) }}#}

        {{ formmacros.field(form.createDate) }}
        {{ formmacros.field(form.submitter) }}

        <hr />

        {% if form.documents is defined %}
            <div class="well form-element-holder user-documents">
                <label class="col-xs-12 control-label">Logo</label>
                <div class="row withpaddingtop">
                    <div class="col-xs-12">
                        {{ usermacros.documentsContainer(null,form.documents,cycle,'noprototype',1,'default','Logo') }}
                    </div>
                </div>
            </div>
        {% endif %}

        {#<hr />#}

        {{ formmacros.field(form.oid) }}
        {{ formmacros.fieldDateLabel(form.dueDate,'allow-future-date') }}

        {#<hr />#}

        {{ formmacros.field(form.from) }}
        {{ formmacros.field(form.to) }}
        {{ formmacros.field(form.footer) }}
        <br>

        {#<hr />#}

        {#{% for invoiceItem in form.invoiceItems %}#}
            {#<div class="well well-sm">#}
            {#{{ formmacros.field(invoiceItem.quantity) }}#}
            {#{{ formmacros.field(invoiceItem.itemCode) }}#}
            {#{{ formmacros.field(invoiceItem.description) }}#}
            {#{{ formmacros.field(invoiceItem.unitPrice) }}#}
            {#{{ formmacros.field(invoiceItem.total) }}#}
            {#</div>#}
            {#{{ transresRequestMacros.invoiceItem(invoiceItem,cycle) }}#}
        {#{% endfor %}#}
        {{ transresRequestMacros.invoiceItems(form,cycle) }}

        {#<hr />#}

        {{ formmacros.field(form.subTotal) }}

        {{ formmacros.field(form.discountNumeric) }}
        {{ formmacros.field(form.discountPercent) }}

        {{ formmacros.field(form.total) }}
        {{ formmacros.field(form.paid) }}

        <br><br>

        {% if form.save is defined %}
            {{ form_widget(form.save) }}
        {% endif %}
        {% if form.edit is defined %}
            {{ form_widget(form.edit) }}
        {% endif %}

    {{ form_end(form) }}


    {#{% if project and project.id %}#}
        {#<br>#}
        {#{{ transres.projectObjFullInfo(project,cycle) }}#}
        {#<p>#}
            {#<a href="{{ path(translationalresearch_sitename~'_request_index',{'id':project.id}) }}">Back to the request list</a>#}
        {#</p>#}
    {#{% endif %}#}

{% endblock %}


{% block additionaljs %}

    <script type="text/javascript">

        $(document).ready(function() {

            //quantity or unit price update => update total
            $('.invoiceitem-quantity, .invoiceitem-unitPrice').on('input', function(event) {
                console.log("update row total");
                var invoiceItemRow = $(this).closest('.invoiceItemRow');
                var quatity = invoiceItemRow.find(".invoiceitem-quantity").val();
                var unitPrice = invoiceItemRow.find(".invoiceitem-unitPrice").val();
                console.log("row quatity="+quatity+"; unitPrice="+unitPrice);
                var invoiceItemTotalEl = invoiceItemRow.find(".invoiceitem-total");
                if( quatity && unitPrice ) {
                    var total = parseInt(quatity) * parseInt(unitPrice);
                    console.log("row total="+total);
                    invoiceItemTotalEl.val(total);
                } else {
                    invoiceItemTotalEl.val(null);
                }
                console.log("transresUpdateSubTotal: triggered by claculated row total");
                transresUpdateSubTotal(invoiceItemTotalEl);
            });

            //total update => update subtotal and total
            $('.invoiceitem-total').on('input', function(event) {
//                console.log("update subtotal and total");
//                var totals = $(this).closest('.invoiceItemTable').find(".invoiceitem-total");
//                var subTotal = 0;
//                totals.each(function() {
//                    var total = $(this).val();
//                    console.log("total="+total);
//                    if( !total ) {
//                        total = 0;
//                    }
//                    subTotal = subTotal + parseInt(total);
//                });
//                console.log("subTotal="+subTotal);
//                $(".invoice-subTotal").val(subTotal);
//                $(".invoice-total").val(subTotal);
                console.log("transresUpdateSubTotal: triggered by manually update row total");
                transresUpdateSubTotal( $(this) );
            });

            $('.invoice-discountNumeric').on('input', function(event) {
                $('.invoice-discountPercent').val(null);
                transresUpdateTotal();
            });
            $('.invoice-discountPercent').on('input', function(event) {
                $('.invoice-discountNumeric').val(null);
                transresUpdateTotal();
            });

        });

        function transresUpdateSubTotal(invoiceItemTotalEl) {
            console.log("update subtotal and total");
            var totals = invoiceItemTotalEl.closest('.invoiceItemTable').find(".invoiceitem-total");
            var subTotal = 0;
            totals.each(function() {
                var total = $(this).val();
                console.log("total="+total);
                if( !total ) {
                    total = 0;
                }
                subTotal = subTotal + parseInt(total);
            });
            console.log("subTotal="+subTotal);
            $(".invoice-subTotal").val(subTotal);
            //$(".invoice-total").val(subTotal);
            transresUpdateTotal();
        }

        function transresUpdateTotal() {

            var discount = 0;
            var discountNumeric = $(".invoice-discountNumeric").val();
            var discountPercent = $(".invoice-discountPercent").val();
            var subTotal = $(".invoice-subTotal").val();

            if( subTotal ) {
                if( discountNumeric ) {
                    discount = parseInt(discountNumeric);
                }
                if( discountPercent ) {
                    discount = subTotal * (parseInt(discountPercent)/100);
                }
            }

            var total = subTotal - discount;

            $(".invoice-total").val(total);
        }

    </script>

{% endblock %}

