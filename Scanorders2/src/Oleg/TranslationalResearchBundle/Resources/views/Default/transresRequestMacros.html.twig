{% macro transresRequestInfo( form, transresRequest, cycle ) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}

    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
        <div class="panel panel-info">
            <div class="panel-heading" role="tab" id="transresRequestInfoHeading">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#transresRequestInfo" aria-expanded="true">
                        Request Info
                    </a>
                </h4>
            </div>
            <div id="transresRequestInfo" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="transresRequestInfoHeading">
                <div class="panel-body">

                    {% if form.state is defined %}
                        {{ formmacros.field(form.state) }}
                    {% endif %}

                    {% if form.oid is defined %}
                        {{ formmacros.field(form.oid) }}
                    {% endif %}

                    {% if form.approvalDate is defined %}
                        {{ formmacros.field(form.approvalDate) }}
                    {% endif %}

                    {% if form.createDate is defined or form.submitter is defined %}
                        {#<div class="well well-sm">#}
                        {% if form.createDate is defined %}
                            {{ formmacros.field(form.createDate) }}
                        {% endif %}
                        {% if form.submitter is defined %}
                            {{ formmacros.field(form.submitter) }}
                        {% endif %}
                        {#</div>#}
                    {% endif %}

                    {{ transres.updateInfo(form,cycle) }}

                </div>
            </div>
        </div>
    </div>

{% endmacro %}

{% macro transresRequestFormEdit( form, transresRequest, cycle ) %}

    {% import "OlegUserdirectoryBundle::Tree/treemacros.html.twig" as treemacros %}
    {#{% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}#}

    <div style="display: none">
        {% if form.messageCategory is defined %}
            {{ treemacros.compositeTreeNode(form.messageCategory,cycle,"noprototype") }}
        {% endif %}
    </div>

    <div id="form-node-holder"></div>

{% endmacro %}


{% macro transresRequestFormShow( form, transresRequest, cycle ) %}

    {#{% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}#}

    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="transresRequestContentHeading">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#transresRequestContent" aria-expanded="true">
                        Request
                    </a>
                </h4>
            </div>
            <div id="transresRequestContent" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="transresRequestContentHeading">
                <div class="panel-body">

                    {% set callLogViewClass = "order-white-background" %}
                    <div class="text-left {{ callLogViewClass }}">
                        {{ user_formnode_utility.getFormNodeHolderShortInfoForView(transresRequest,transresRequest.messageCategory,false)|raw }}
                    </div>

                </div>
            </div>
        </div>
    </div>

{% endmacro %}


{% macro getActionRequestReviewCommentsSection(transresRequest, cycle, sitename, statMachineType) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% import "OlegUserdirectoryBundle::Default/usermacros.html.twig" as usermacros %}
    {% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}

    {% if cycle == "show" %}
        {% set actionReviewLinks = transres_request_util.getReviewEnabledLinkActions(transresRequest,statMachineType) %}
        {#{% set actionLinks = actionLinks|merge({ (loop.index0): actionReviewLinks}) %}#}

        {% set threadId = transresRequest.id ~ "-" ~ statMachineType %}
    {% else %}
        {#no getReviewEnabledLinkActions<br>#}
    {% endif %}

    {% if threadId and actionReviewLinks|length > 0 %}
        <div class="well transres-review-holder text-center col-xs-12">
            {% for actionReviewLink in actionReviewLinks %}
                {{ actionReviewLink|raw }}
                {#<p>#}
                    {#{% for actionLinkSet in actionLink %}#}
                        {#{{ actionLinkSet|raw }}#}
                    {#{% endfor %}#}
                {#</p>#}
            {% endfor %}
            {% include 'FOSCommentBundle:Thread:async.html.twig' with {'id': threadId} %}
        </div>
    {% endif %}

{% endmacro %}

{% macro invoiceItems(form, cycle) %}

    {% if form.invoiceItems is defined and form.invoiceItems|length > 0 %}
    <table class="table text-left table-hover invoiceItemTable">
        <thead style="background-color: grey;">
        <tr>
            <th>{{ form_label(form.invoiceItems|first.quantity) }}</th>
            <th>{{ form_label(form.invoiceItems|first.itemCode) }}</th>
            <th>{{ form_label(form.invoiceItems|first.description) }}</th>
            <th>{{ form_label(form.invoiceItems|first.unitPrice) }}</th>
            <th>{{ form_label(form.invoiceItems|first.total) }}</th>
        </tr>
        </thead>
        <tbody>

        {#<div class="well well-sm">#}

        {% for invoiceItem in form.invoiceItems %}
            <tr class="invoiceItemRow">
                <td>
                    {{ form_widget(invoiceItem.quantity) }}
                </td>
                <td>
                    {{ form_widget(invoiceItem.itemCode) }}
                </td>
                <td>
                    {{ form_widget(invoiceItem.description) }}
                </td>
                <td>
                    {{ form_widget(invoiceItem.unitPrice) }}
                </td>
                <td>
                    {{ form_widget(invoiceItem.total) }}
                </td>
            </tr>
        {% endfor %}

        </tbody>
    </table>
    {% else %}
        <p>There are no invoice items</p>
    {% endif %}

{% endmacro %}

{% macro productSections(form, cycle, sitename) %}

    {% import "OlegFellAppBundle::Default/fellappmacros.html.twig" as fellappmacros %}
    {% import "OlegUserdirectoryBundle::Default/usermacros.html.twig" as usermacros %}
    {% import "OlegTranslationalResearchBundle::Default/transresRequestMacros.html.twig" as transresRequestMacros %}

    <div class="panel panel-default">

        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" href="#products" name="products">
                    Product or Service
                </a>
            </h4>
        </div>


        <div id="products" class="panel-collapse collapse in">
            <div class="panel-body">

                <div class="transres-products-holder">
                    {% for product in form.products %}

                        {#{{ formmacros.field(form.category) }}#}
                        {#{{ formmacros.field(form.requested) }}#}
                        {#{{ formmacros.field(form.completed) }}#}
                        {#{{ formmacros.field(form.comment) }}#}

                        {{ transresRequestMacros.productForm(product, cycle, 'transres-products', 'noprototype', sitename, 1) }}

                    {% endfor %}

                    {% if cycle != "show" %}
                        {{ usermacros.addNewObjectBtn(cycle,'transres-products','Add Product or Service') }}
                    {% endif %}
                </div>


            </div> <!-- panel-body -->
        </div> <!-- panel-collapse -->

    </div> <!-- panel panel-info -->
{% endmacro %}

{% macro productForm( product, cycle, classname, prototype, sitename, showAddDeleteBtn ) %}

    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}

    {% if showAddDeleteBtn is not defined %}
        {% set showAddDeleteBtn = 0 %}
    {% endif %}

    {% if prototype == "prototype" %}
        {% set formproduct = product.vars.prototype %}
    {% else %}
        {% set formproduct = product %}
    {% endif %}

    {% set wellclass = "alert-default well well-sm" %}

    <div class="user-collection-holder alert {{ classname }} {{ wellclass }}">
        {% if cycle != "show" and showAddDeleteBtn %}
            <div class="text-right">
                <button type="button" class="btn btn-default btn-sm" onClick="removeExistingObject(this,'{{ classname }}')" ><span class="glyphicon glyphicon-remove"></span></button>
            </div>
            <br>
        {% else %}
        {% endif %}

        {#{{ formmacros.field(formproduct.id) }}#}
        {{ form_widget(formproduct.id) }}

        {{ formmacros.field(formproduct.category) }}

        {{ formmacros.field(formproduct.requested) }}

        {{ formmacros.field(formproduct.completed) }}

        {{ formmacros.field(formproduct.comment) }}

    </div>

{% endmacro %}
