{% macro projectForm( form, project, cycle ) %}

    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}

    {% if form.state is defined %}
        {{ formmacros.field(form.state) }}
    {% endif %}

    {% if form.approvalDate is defined %}
        {{ formmacros.field(form.approvalDate) }}
    {% endif %}

    {% if cycle == "show" %}
        {% set principalInvestigators = project.principalInvestigators %}
    {% else %}
        {% set principalInvestigators = null %}
    {% endif %}
    {{ transres.usersInfo(form.principalInvestigators,principalInvestigators,cycle) }}

    {% if cycle == "show" %}
        {% set pathologists = project.pathologists %}
    {% else %}
        {% set pathologists = null %}
    {% endif %}
    {{ transres.usersInfo(form.pathologists,pathologists,cycle) }}

    {% if cycle == "show" %}
        {% set coInvestigators = project.coInvestigators %}
    {% else %}
        {% set coInvestigators = null %}
    {% endif %}
    {{ transres.usersInfo(form.coInvestigators,coInvestigators,cycle) }}

    {{ formmacros.field(form.title) }}

    <div class="well well-sm">
        {% if cycle == "show" %}
            {% set irbSubmitter = project.irbSubmitter %}
        {% else %}
            {% set irbSubmitter = null %}
        {% endif %}
        {{ transres.userInfo(form.irbSubmitter,irbSubmitter,cycle) }}
        {{ formmacros.field(form.irbNumber) }}
    </div>

    {#<div class="well well-sm">#}
        {#{{ formmacros.fieldDateLabel(form.startDate,'allow-future-date') }}#}
        {#{{ formmacros.fieldDateLabel(form.expirationDate,'allow-future-date') }}#}
    {#</div>#}

    {#{{ formmacros.field(form.contact) }}#}
    {% if cycle == "show" %}
        {% set contact = project.contact %}
    {% else %}
        {% set contact = null %}
    {% endif %}
    {{ transres.userInfo(form.contact,contact,cycle) }}

    <div class="well well-sm">
        {{ formmacros.checkbox(form.funded) }}
        {{ formmacros.field(form.fundedAccountNumber) }}
    </div>

    {{ formmacros.field(form.description) }}

    {{ formmacros.field(form.budgetSummary) }}

    {{ formmacros.field(form.totalCost) }}

    {{ formmacros.field(form.projectType) }}

    {{ formmacros.field(form.biostatisticalComment) }}

    {{ formmacros.field(form.administratorComment) }}

{% endmacro %}



{% macro updateInfo( form, cycle ) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% if form.vars.value.updateDate or form.vars.value.updateUser %}
        <div class="well well-sm">
        {{ formmacros.simplefield("Update Date:", form.vars.value.updateDate|date("m/d/Y"), "input", "disabled") }}
        {{ formmacros.simplefield("Updated By:", form.vars.value.updateUser, "input", "disabled") }}
        </div>
    {% endif %}
{% endmacro %}

{% macro usersInfo( usersForm, usersEntity, cycle ) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% import "OlegUserdirectoryBundle::Default/usermacros.html.twig" as usermacros %}
    {% if cycle == "show" %}
        <div class="well well-sm">
            <div style="text-align: center;">
                <p>
                    <strong>{{ usersForm.vars.label }}</strong>
                </p>
            </div>
            {% for userEntity in usersEntity %}
                {{ usermacros.personInfo(userEntity, cycle, 'translationalresearch') }}
            {% endfor %}
        </div>
        {% do usersForm.setRendered %}
    {% else %}
        {{ formmacros.field(usersForm) }}
    {% endif %}
{% endmacro %}

{% macro userInfo( userForm, userEntity, cycle ) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% import "OlegUserdirectoryBundle::Default/usermacros.html.twig" as usermacros %}
    {% if cycle == "show" %}
        <div class="well well-sm">
            <div style="text-align: center;">
                <p>
                    <strong>{{ userForm.vars.label }}</strong>
                </p>
            </div>
            {{ usermacros.personInfo(userEntity, cycle, 'translationalresearch') }}
        </div>
        {% do userForm.setRendered %}
    {% else %}
        {{ formmacros.field(userForm) }}
    {% endif %}
{% endmacro %}

{% macro projectEnabledLinkActionsHeader(project) %}
    {% set actionLinks = transres_util.getEnabledLinkActions(project,"btn btn-default","btn btn-warning") %}
    <div class="well">
        <p>Project State: <strong>{{ transres_util.getStateLabelByProject(project) }}</strong></p>
        {% for actionLink in actionLinks %}
                {{ actionLink|raw }}
        {% endfor %}
    </div>
{% endmacro %}

{% macro projectHeader(project) %}
    <div class="well">
        <p>Project State: <strong>{{ transres_util.getStateLabelByProject(project) }}</strong></p>
        {#{{ transres_util.getReviewLink(project,app.user)|raw }}#}
        {#{{ transres_util.getReviewFormsHtml(project,app.user)|raw }}#}
        {#{% set reviewIds = transres_util.getReviewIds(project,app.user) %}#}
        {#{% for reviewId in reviewIds %}#}
            {#{{ render(controller(#}
                {#'OlegTranslationalResearchBundle:ReviewBase:edit',#}
                {#{ 'stateStr':project.getState(), 'id': reviewId }#}
            {#)) }}#}
        {#{% endfor %}#}
    </div>
{% endmacro %}

{% macro projectReviews(project, cycle, sitename) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% import "OlegUserdirectoryBundle::Default/usermacros.html.twig" as usermacros %}
    {% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}

    {#{% if showAddDeleteBtn is not defined %}#}
        {#{% set showAddDeleteBtn = 0 %}#}
    {#{% endif %}#}

    {#{% if prototype == "prototype" %}#}
        {#{% set forminterview = reviews.vars.prototype %}#}
    {#{% else %}#}
        {#{% set forminterview = reviews %}#}
    {#{% endif %}#}

    {#{% if project.state.vars.value == "irb_review" %}#}
        {#{% set reviews = project.irbReviews %}#}
    {#{% endif %}#}
    {#{% if project.state.vars.value == "admin_review" %}#}
        {#{% set reviews = project.adminReviews %}#}
    {#{% endif %}#}
    {#{% if project.state.vars.value == "committee_review" %}#}
        {#{% set reviews = project.committeeReviews %}#}
    {#{% endif %}#}
    {#{% if project.state.vars.value == "final_approval" %}#}
        {#{% set reviews = project.finalReviews %}#}
    {#{% endif %}#}

    {% set showIrbReview = 1 %}
    {% set showAdminReview = 1 %}
    {% set showCommiteeReview = 1 %}
    {% set showFinalReview = 1 %}

    {% set showAddDeleteBtn = 0 %}
    {% if is_granted('ROLE_TRANSRES_ADMIN') or is_granted('ROLE_TRANSRES_PRIMARY_REVIEWER') or is_granted('ROLE_TRANSRES_PRIMARY_REVIEWER_DELEGATE') %}
        {% set showAddDeleteBtn = 1 %}
    {% endif %}

    {% if showIrbReview and project.irbReviews is defined %}
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-primary">
                <div class="panel-heading" role="tab" id="irbreviewHeading">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#irbreview" aria-expanded="true" aria-controls="reviewBase">
                            {#{{ transres_util.getStateSimpleLabelByName(project.state.vars.value) }}#}
                            IRB Review
                        </a>
                    </h4>
                </div>
                <div id="irbreview" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="irbreviewHeading">
                    <div class="panel-body">
                        <div class="transres-irbreviews-holder">

                            {#count irb reviewers={{ project.irbReviews|length }}<br>#}
                            {% for review in project.irbReviews %}
                                {#show review with reviewer={{ review.vars.value.reviewer.getUsernameOptimal }}<br>#}
                                {{ transres.projectSingleReview(project,review,cycle,'transres-irbreviews','noprototype',sitename,showAddDeleteBtn) }}
                            {% endfor %}

                            {% if cycle != "show" %}
                                {% if showAddDeleteBtn %}
                                    {{ usermacros.addNewObjectBtn(cycle,'transres-irbreviews','Add IRB Reviewer') }}
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

    {% if showAdminReview and project.adminReviews is defined %}
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-primary">
                <div class="panel-heading" role="tab" id="adminreviewHeading">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#adminreview" aria-expanded="true" aria-controls="reviewBase">
                            {#{{ transres_util.getStateSimpleLabelByName(project.state.vars.value) }}#}
                            Admin Review
                        </a>
                    </h4>
                </div>
                <div id="adminreview" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="adminreviewHeading">
                    <div class="panel-body">
                        <div class="transres-adminreviews-holder">

                            {% for review in project.adminReviews %}
                                {{ transres.projectSingleReview(project,review,cycle,'transres-adminreviews','noprototype',sitename,showAddDeleteBtn) }}
                            {% endfor %}

                            {% if cycle != "show" %}
                                {% if showAddDeleteBtn %}
                                    {{ usermacros.addNewObjectBtn(cycle,'transres-adminreviews','Add Admin Reviewer') }}
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

    {% if showCommiteeReview and project.committeeReviews is defined %}
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-primary">
                <div class="panel-heading" role="tab" id="committeereviewHeading">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#committeereview" aria-expanded="true" aria-controls="reviewBase">
                            {#{{ transres_util.getStateSimpleLabelByName(project.state.vars.value) }}#}
                            Committee Reviews
                        </a>
                    </h4>
                </div>
                <div id="committeereview" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="committeereviewHeading">
                    <div class="panel-body">
                        <div class="transres-committeereviews-holder">

                            {% for review in project.committeeReviews %}
                                {{ transres.projectSingleReview(project,review,cycle,'transres-committeereviews','noprototype',sitename,showAddDeleteBtn) }}
                            {% endfor %}

                            {% if cycle != "show" %}
                                {% if showAddDeleteBtn %}
                                    {{ usermacros.addNewObjectBtn(cycle,'transres-committeereviews','Add Committee Reviewer') }}
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

    {% if showFinalReview and project.finalReviews is defined %}
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-primary">
                <div class="panel-heading" role="tab" id="finalreviewHeading">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#finalreview" aria-expanded="true" aria-controls="reviewBase">
                            {#{{ transres_util.getStateSimpleLabelByName(project.state.vars.value) }}#}
                            Final Review
                        </a>
                    </h4>
                </div>
                <div id="finalreview" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="finalreviewHeading">
                    <div class="panel-body">
                        <div class="transres-finalreviews-holder">

                            {% for review in project.finalReviews %}
                                {{ transres.projectSingleReview(project,review,cycle,'transres-finalreviews','noprototype',sitename,showAddDeleteBtn) }}
                            {% endfor %}

                            {% if cycle != "show" %}
                                {% if showAddDeleteBtn %}
                                    {{ usermacros.addNewObjectBtn(cycle,'transres-finalreviews','Add Final Reviewer') }}
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

{% endmacro %}

{% macro projectSingleReview( project, review, cycle, classname, prototype, sitename, showAddDeleteBtn ) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}

    {% if showAddDeleteBtn is not defined %}
        {% set showAddDeleteBtn = 0 %}
    {% endif %}

    {% set reviewId = null %}
    {% set reviewInfo = null %}
    {% if prototype == "prototype" %}
        {% set formreview = review.vars.prototype %}
        {% set reviewInfo = "Will be added as a new reviewer after update" %}
    {% else %}
        {% set formreview = review %}
        {% set reviewId = review.id.vars.value %}
        {% if review.id.vars.value == null %}
            {% set reviewInfo = "Will be added as a new default reviewer after update" %}
        {% endif %}
    {% endif %}


    {% set wellclass = "alert-default well well-sm" %}

    <div class="user-collection-holder alert {{ classname }} {{ wellclass }}">

        {% if reviewInfo %}
            <p>
            <div class="alert alert-info" role="alert">
                {{ reviewInfo }}
            </div>
            </p>
        {% endif %}

        {% if
            reviewId and
            transres_util.isUserAllowedReview(review.vars.value) and
            transres_util.isProjectStateReadyForReview(project.vars.value)
        %}
            <p>
                <a class="btn btn-primary" href="{{ path(translationalresearch_sitename~'_review_edit',{'stateStr':project.vars.value.state,'reviewId': reviewId}) }}">Update Review</a>
            </p>
        {% endif %}

        {% if cycle != "show" and showAddDeleteBtn %}
            <div class="text-right">
                <button type="button" class="btn btn-default btn-sm" onClick="removeExistingObject(this,'{{ classname }}')" ><span class="glyphicon glyphicon-remove"></span></button>
            </div>
            <br>
        {% else %}
            {#do nothing#}
        {% endif %}

        {#{% if formreview.reviewer.vars.value %}#}
        {#formreview.reviewer={{ formreview.vars.value.reviewer.getUsernameOptimal() }}#}
        {#{% endif %}#}

        {% if formreview.id is defined %}
            {{ form_widget(formreview.id) }}
        {% endif %}

        {% if formreview.vars.value.reviewedBy %}
            {#{{ transres.userHtml(formreview.vars.value.reviewedBy) }}#}
            {{ formmacros.simplefield("Reviewed By:", transres.userHtml(formreview.vars.value.reviewedBy), "input", "disabled") }}
        {% endif %}

        {{ formmacros.field(formreview.reviewer) }}

        {% if formreview.reviewerDelegate is defined %}
            {{ formmacros.field(formreview.reviewerDelegate) }}
        {% endif %}

        {% if formreview.decision is defined %}
            {{ formmacros.field(formreview.decision) }}
        {% endif %}

        {% if formreview.comment is defined %}
            {{ formmacros.field(formreview.comment) }}
        {% endif %}

    </div>
{% endmacro %}

{% macro userHtml(user) %}
    {% if user %}
        {% set personurl = path(translationalresearch_sitename~'_showuser',{'id':user.id}) %}
        {% set personlink = '<a href="'~personurl~'" target="_blank">'~user.getUsernameOptimal()~'</a>'  %}
        {{ personlink|raw }}
    {% endif %}
{% endmacro %}

{% macro getProjectReviewPrototypeFormData(form, cycle, sitename) %}
    {% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}
    <div id="form-prototype-data"
            {% if form.irbReviews is defined %}
                data-prototype-transres-irbreviews = "{{ transres.projectSingleReview(form,form.irbReviews,cycle,'transres-irbreviews','prototype', sitename,1)|e }}"
            {% endif %}
            {% if form.adminReviews is defined %}
                data-prototype-transres-adminreviews = "{{ transres.projectSingleReview(form,form.adminReviews,cycle,'transres-adminreviews','prototype', sitename,1)|e }}"
            {% endif %}
            {% if form.committeeReviews is defined %}
                data-prototype-transres-committeereviews = "{{ transres.projectSingleReview(form,form.committeeReviews,cycle,'transres-committeereviews','prototype', sitename,1)|e }}"
            {% endif %}
            {% if form.finalReviews is defined %}
                data-prototype-transres-finalreviews = "{{ transres.projectSingleReview(form,form.finalReviews,cycle,'transres-finalreviews','prototype', sitename,1)|e }}"
            {% endif %}
    ></div>
{% endmacro %}

