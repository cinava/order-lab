{% macro projectInfo( form, project, cycle ) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}

    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="projectInfoHeading">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#projectInfo" aria-expanded="true">
                        Project Status
                    </a>
                </h4>
            </div>
            <div id="projectInfo" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="projectInfoHeading">
                <div class="panel-body">

                    {% if form.state is defined %}
                        {{ formmacros.field(form.state) }}
                    {% endif %}

                    {% if form.oid is defined %}
                        {{ formmacros.field(form.oid) }}
                    {% endif %}
                    {% if form.projectSpecialty is defined %}
                        {{ formmacros.field(form.projectSpecialty) }}
                    {% endif %}

                    {% if form.approvalDate is defined %}
                        {{ formmacros.field(form.approvalDate) }}
                    {% endif %}

                    {% if form.createDate is defined or form.submitter is defined %}
                        {#<div class="well well-sm">#}
                        {% if form.createDate is defined %}
                            {{ formmacros.field(form.createDate) }}
                        {% endif %}
                        {% if form.submitter is defined %}
                            {{ formmacros.field(form.submitter) }}
                        {% endif %}
                        {#</div>#}
                    {% endif %}

                    {{ transres.updateInfo(form,cycle) }}

                </div>
            </div>
        </div>
    </div>

{% endmacro %}

{% macro projectObjInfo( project, cycle ) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {#{% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}#}

    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="projectInfoHeading">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#projectInfo" aria-expanded="true">
                        Project Status
                    </a>
                </h4>
            </div>
            <div id="projectInfo" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="projectInfoHeading">
                <div class="panel-body">

                    {% if project.oid is defined %}
                        {{ formmacros.simplefield("ID:", project.oid, "input", "disabled") }}
                    {% endif %}
                    {% if project.state is defined %}
                        {{ formmacros.simplefield("Status:", project.state, "input", "disabled") }}
                    {% endif %}
                    {% if project.projectSpecialty is defined %}
                        {{ formmacros.simplefield("Project Specialty:", project.projectSpecialty, "input", "disabled") }}
                    {% endif %}
                    {% if project.approvalDate is defined %}
                        {{ formmacros.simplefield("Project Specialty:", project.approvalDate|date('m/d/Y H:i:s'), "input", "disabled") }}
                    {% endif %}

                    {% if project.createDate is defined or project.submitter is defined %}
                        {#<div class="well well-sm">#}
                        {% if project.createDate is defined %}
                            {{ formmacros.simplefield("Create Date:", project.createDate|date('m/d/Y H:i:s'), "input", "disabled") }}
                        {% endif %}
                        {% if project.submitter is defined %}
                            {#{% set createdby = '<a href="'~path('translationalresearch_showuser', { 'id': project.submitter.id })~'">'~project.submitter~'</a>' %}#}
                            {#{{ formmacros.simplefield( "Created By:", createdby, "input", "disabled" ) }}#}
                            {{ formmacros.simplefield("Created By:", project.submitter, "input", "disabled") }}
                        {% endif %}
                        {#</div>#}
                    {% endif %}

                    {% if project.updateDate or project.updateUser %}
                        {#<div class="well well-sm">#}
                        {{ formmacros.simplefield("Update Date:", project.updateDate|date("m/d/Y"), "input", "disabled") }}
                        {{ formmacros.simplefield("Updated By:", project.updateUser, "input", "disabled") }}
                        {#</div>#}
                    {% endif %}

                </div>
            </div>
        </div>
    </div>

{% endmacro %}

{% macro projectFormEdit( form, project, cycle ) %}

    {% import "OlegUserdirectoryBundle::Tree/treemacros.html.twig" as treemacros %}
    {% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}

    <div style="display: none">
        {% if form.messageCategory is defined %}
            {{ treemacros.compositeTreeNode(form.messageCategory,cycle,"noprototype") }}
        {% endif %}
    </div>

    <div id="form-node-holder"></div>

    {{ transres.projectDocument(form,project,cycle) }}

{% endmacro %}


{% macro projectFormShow( form, project, cycle ) %}

    {% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}

    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="projectContentHeading">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#projectContent" aria-expanded="true">
                        Project
                    </a>
                </h4>
            </div>
            <div id="projectContent" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="projectContentHeading">
                <div class="panel-body">

                    {% set callLogViewClass = "order-white-background" %}
                    <div class="text-left {{ callLogViewClass }}">
                        {{ user_formnode_utility.getFormNodeHolderShortInfoForView(project,project.messageCategory,false)|raw }}
                    </div>

                    {#{% if form %}#}
                        {{ transres.projectDocument(form,project,cycle) }}
                    {#{% else %}#}

                    {#{% endif %}#}

                </div>
            </div>
        </div>
    </div>

{% endmacro %}


{% macro projectDocument( form, project, cycle ) %}
    {% import "OlegUserdirectoryBundle::Default/usermacros.html.twig" as usermacros %}
    {#{% set asForm = true %}#}
    {% if cycle == "review" %}
        {% set cycle = "show" %}
        {#{% set asForm = false %}#}
        {#{% set documents = project.documents %}#}
    {% else %}
        {#{% set documents = form.documents %}#}
    {% endif %}

    {% if form %}
        {% set asForm = true %}
        {% set documents = form.documents %}
    {% else %}
        {% set cycle = "show" %}
        {% set asForm = false %}
        {% set documents = project.documents %}
    {% endif %}

    <div class="well form-element-holder user-documents">
        <label class="col-xs-12 control-label">Project Documents</label>
        <div class="row withpaddingtop">
            <div class="col-xs-12">
                {{ usermacros.documentsContainer(null,documents,cycle,'noprototype',8,'default','Project Document',asForm) }}
            </div>
        </div>
    </div>
{% endmacro %}


{% macro projectRequesters( form, project, cycle ) %}
    {% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}

    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="projectRequestersHeading">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#projectRequesters" aria-expanded="true">
                        Project's Requester(s)
                    </a>
                </h4>
            </div>
            <div id="projectRequesters" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="projectRequestersHeading">
                <div class="panel-body">

                    {% if cycle == "show" %}
                        {% set principalInvestigators = project.principalInvestigators %}
                    {% else %}
                        {% set principalInvestigators = null %}
                    {% endif %}
                    {{ transres.usersInfo(form.principalInvestigators,principalInvestigators,cycle) }}

                    {% if cycle == "show" %}
                        {% set pathologists = project.pathologists %}
                    {% else %}
                        {% set pathologists = null %}
                    {% endif %}
                    {{ transres.usersInfo(form.pathologists,pathologists,cycle) }}

                    {% if cycle == "show" %}
                        {% set coInvestigators = project.coInvestigators %}
                    {% else %}
                        {% set coInvestigators = null %}
                    {% endif %}
                    {{ transres.usersInfo(form.coInvestigators,coInvestigators,cycle) }}

                    {% if cycle == "show" %}
                        {% set contacts = project.contacts %}
                    {% else %}
                        {% set contacts = null %}
                    {% endif %}
                    {{ transres.usersInfo(form.contacts,contacts,cycle) }}

                    {% if cycle == "show" %}
                        {% set billingContacts = project.billingContacts %}
                    {% else %}
                        {% set billingContacts = null %}
                    {% endif %}
                    {{ transres.usersInfo(form.billingContacts,billingContacts,cycle) }}

                </div>
            </div>
        </div>
    </div>
{% endmacro %}



{% macro updateInfo( form, cycle ) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% if form.vars.value.updateDate or form.vars.value.updateUser %}
        {#<div class="well well-sm">#}
        {{ formmacros.simplefield("Update Date:", form.vars.value.updateDate|date("m/d/Y"), "input", "disabled") }}
        {{ formmacros.simplefield("Updated By:", form.vars.value.updateUser, "input", "disabled") }}
        {#</div>#}
    {% endif %}
{% endmacro %}

{% macro usersInfo( usersForm, usersEntity, cycle ) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% import "OlegUserdirectoryBundle::Default/usermacros.html.twig" as usermacros %}
    {% if cycle == "show" %}
        {#<div class="well well-sm">#}
            <div style="text-align: center;">
                <p>
                    <strong>{{ usersForm.vars.label }}</strong>
                    {% if usersEntity|length == 0 %}
                        None
                    {% endif %}
                </p>
            </div>
            {% for userEntity in usersEntity %}
                {{ usermacros.personInfo(userEntity, cycle, 'translationalresearch') }}
            {% endfor %}
        {#</div>#}
        {% do usersForm.setRendered %}
    {% else %}
        {{ formmacros.field(usersForm) }}
    {% endif %}
{% endmacro %}

{% macro userInfo( userForm, userEntity, cycle ) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% import "OlegUserdirectoryBundle::Default/usermacros.html.twig" as usermacros %}
    {% if cycle == "show" or cycle == "review" %}
        {#<div class="well well-sm">#}
            <div style="text-align: center;">
                <p>
                    <strong>{{ userForm.vars.label }}</strong>
                </p>
            </div>
            {{ usermacros.personInfo(userEntity, cycle, 'translationalresearch') }}
        {#</div>#}
        {% do userForm.setRendered %}
    {% else %}
        {{ formmacros.field(userForm) }}
    {% endif %}
{% endmacro %}

{#NOT USED#}
{% macro projectEnabledLinkActionsHeader(project) %}
    {% set actionLinks = transres_util.getEnabledLinkActions(project) %}
    {#<div class="well">#}
        {#<p>Project State: <strong>{{ transres_util.getStateLabelByProject(project) }}</strong></p>#}
        {% for actionLink in actionLinks %}
                {{ actionLink|raw }}
        {% endfor %}
    {#</div>#}
{% endmacro %}
{#{% macro reviewEnabledLinkActionsHeader(project,review,cycle) %}#}
    {#{% set actionLinks = transres_util.getReviewEnabledLinkActions(review) %}#}
    {#{% for actionLink in actionLinks %}#}
        {#{{ actionLink|raw }}#}
    {#{% endfor %}#}

    {#{% set threadId = project.id ~ "-" ~ review.id ~ "-" ~ review.getStateStr() %}#}
    {#{% if actionLinks|length > 0 and cycle == "show" %}#}
        {#{{ render(controller('OlegTranslationalResearchBundle:Project:threadComments', { 'id': threadId })) }}#}
        {#{% include 'FOSCommentBundle:Thread:async.html.twig' with {'id': threadId} %}#}
    {#{% else %}#}
        {#{{ render(controller('OlegTranslationalResearchBundle:Project:threadCommentsShow', { 'id': threadId })) }}#}
    {#{% endif %}#}
{#{% endmacro %}#}
{#NOT USED#}
{% macro reviewEnabledLinkActionsHeader(project,review,cycle) %}

    {% if
        cycle == "show" and
        review.id and
        transres_util.isUserAllowedReview(review) and
        transres_util.isReviewCorrespondsToState(review)
    %}
        {% set actionLinks = transres_util.getReviewEnabledLinkActions(review) %}
        {% for actionLink in actionLinks %}
            <p>
                {{ actionLink|raw }}
            </p>
        {% endfor %}

        {#{% set threadId = project.id ~ "-" ~ review.id ~ "-" ~ review.getStateStr() %}#}
        {% set threadId = project.vars.value.id ~ "-" ~ review.vars.value.getStateStr() %}
        {#actionLinks|length={{ actionLinks|length }}, cycle={{ cycle }}<br>#}
        {% if actionLinks|length > 0 and cycle == "show" %}
            {#{{ render(controller('OlegTranslationalResearchBundle:Project:threadComments', { 'id': threadId })) }}#}
            {#include async.html.twig threadId={{ threadId }}<br>#}
            {% include 'FOSCommentBundle:Thread:async.html.twig' with {'id': threadId} %}
            {#{{ render(controller('OlegTranslationalResearchBundle:Project:threadComments', { 'id': threadId })) }}#}
        {% else %}
            {{ render(controller('OlegTranslationalResearchBundle:Project:threadCommentsShow', { 'id': threadId })) }}
        {% endif %}
    {% endif %}

{% endmacro %}
{#{% macro projectReviewsEnabledLinkActions_old(project,reviews,cycle) %}#}
    {#{% set actionLinks = null %}#}
    {#{% for review in reviews %}#}
        {#{{ transres.projectSingleReview(project,review,cycle,'transres-irbreviews','noprototype',sitename,showAddDeleteBtn,addReviewButtons) }}#}
        {#{{ transres.reviewEnabledLinkActionsHeader(project,review,cycle) }}#}
        {#{% if#}
            {#cycle == "show" and#}
            {#review.id and#}
            {#transres_util.isUserAllowedReview(review) and#}
            {#transres_util.isReviewCorrespondsToState(review)#}
        {#%}#}
            {#{% set actionLinks = transres_util.getReviewEnabledLinkActions(review) %}#}
            {#{% for actionLink in actionLinks %}#}
                    {#{{ actionLink|raw }}#}
            {#{% endfor %}#}
        {#{% endif %}#}
    {#{% endfor %}#}
    {#{% if cycle == "show" and actionLinks %}#}
        {#{% if actionLinks|length > 0 %}#}
            {#{% set threadId = project.vars.value.id ~ "-" ~ review.getStateStr() %}#}
            {#{% include 'FOSCommentBundle:Thread:async.html.twig' with {'id': threadId} %}#}
        {#{% endif %}#}
    {#{% endif %}#}
{#{% endmacro %}#}

{#show allowed transition to links#}
{% macro projectReviewsEnabledLinkActions(project,reviews,cycle) %}
    {% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}
    {% set actionLinks = [] %}
    {% set threadId = null %}
    {% for review in reviews %}
        {#{{ transres.projectSingleReview(project,review,cycle,'transres-irbreviews','noprototype',sitename,showAddDeleteBtn,addReviewButtons) }}#}
        {#{{ transres.reviewEnabledLinkActionsHeader(project,review,cycle) }}#}

        {#transres_util.isUserAllowedReview(review) and#}
        {#transres_util.isReviewCorrespondsToState(review)#}
        {% if
            cycle == "review" and
            review.id and
            transres_util.isUserAllowedFromThisStateByProjectOrReview(null,review) and
            transres_util.isReviewCorrespondsToState(review)
        %}
            {#getReviewEnabledLinkActions<br>#}
            {% set actionReviewLinks = transres_util.getReviewEnabledLinkActions(review) %}
            {% set actionLinks = actionLinks|merge({ (loop.index0): actionReviewLinks}) %}

            {% set threadId = project.id ~ "-" ~ review.getStateStr() %}
            {#{% set threadIds = threadIds|merge({ (loop.index0): threadId}) %}#}
        {% else %}
            {#no getReviewEnabledLinkActions<br>#}
        {% endif %}

        {#getResubmitButtons#}
        {#{% if review.id %}#}
            {#<p>#}
                {#{% set actionReSubmitLinks = transres_util.getResubmitButtons(review) %}#}
                {#{% for actionReSubmitLink in actionReSubmitLinks %}#}
                    {#{{ actionReSubmitLink|raw }}#}
                {#{% endfor %}#}
            {#</p>#}
        {#{% endif %}#}

    {% endfor %}
    {% if threadId and actionLinks|length > 0 %}

        {#Add field "Update expiration date" (irbExpirationDate) in the IRB Review page#}
        {% if project.state == "irb_review" %}
            {#<p>Current project's IRB Expiration Date: {{ project.getIrbExpirationDate()|date("m/d/Y") }}</p>#}
            <p>Current project's IRB Expiration Date:{{ transres_formnode_util.getProjectFormNodeFieldByName(project,"IRB Expiration Date") }}</p>
            {{ transres.fieldDateLabel("Update IRB Expiration Date:") }}
        {% endif %}

        <div class="well transres-review-holder text-center col-xs-12">
            {% for actionLink in actionLinks %}
                <p>
                {% for actionLinkSet in actionLink %}
                    {{ actionLinkSet|raw }}
                {% endfor %}
                </p>
            {% endfor %}
            {% include 'FOSCommentBundle:Thread:async.html.twig' with {'id': threadId} %}
        </div>
    {% endif %}
{% endmacro %}

{% macro projectHeader(project) %}
    <p>Project State: <strong>{{ transres_util.getStateLabelByProject(project) }}</strong></p>

{% endmacro %}


{% macro getActionReviewCommentsSection(project, cycle, sitename, addReviewButtons) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% import "OlegUserdirectoryBundle::Default/usermacros.html.twig" as usermacros %}
    {% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}

    {% if addReviewButtons is not defined %}
        {% set addReviewButtons = 0 %}
    {% endif %}

    {% set showIrbReview = 1 %}
    {% set showAdminReview = 1 %}
    {% set showCommiteeReview = 1 %}
    {% set showFinalReview = 1 %}

    {% set showAddDeleteBtn = 0 %}
    {% if is_granted('ROLE_TRANSRES_ADMIN') or is_granted('ROLE_TRANSRES_PRIMARY_REVIEWER') or is_granted('ROLE_TRANSRES_PRIMARY_REVIEWER_DELEGATE') %}
        {% set showAddDeleteBtn = 1 %}
    {% endif %}

    {% if showIrbReview and project.irbReviews is defined %}
        {#show project.irbReviews<br>#}
        {{ transres.projectReviewsEnabledLinkActions(project,project.irbReviews,cycle) }}
    {% endif %}

    {% if showAdminReview and project.adminReviews is defined %}
        {#{% for review in project.adminReviews %}#}
            {#{{ transres.projectSingleReview(project,review,cycle,'transres-adminreviews','noprototype',sitename,showAddDeleteBtn,addReviewButtons) }}#}
            {#{{ transres.reviewEnabledLinkActionsHeader(project,review,cycle) }}#}
        {#{% endfor %}#}
        {#show project.adminReviews<br>#}
        {{ transres.projectReviewsEnabledLinkActions(project,project.adminReviews,cycle) }}
    {% endif %}

    {% if showCommiteeReview and project.committeeReviews is defined %}
        {#{% for review in project.committeeReviews %}#}
            {#{{ transres.projectSingleReview(project,review,cycle,'transres-committeereviews','noprototype',sitename,showAddDeleteBtn,addReviewButtons) }}#}
            {#{{ transres.reviewEnabledLinkActionsHeader(project,review,cycle) }}#}
        {#{% endfor %}#}
        {#show project.committeeReviews<br>#}
        {{ transres.projectReviewsEnabledLinkActions(project,project.committeeReviews,cycle) }}
    {% endif %}

    {% if showFinalReview and project.finalReviews is defined %}
        {#{% for review in project.finalReviews %}#}
            {#{{ transres.projectSingleReview(project,review,cycle,'transres-finalreviews','noprototype',sitename,showAddDeleteBtn,addReviewButtons) }}#}
            {#{{ transres.reviewEnabledLinkActionsHeader(project,review,cycle) }}#}
        {#{% endfor %}#}
        {#show project.finalReviews<br>#}
        {{ transres.projectReviewsEnabledLinkActions(project,project.finalReviews,cycle) }}
    {% endif %}

{% endmacro %}



{% macro projectReviews(project, cycle, sitename, showComments) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% import "OlegUserdirectoryBundle::Default/usermacros.html.twig" as usermacros %}
    {% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}

    {#{% if showAddDeleteBtn is not defined %}#}
        {#{% set showAddDeleteBtn = 0 %}#}
    {#{% endif %}#}

    {#{% if prototype == "prototype" %}#}
        {#{% set forminterview = reviews.vars.prototype %}#}
    {#{% else %}#}
        {#{% set forminterview = reviews %}#}
    {#{% endif %}#}

    {#{% if project.state.vars.value == "irb_review" %}#}
        {#{% set reviews = project.irbReviews %}#}
    {#{% endif %}#}
    {#{% if project.state.vars.value == "admin_review" %}#}
        {#{% set reviews = project.adminReviews %}#}
    {#{% endif %}#}
    {#{% if project.state.vars.value == "committee_review" %}#}
        {#{% set reviews = project.committeeReviews %}#}
    {#{% endif %}#}
    {#{% if project.state.vars.value == "final_review" %}#}
        {#{% set reviews = project.finalReviews %}#}
    {#{% endif %}#}

    {% if showComments is not defined %}
        {% set showComments = 0 %}
    {% endif %}

    {% set showIrbReview = 1 %}
    {% set showAdminReview = 1 %}
    {% set showCommiteeReview = 1 %}
    {% set showFinalReview = 1 %}

    {% set showAddDeleteBtn = 0 %}
    {% if is_granted('ROLE_TRANSRES_ADMIN') or is_granted('ROLE_TRANSRES_PRIMARY_REVIEWER') or is_granted('ROLE_TRANSRES_PRIMARY_REVIEWER_DELEGATE') %}
        {% set showAddDeleteBtn = 1 %}
    {% endif %}


    {#Reviewers accordion#}
    <div class="panel-group" id="accordionReviewers" role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="reviewersHeading">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordionReviewers" href="#accordionReviewersBody" aria-expanded="true" aria-controls="reviewersBase">
                        Reviewers
                    </a>
                </h4>
            </div>
            <div id="accordionReviewersBody" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="reviewersHeading">
                <div class="panel-body">
    {#EOF Reviewers accordion#}


    {% if showIrbReview and project.irbReviews is defined %}
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-primary">
                <div class="panel-heading" role="tab" id="irbreviewHeading">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#irbreview" aria-expanded="true" aria-controls="reviewBase">
                            {#{{ transres_util.getStateSimpleLabelByName(project.state.vars.value) }}#}
                            IRB Review
                        </a>
                    </h4>
                </div>
                <div id="irbreview" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="irbreviewHeading">
                    <div class="panel-body">
                        <div class="transres-irbreviews-holder">


                            {#count irb reviewers={{ project.irbReviews|length }}<br>#}
                            {% for review in project.irbReviews %}
                                {#show review with reviewer={{ review.vars.value.reviewer.getUsernameOptimal }}<br>#}
                                {{ transres.projectSingleReview(project,review,cycle,'transres-irbreviews','noprototype',sitename,showAddDeleteBtn) }}
                            {% endfor %}

                            {% if showComments == 1 %}
                                {% if project.irbReviews|length > 0 %}
                                    {% set threadId = project.vars.value.id ~ "-" ~ project.vars.value.irbReviews|first.getStateStr() %}
                                    {#irb threadId={{ threadId }}<br>#}
                                    {{ render(controller('OlegTranslationalResearchBundle:Project:threadCommentsShow', { 'id': threadId })) }}
                                {% endif %}
                            {% endif %}

                            {% if cycle != "show" and cycle != "review" %}
                                {% if showAddDeleteBtn %}
                                    {{ usermacros.addNewObjectBtn(cycle,'transres-irbreviews','Add IRB Reviewer') }}
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

    {% if showAdminReview and project.adminReviews is defined %}
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-primary">
                <div class="panel-heading" role="tab" id="adminreviewHeading">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#adminreview" aria-expanded="true" aria-controls="reviewBase">
                            {#{{ transres_util.getStateSimpleLabelByName(project.state.vars.value) }}#}
                            Admin Review
                        </a>
                    </h4>
                </div>
                <div id="adminreview" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="adminreviewHeading">
                    <div class="panel-body">
                        <div class="transres-adminreviews-holder">

                            {% for review in project.adminReviews %}
                                {{ transres.projectSingleReview(project,review,cycle,'transres-adminreviews','noprototype',sitename,showAddDeleteBtn) }}
                            {% endfor %}

                            {% if showComments == 1 %}
                                {% if project.adminReviews|length > 0 %}
                                    {% set threadId = project.vars.value.id ~ "-" ~ project.vars.value.adminReviews|first.getStateStr() %}
                                    {{ render(controller('OlegTranslationalResearchBundle:Project:threadCommentsShow', { 'id': threadId })) }}
                                {% endif %}
                            {% endif %}

                            {% if cycle != "show" and cycle != "review" %}
                                {% if showAddDeleteBtn %}
                                    {{ usermacros.addNewObjectBtn(cycle,'transres-adminreviews','Add Admin Reviewer') }}
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

    {% if showCommiteeReview and project.committeeReviews is defined %}
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-primary">
                <div class="panel-heading" role="tab" id="committeereviewHeading">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#committeereview" aria-expanded="true" aria-controls="reviewBase">
                            {#{{ transres_util.getStateSimpleLabelByName(project.state.vars.value) }}#}
                            Committee Reviews
                        </a>
                    </h4>
                </div>
                <div id="committeereview" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="committeereviewHeading">
                    <div class="panel-body">
                        <div class="transres-committeereviews-holder">

                            {% for review in project.committeeReviews %}
                                {{ transres.projectSingleReview(project,review,cycle,'transres-committeereviews','noprototype',sitename,showAddDeleteBtn) }}
                            {% endfor %}

                            {% if showComments == 1 %}
                                {% if project.committeeReviews|length > 0 %}
                                    {% set threadId = project.vars.value.id ~ "-" ~ project.vars.value.committeeReviews|first.getStateStr() %}
                                    {{ render(controller('OlegTranslationalResearchBundle:Project:threadCommentsShow', { 'id': threadId })) }}
                                {% endif %}
                            {% endif %}

                            {% if cycle != "show" and cycle != "review" %}
                                {% if showAddDeleteBtn %}
                                    {{ usermacros.addNewObjectBtn(cycle,'transres-committeereviews','Add Committee Reviewer') }}
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

    {% if showFinalReview and project.finalReviews is defined %}
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-primary">
                <div class="panel-heading" role="tab" id="finalreviewHeading">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#finalreview" aria-expanded="true" aria-controls="reviewBase">
                            {#{{ transres_util.getStateSimpleLabelByName(project.state.vars.value) }}#}
                            Final Review
                        </a>
                    </h4>
                </div>
                <div id="finalreview" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="finalreviewHeading">
                    <div class="panel-body">
                        <div class="transres-finalreviews-holder">

                            {% for review in project.finalReviews %}
                                {{ transres.projectSingleReview(project,review,cycle,'transres-finalreviews','noprototype',sitename,showAddDeleteBtn) }}
                            {% endfor %}

                            {% if showComments == 1 %}
                                {% if project.finalReviews|length > 0 %}
                                    {% set threadId = project.vars.value.id ~ "-" ~ project.vars.value.finalReviews|first.getStateStr() %}
                                    {{ render(controller('OlegTranslationalResearchBundle:Project:threadCommentsShow', { 'id': threadId })) }}
                                {% endif %}
                            {% endif %}

                            {% if cycle != "show" and cycle != "review" %}
                                {% if showAddDeleteBtn %}
                                    {{ usermacros.addNewObjectBtn(cycle,'transres-finalreviews','Add Final Reviewer') }}
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

    {#Reviewers accordion#}
                </div>
            </div>
        </div>
    </div>
    {#EOF Reviewers accordion#}

{% endmacro %}

{% macro projectSingleReview( project, review, cycle, classname, prototype, sitename, showAddDeleteBtn ) %}
    {% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
    {% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}

    {% if showAddDeleteBtn is not defined %}
        {% set showAddDeleteBtn = 0 %}
    {% endif %}

    {% set reviewId = null %}
    {#{% set reviewInfo = null %}#}
    {% if prototype == "prototype" %}
        {% set formreview = review.vars.prototype %}
        {#{% set reviewInfo = "Will be added as a new reviewer after update" %}#}
    {% else %}
        {% set formreview = review %}
        {% set reviewId = review.id.vars.value %}
        {% if review.id.vars.value == null %}
            {#{% set reviewInfo = "Will be added as a new default reviewer after update" %}#}
        {% endif %}
    {% endif %}


    {% set wellclass = "alert-default well well-sm" %}

    <div class="user-collection-holder alert {{ classname }} {{ wellclass }}">

        {#please hide these blue wells with these sentences#}
        {#{% if reviewInfo %}#}
            {#<p>#}
            {#<div class="alert alert-info" role="alert">#}
                {#{{ reviewInfo }}#}
            {#</div>#}
            {#</p>#}
        {#{% endif %}#}
        {% if cycle != "show" and cycle != "review" and showAddDeleteBtn %}
            <div class="text-right">
                <button type="button" class="btn btn-default btn-sm" onClick="removeExistingObject(this,'{{ classname }}')" ><span class="glyphicon glyphicon-remove"></span></button>
            </div>
            <br>
        {% else %}
            {#do nothing#}
        {% endif %}

        {#{% if formreview.reviewer.vars.value %}#}
        {#formreview.reviewer={{ formreview.vars.value.reviewer.getUsernameOptimal() }}#}
        {#{% endif %}#}

        {% if formreview.id is defined %}
            {{ form_widget(formreview.id) }}
        {% endif %}

        {#{% set showReviewers = false %}#}
        {#{% if  %}#}
        {#formreview.vars.value.id={{ formreview.vars.value.id }}<br>#}
        {% if formreview.vars.value and (formreview.vars.value.reviewedBy or formreview.vars.value.updatedate) %}
            {#formreview.vars.value.reviewedBy.id={{ formreview.vars.value.reviewedBy.id }}<br>#}
            {#{{ formmacros.simplefield("Reviewed By:", transres.userHtml(formreview.vars.value.reviewedBy), "input", "disabled") }}#}
            {% set reviewedBy = null %}
            {% if formreview.vars.value.reviewedBy %}
                {#show it only to admin, reviewers and reviewedBy users#}
                {% if transres_util.showReviewedBy(formreview.vars.value) %}
                    {% set reviewedBy = " by" ~ transres.userHtml(formreview.vars.value.reviewedBy) %}
                {% endif %}
            {% endif %}
            <p>
                {#Reviewed by {{ transres.userHtml(formreview.vars.value.reviewedBy) }} on {{ updatedate|date("m/d/Y H:i") }}#}
                Reviewed{{ reviewedBy|raw }} on {{ formreview.vars.value.updatedate|date("m/d/Y") }} at {{ formreview.vars.value.updatedate|date("H:i") }}
            </p>
        {% endif %}

        {% if formreview.primaryReview is defined %}
            {{ formmacros.checkbox(formreview.primaryReview) }}
        {% endif %}

        {% if formreview.reviewer is defined %}
            {{ formmacros.field(formreview.reviewer) }}
        {% endif %}

        {% if formreview.reviewerDelegate is defined %}
            {{ formmacros.field(formreview.reviewerDelegate) }}
        {% endif %}

        {% if formreview.decision is defined %}
            {{ formmacros.field(formreview.decision) }}
        {% endif %}

        {#{% if formreview.comments is defined %}#}
            {#{{ formmacros.field(formreview.comments) }}#}
        {#{% endif %}#}

        {#allow change review by admin and reviewer only in the view page. Clicking this button on the edit page will not save any changes#}
        {#{% if#}
            {#cycle == "show" and#}
            {#reviewId and#}
            {#transres_util.isUserAllowedReview(review.vars.value) and#}
            {#transres_util.isReviewCorrespondsToState(review.vars.value)#}
        {#%}#}
            {#<p>#}
                {#<a class="btn btn-primary"#}
                   {#href="{{ path(translationalresearch_sitename~'_review_edit',{'stateStr':review.vars.value.getStateStr(),'reviewId': reviewId}) }}"#}
                    {#>Update Review</a>#}
            {#</p>#}

            {#addReviewButtons={{ addReviewButtons }}<br>#}
            {#{% if addReviewButtons is defined and addReviewButtons %}#}
                {#<p>#}
                {#{{ transres.reviewEnabledLinkActionsHeader(project.vars.value,review.vars.value,cycle) }}#}
                {#</p>#}
            {#{% endif %}#}

        {#{% endif %}#}

        {#{% if reviewId %}#}
            {#<p>#}
                {#{% set actionLinks = transres_util.getResubmitButtons(review.vars.value) %}#}
                {#{% for actionLink in actionLinks %}#}
                    {#{{ actionLink|raw }}#}
                {#{% endfor %}#}
            {#</p>#}
        {#{% endif %}#}

        {#reviewId={{ reviewId }}<br>#}
        {#project.vars.value.id={{ project.vars.value.id }}<br>#}
        {#TODO: create an individual page for each threadId and include this page below#}
        {#{% if reviewId and project.vars.value.id %}#}
            {#projectId reviewId reviewClass-getStateStr#}
            {#{% set threadId = project.vars.value.id ~ "-" ~ reviewId ~ "-" ~ review.vars.value.getStateStr() %}#}
            {#{% set threadId = project.vars.value.id ~ "-" ~ review.vars.value.getStateStr() %}#}
            {#threadId={{ threadId }}<br>#}
            {#<iframe src="/order/api/threads/{{threadId}}/comments">#}
                {#{% include 'FOSCommentBundle:Thread:async.html.twig' with {'id': threadId} %}#}
            {#</iframe>#}
            {#<div class="thread-fos" data-thread-id="{{ threadId }}"></div>#}

            {#<a class="btn btn-primary"#}
                {#href="{{ path(translationalresearch_sitename~'_review_edit',{'stateStr':review.vars.value.getStateStr(),'reviewId': reviewId}) }}"#}
            {#>Update Review</a>#}

            {#{% include 'FOSCommentBundle:Thread:async.html.twig' with {'thread_container': '.comments-box'} %}#}
            {#<div class="comments-box" data-thread-id="{{ threadId }}"></div>#}

            {#{% include 'OlegTranslationalResearchBundle:Thread:async.html.twig' with {'id': threadId} %}#}

            {#<p>#}
                {#{{ render(controller('OlegTranslationalResearchBundle:Project:threadComments', { 'id': threadId })) }}#}
            {#</p>#}

            {#{% if cycle == "show" %}#}

                {#{% if addReviewButtons is defined and addReviewButtons %}#}
                    {#{{ render(controller('OlegTranslationalResearchBundle:Project:threadComments', { 'id': threadId })) }}#}
                {#{% else %}#}
                    {#{{ render(controller('OlegTranslationalResearchBundle:Project:threadCommentsShow', { 'id': threadId })) }}#}
                {#{% endif %}#}

            {#{% endif %}#}

            {#{% if cycle == "edit" %}#}
                {#{{ render(controller('OlegTranslationalResearchBundle:Project:threadCommentsShow', { 'id': threadId })) }}#}
            {#{% endif %}#}

        {#{% endif %}#}

        {#{% if cycle == "edit" and threadId is defined and threadId %}#}
            {#{{ render(controller('OlegTranslationalResearchBundle:Project:threadCommentsShow', { 'id': threadId })) }}#}
        {#{% endif %}#}

    </div>
{% endmacro %}

{% macro userHtml(user) %}
    {#1user.id={{ user.id }}<br>#}
    {% if user %}
        {#2user.id={{ user.id }}<br>#}
        {% set personurl = path(translationalresearch_sitename~'_showuser',{'id':user.id}) %}
        {% set personlink = '<a href="'~personurl~'" target="_blank">'~user.getUsernameOptimal()~'</a>'  %}
        {{ personlink|raw }}
    {% endif %}
{% endmacro %}

{% macro getProjectReviewPrototypeFormData(form, cycle, sitename) %}
    {% import "OlegTranslationalResearchBundle::Default/transres.html.twig" as transres %}
    {% import "OlegUserdirectoryBundle::Default/usermacros.html.twig" as usermacros %}

    <div id="form-prototype-data"
            data-userurllink = "{{ usermacros.userUrlLink()|e }}"
            data-uploadurl = "{{ oneup_uploader_endpoint('transres_gallery') }}"
            data-userid = "{{ app.user.id }}"

            {% if form %}
                {% if form.irbReviews is defined %}
                    data-prototype-transres-irbreviews = "{{ transres.projectSingleReview(form,form.irbReviews,cycle,'transres-irbreviews','prototype', sitename,1)|e }}"
                {% endif %}
                {% if form.adminReviews is defined %}
                    data-prototype-transres-adminreviews = "{{ transres.projectSingleReview(form,form.adminReviews,cycle,'transres-adminreviews','prototype', sitename,1)|e }}"
                {% endif %}
                {% if form.committeeReviews is defined %}
                    data-prototype-transres-committeereviews = "{{ transres.projectSingleReview(form,form.committeeReviews,cycle,'transres-committeereviews','prototype', sitename,1)|e }}"
                {% endif %}
                {% if form.finalReviews is defined %}
                    data-prototype-transres-finalreviews = "{{ transres.projectSingleReview(form,form.finalReviews,cycle,'transres-finalreviews','prototype', sitename,1)|e }}"
                {% endif %}
            {% endif %}
    ></div>

{% endmacro %}

{% macro getProjectShowPrototypeFormData(form, cycle, sitename) %}
    {% import "OlegUserdirectoryBundle::Default/usermacros.html.twig" as usermacros %}

    <div id="form-prototype-data"
         data-userurllink = "{{ usermacros.userUrlLink()|e }}"
         data-uploadurl = "{{ oneup_uploader_endpoint('transres_gallery') }}"
         data-userid = "{{ app.user.id }}"
    ></div>

{% endmacro %}

{% macro fieldDateLabel( label ) %}
    <p>
    <div class="row">
        <div class="col-xs-3" align="right">
        </div>
        <div class="col-xs-3" align="right">
            <strong>{{ label|raw }}</strong>
        </div>
        <div class="col-xs-3" align="left">
            {#regular-datepicker#}
            <div class="input-group input-group-reg date allow-future-date">
                <input id="transres_irbExpirationDate"
                       class="datepicker form-control submit-on-enter-field"
                       placeholder="IRB Expiration Date" type="text">
                <span class="input-group-addon calendar-icon-button"><i class="glyphicon glyphicon-calendar"></i></span>
            </div>
        </div>
        <div class="col-xs-3" align="right">
        </div>
    </div>
    </p>
{% endmacro %}
