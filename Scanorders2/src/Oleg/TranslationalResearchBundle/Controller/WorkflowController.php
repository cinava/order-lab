<?php
/**
 * Copyright (c) 2017 Cornell University
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * Created by PhpStorm.
 * User: ch3
 * Date: 8/24/2017
 * Time: 4:41 PM
 */

namespace Oleg\TranslationalResearchBundle\Controller;


use Oleg\TranslationalResearchBundle\Entity\Project;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template;
use Symfony\Component\Form\Exception\LogicException;
use Symfony\Component\HttpFoundation\Request;

class WorkflowController extends Controller
{

    /**
     * Dump Workflows
     *
     * @Route("/workflow/", name="translationalresearch_workflow_show")
     */
    public function dumpWorkflowAction(Request $request)
    {
//        $definitionBuilder = new DefinitionBuilder();
//        $definition = $definitionBuilder->addPlaces(['draft', 'review', 'rejected', 'published'])
//            // Transitions are defined with a unique name, an origin place and a destination place
//            ->addTransition(new Transition('to_review', 'draft', 'review'))
//            ->addTransition(new Transition('publish', 'review', 'published'))
//            ->addTransition(new Transition('reject', 'review', 'rejected'))
//            ->build()
//        ;
//
//        $dumper = new GraphvizDumper();
//        //echo $dumper->dump($definition);
//
//        $graphviz = new GraphViz();
//        $graphviz->display($dumper);

        //$file = 'semitransparent.png'; // path to png image
        //$img = imagecreatefrompng($file); // open image

        $webpath = $this->get('kernel')->getRootDir();
        //echo "webPath=$webpath<br>";
        //exit();

        //png is generated by Graphviz2.38:
        //$ php bin/console workflow:dump transres_project | "C:\Program Files (x86)\Graphviz2.38\bin\dot.exe" -Tpng -o graph.png
        $file = $webpath."/../src/Oleg/TranslationalResearchBundle/Util/graph.png";
        if (!file_exists($file)) {
            exit("File not exists ".$file);
        }

        $imagename = "Project Workflow";

        header("Content-Type: image/png");
        header('Content-Length: ' . filesize($file));
        header("Content-Disposition: inline; filename='$imagename'");
        readfile($file);
        exit(0);
    }


    /**
     * https://symfony.com/doc/current/workflow/usage.html
     *
     * @Route("/to-irb-review/{id}", name="translationalresearch_to_irb_review")
     * @Method("GET")
     */
    public function homeAction( Project $project )
    {
        $workflow = $this->container->get('state_machine.transres_project');

        $workflow->can($project, 'to_irb_review'); // True
        $workflow->can($project, 'to_admin_review'); // False

        // Update the currentState on the post
        if( $workflow->can($project, 'to_irb_review') ) {
            try {
                $workflow->apply($project, 'to_irb_review');
                //change status
                $project->setStatus('irb_review');
                $this->addFlash(
                    'error',
                    'change status to IRB Review OK.'
                );
            } catch (LogicException $e) {
                $this->addFlash(
                    'error',
                    'change status to IRB Review failed.'
                );
            }
        }

        // See all the available transition for the post in the current state
        $transitions = $workflow->getEnabledTransitions($project);
        echo "<pre>";
        print_r($transitions);
        echo "</pre>";

        return $this->redirectToRoute('translationalresearch_home');
    }


}