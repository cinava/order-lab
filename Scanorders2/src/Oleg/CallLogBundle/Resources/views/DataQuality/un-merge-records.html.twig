{% extends "OlegCallLogBundle::Default/base.html.twig" %}

{% import "OlegOrderformBundle::Default/formmacros.html.twig" as formmacros %}
{% import "OlegUserdirectoryBundle::Default/usermacros.html.twig" as usermacros %}
{% import "OlegCallLogBundle::Default/calllogmacros.html.twig" as calllogmacros %}


{% block title %}
    {{ title }}
{% endblock %}


{% block content %}

    <h4 class="text-info" align="center">
        {{ title }}
    </h4>
    <br>


    <input type="hidden" id="formcycle" value="{{ cycle }}" />
    <input type="hidden" id="orderformtype" value="calllog" />
    <input type="hidden" id="formtype" value="{{ formtype }}" />

    <div id="calllog-patient-list">

    {% if form1 is defined %}
        {{ calllogmacros.patientInfoSection(form1,cycle,'patient-holder-1','Patient Info',formtype) }}
    {% endif %}

    {% if form2 is defined %}
        {{ calllogmacros.patientInfoSection(form2,cycle,'patient-holder-2','Second Patient Info',formtype) }}
    {% endif %}

    </div>

    <div id="calllog-msg-danger-box" class="alert alert-danger" style="display: none; margin-top: 5px; margin-bottom: 5px;"></div>
    <div id="calllog-msg-success-box" class="alert alert-success" style="display: none; margin-top: 5px; margin-bottom: 5px;"></div>

    <button
            id="unmerge_patient_button" type="button"
            class="btn btn-lg btn-success" align="center"
            onclick="unmergePatientBtn()"
            style="display:none;"
    >
    {% if formtype == "unmerge" %}
        Unmerge
    {% else %}
        Set Master Record
    {% endif %}
    </button>


{% endblock %}


{% block additionaljs %}
    <script language="Javascript">
        $(document).ready(function() {
            //hide all alias
            calllogHideAllAlias(true,true);
            showHideUnMergeButton();
        });

        //triggered by class calllog-patient-id
        function showHideUnMergeButton() {
            $('.calllog-patient-id').on('change', function() {
                //console.log('calllog-patient-id changed; value='+$(this).val());
                var counter = 0;
                var totalCounter = 0;
                $('.calllog-patient-id').each(function() {
                    if( $(this).val() ) {
                        counter++;
                    }
                    totalCounter++;
                });
                //console.log("counter="+counter+" ?= "+totalCounter);
                if( counter > 0 && counter == totalCounter ) {
                    $('#unmerge_patient_button').show();
                } else {
                    $('#unmerge_patient_button').hide();
                }
            });
        }

        function unmergePatientBtn() {

            $('#calllog-msg-success-box').html("");
            $('#calllog-msg-success-box').hide();
            $('#calllog-msg-danger-box').html("");
            $('#calllog-msg-danger-box').hide();

            var patientIds = [];

            var formtype = $('#formtype').val();
            //console.log('formtype='+formtype);

            //console.log('calllog-patient-master-record length='+$("input[name=calllog-patient-master-record]").length);
            var masterMergeRecordId = $("input[name=calllog-patient-master-record]:checked").val();
            //console.log('masterMergeRecordId='+masterMergeRecordId);

            if( formtype == 'unmerge' ) {
                var error = false;
                var msg = "";
                $('input[name="un-merge-patients"]:checked').each(function() {

                    if( this.value == masterMergeRecordId ) {
                        msg += "You are going to un-merge a Master Patient Record with ID # "+masterMergeRecordId+".";
                        msg += " Please choose an alternative Master Patient Record to continue.";
                        $('#calllog-msg-danger-box').html(msg);
                        $('#calllog-msg-danger-box').show();
                        error = true;
                    }

                    //use only patient ids from calllog-patient-id-
                    patientIds.push(this.value);
                });
                if( error ) {
                    return;
                }
                var url = Routing.generate('calllog_unmerge_patient_records_ajax');
            } else {
                var url = Routing.generate('calllog_set_master_patient_record_ajax');
            }
            //console.log('patientIds:');
            //console.log(patientIds);

            $.ajax({
                url: url,
                timeout: _ajaxTimeout,
                async: true,
                data: {masterId: masterMergeRecordId, patientIds: patientIds.join(",")},
            }).success(function(data) {
                //console.log("output="+data);
                if( data.error == false ) {
                    //console.log("unmerged OK; data="+data.msg);
                    $('#calllog-msg-success-box').html(data.msg);
                    $('#calllog-msg-success-box').show();
                    //remove all buttons
                    $("button").hide();
                } else {
                    console.log("unmerged failed; data="+data.msg);
                    $('#calllog-msg-danger-box').html(data.msg);
                    $('#calllog-msg-danger-box').show();
                }
            });

        }

        //overwrite function
        matchingPatientBtnClick = function(holderId) {
            //console.log('un-merged holderId='+holderId);

            var holder = getHolder(holderId);

            //clear no matching box
            holder.find('#calllog-select-patient-danger-box').hide();
            holder.find('#calllog-select-patient-danger-box').html("");

            var index = holder.find('#calllog-matching-patients-table-'+holderId).find('.active').attr('id');
            //remove holderId from index
            index = index.replace("-"+holderId, "");
            //console.log('index='+index);

            //find patient with id from _patients array
            var selectedPatient = getPatientByIdFromPatients(index,_patients);

            //for call_entry return master record instead of the actual clicked patient record
            //var masterPatient = null;
            var mergedPatientsInfo = null;
            var mergedPatientsInfoLength = null;
            var masterPatientId = selectedPatient['masterPatientId'];
            console.log("masterPatientId=" + masterPatientId);
            if( masterPatientId ) {
                //console.log("masterPatientId=" + masterPatientId);
                selectedPatient = getPatientByIdFromPatients(masterPatientId,_patients);
                mergedPatientsInfo = selectedPatient['mergedPatientsInfo'][masterPatientId]['patientInfo'];
                mergedPatientsInfoLength = getPatientsLength(mergedPatientsInfo);
            }

            //This patient record has not been merged with any other patient records.
            //var mergedPatientsInfo = selectedPatient['mergedPatientsInfo'][masterPatientId];
            //var mergedPatientsInfoLength = getMergedPatientsInfoLength(mergedPatientsInfo);
            console.log('mergedPatientsInfo='+mergedPatientsInfo);
            console.log('mergedPatientsInfoLength='+mergedPatientsInfoLength);
            if( mergedPatientsInfo && mergedPatientsInfoLength > 0 ) {
                //ok
                //console.log('mergedPatientsInfo ok');
            } else {
                //console.log('mergedPatientsInfo not ok');
                //alert("This patient record has not been merged with any other patient records.");
                holder.find('#calllog-select-patient-danger-box').html("This patient record has not been merged with any other patient records.");
                holder.find('#calllog-select-patient-danger-box').show();
                return;
            }

            //populatePatientInfo(_patients[index],null,true,holderId);
            //disableAllFields(true,holderId);

            populateInputFieldCalllog(holder.find(".calllog-patient-id"),selectedPatient,'id',true);
            holder.find(".calllog-patient-id").trigger('change');
            holder.find(".calllog-patient-id").change();

            //show edit patient info button
            //holder.find('#edit_patient_button').show();
            //hide "No single patient is referenced by this entry or I'll add the patient info later" link
            //holder.find('#callentry-nosinglepatient-link').hide();

            //change the "Find or Add Patient" button title to "Re-enter Patient"
            //holder.find('#reenter_patient_button').show();
            //holder.find('#search_patient_button').hide();

            //remove and hide matching patients table
            holder.find('#calllog-matching-patients-table-'+holderId).remove();
            holder.find('#calllog-matching-patients').html('');
            holder.find('#calllog-matching-patients').hide();

            //remove old and create a new list of the "Patient Info"
            $('.calllog-patient-holder').remove();
            createPatientInfos( selectedPatient );

        }

        function createPatientInfos( patient ) {

            //console.log('createPatientInfos; id='+patient.id);

            var patientInfo = patient['mergedPatientsInfo'][patient.id]['patientInfo'];
            //var mergeInfo = patient['mergedPatientsInfo'][patient.id]['mergeInfo'];

            //var infosHtml = "patient id " + patient.id + "<br>";
            var infosHtml = patientInfoHtml(patient, true);


            for( var patientId in patientInfo ) {
                if( patientInfo.hasOwnProperty(patientId) ) {
                    //infosHtml = infosHtml + '<p><div class="alert alert-info">'+mergedId+'</div></p>';

                    infosHtml = infosHtml + patientInfoHtml(patientInfo[patientId],false);

                }
            }

            //infosHtml = "<p>" + infosHtml + "</p>";

            $("#calllog-patient-list").append(infosHtml);
        }

        //function patientInfoHtml( patient, mergeInfo, mergedId ) {
        function patientInfoHtml( patient, masterPatient ) {

            var formtype = $('#formtype').val();
            //console.log('formtype='+formtype);
            var unMergeBox = "";
            if( formtype == 'unmerge' ) {
                var unMergeBoxArr = [];
                patient.mergeInfo.forEach(function(entry) {
                    console.log("MID="+entry.mergeId+"; details="+entry.mergeDetails);
                    var details = '<label style="margin-right: 5px;">Un-Merge</label>' +
                            '<input type="checkbox" name="un-merge-patients" value="' + patient.id + '" style="margin-right: 15px;">';
                    unMergeBoxArr.push(details);
                });
                //unMergeBox = '<label style="margin-right: 5px;">Un-Merge</label>' +
                //'<input type="checkbox" name="un-merge-patients" value="' + patient.id + '" style="margin-right: 15px;">';
                unMergeBox = unMergeBoxArr.join("<br>");
            }

            var mergedId = null;

            var selectedMaser = "";
            if( masterPatient ) {
                selectedMaser = 'checked';
            }

            var radioBox = '<input type="radio" name="calllog-patient-master-record" '+
                    'value="'+patient.id+'" class="calllog-patient-id-radio" '+selectedMaser+'>';

            var patientInfoHtml =
                '<div class="calllog-patient-holder">'+
                    '<input type="hidden" id="calllog-patient-id-'+patient.id+'" class="calllog-patient-id" value="'+patient.id+'" />'+
                    '<input type="hidden" id="calllog-patient-mergeid-'+patient.id+'" class="calllog-patient-mergeid" value="'+mergedId+'" />'+
                    '<div class="panel panel-primary">'+
                        '<div class="panel-heading">'+
                            '<h4 class="panel-title">'+
                                '<a data-toggle="collapse" href="#calllog-PatientInformation-'+patient.id+'">'+
                                    //'Patient Info'+' ID# '+patient.id+' Merge ID# '+mergedId+' '+mergeInfo+
                                    //'Patient Info'+' Merge ID# '+mergedId+' '+mergeInfo+
                                    'Patient '+' ID# '+ patient.id +
                                    //": "+patient.mergeInfo+
                                    unMergeBox+
                                '</a>'+
                            '</h4>'+
                        '</div>'+
                        '<div id="calllog-PatientInformation-'+patient.id+'" class="panel-collapse collapse in">'+
                            '<div class="panel-body">'+
                                simpleRadioField("Master Merge Record:",radioBox)+
                                simpleField("MRN Type:",patient.mrntypestr)+
                                simpleField("MRN:",patient.mrn)+
                                simpleField("DOB:",patient.dob)+
                                simpleField("Patient's Last Name (at the time of encounter):",patient.lastname)+
                                simpleField("Patient's First Name (at the time of encounter):",patient.firstname)+
                                simpleField("Patient's Middle Name (at the time of encounter):",patient.middlename)+
                                simpleField("Patient's Suffix (at the time of encounter):",patient.suffix)+
                                simpleField("Patient's Sex (at the time of encounter):",patient.sexstr)+
                            '</div>'+
                        '</div>'+
                    '</div>'+
                '</div>';

            return patientInfoHtml;
        }
        function simpleField(label,value) {
            var field =
                '<p>'+
                    '<div class="row">'+
                        '<div class="col-xs-6" align="right">'+
                            '<label>'+label+'</label>'+
                        '</div>'+
                        '<div class="col-xs-6" align="left">'+
                            //'<input type="text" class="form-control" value="'+value+'">'+
                            '<div class="form-control" style="min-height:34px; height:auto;" disabled>'+
                                value+
                            '</div>'+
                        '</div>'+
                    '</div>'+
                '</p>';
            return field;
        }
        function simpleRadioField(label,value) {
            var field =
                    '<p>'+
                        '<div class="row">'+
                            '<div class="col-xs-6" align="right">'+
                                '<label>'+label+'</label>'+
                            '</div>'+
                            '<div class="col-xs-6" align="left">'+
                                value+
                            '</div>'+
                        '</div>'+
                    '</p>';
            return field;
        }

    </script>
{% endblock %}
